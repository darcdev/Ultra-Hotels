{
  "pipes": [],
  "interfaces": [
    {
      "name": "AddGuestToBookingDynamicDialogConfig",
      "id": "interface-AddGuestToBookingDynamicDialogConfig-20e6e544e54316642917b5b305d5b87b992a8e4c62685702bfcfd8af2d1eecb5c5b22e027e06dc734b6ae1ac837dc9f60a8553449d27b1f2cdf33b9a824b26c2",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/add-guests-to-room-reservation/add-guests-to-room-reservation.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport {\n  BookingRoomFormModel,\n  GuestBookingFormModel,\n} from '@/app/presenter/models/form/booking.model';\nimport { ButtonDirective } from 'primeng/button';\nimport { NgForOf } from '@angular/common';\nimport { CalendarModule } from 'primeng/calendar';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { CreateCompleteBookingUseCaseService } from '@/app/domain/usecases/booking/create-complete-booking-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { BookingOperationError } from '@/app/core/validations/bookings/booking-operation-error';\nimport { GuestOperationError } from '@/app/core/validations/guests/guest-operation-error';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { MessageModule } from 'primeng/message';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\nexport interface AddGuestToBookingDynamicDialogConfig {\n  room: RoomEntity;\n}\n\n@Component({\n  selector: 'app-add-guests-to-room-reservation',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    IconComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    ButtonDirective,\n    NgForOf,\n    CalendarModule,\n    MessageModule,\n    ProgressSpinnerModule,\n  ],\n  templateUrl: './add-guests-to-room-reservation.component.html',\n  styleUrl: './add-guests-to-room-reservation.component.scss',\n  providers: [MessageService],\n})\nexport class AddGuestsToRoomReservationComponent implements OnInit {\n  reservationForm!: FormGroup<BookingRoomFormModel>;\n\n  actualSearchHotel: HotelFilterModel | null = null;\n  actualSearchHotel$: Observable<HotelFilterModel | null>;\n\n  actualRoom: RoomEntity | null = null;\n  stateReservationProcess = StatusProcessAction.IDLE;\n\n  constructor(\n    private createCompleteBookingUseCaseService: CreateCompleteBookingUseCaseService,\n    private store: Store,\n    private dialogConfig: DynamicDialogConfig<AddGuestToBookingDynamicDialogConfig>,\n    private dynamicDialogRef: DynamicDialogRef\n  ) {\n    this.actualSearchHotel$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n    this.actualRoom = this.dialogConfig.data?.room ?? null;\n  }\n\n  ngOnInit(): void {\n    this.actualSearchHotel$.subscribe(actualSearchFilterHotel => {\n      this.actualSearchHotel = actualSearchFilterHotel;\n    });\n\n    this.reservationForm = new FormGroup<BookingRoomFormModel>({\n      emergencyContactName: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      emergencyContactPhone: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      guests: new FormArray<FormGroup<GuestBookingFormModel>>([]),\n    });\n    this.addGuest();\n  }\n\n  get guests(): FormArray<FormGroup<GuestBookingFormModel>> {\n    return this.reservationForm.controls.guests;\n  }\n\n  createGuestFormGroup(): FormGroup<GuestBookingFormModel> {\n    return new FormGroup<GuestBookingFormModel>({\n      fullName: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      birthDate: new FormControl(null, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      gender: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      documentType: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      documentNumber: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      email: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.email],\n      }),\n      phoneNumber: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    });\n  }\n\n  addGuest(): void {\n    this.guests.push(this.createGuestFormGroup());\n  }\n\n  removeGuest(index: number): void {\n    this.guests.removeAt(index);\n  }\n\n  async submitReservation(): Promise<void> {\n    if (this.reservationForm.invalid) {\n      this.reservationForm.markAllAsTouched();\n      return;\n    }\n    console.log('ssss');\n    console.log(this.actualSearchHotel);\n    this.stateReservationProcess = StatusProcessAction.LOADING;\n    try {\n      await this.createCompleteBookingUseCaseService.execute({\n        emergencyContactFullName:\n          this.reservationForm.value.emergencyContactName!,\n        emergencyPhone: this.reservationForm.value.emergencyContactPhone!,\n        dateArrive: this.actualSearchHotel!.dateArrive!,\n        dateCheckout: this.actualSearchHotel!.dateCheckout!,\n        totalPrice: this.actualRoom!.basePrice + this.actualRoom!.taxes,\n        guests: this.reservationForm.value.guests?.map(guest => ({\n          fullName: guest.fullName!,\n          birthDate: guest.birthDate!,\n          gender: guest.gender!,\n          documentType: guest.documentType!,\n          documentNumber: guest.documentNumber!,\n          email: guest.email!,\n          phoneNumber: guest.phoneNumber!,\n        })),\n        room: this.actualRoom?.id,\n      });\n\n      this.stateReservationProcess = StatusProcessAction.SUCCESS;\n\n      this.dynamicDialogRef.close({\n        success: true,\n      });\n    } catch (error) {\n      this.stateReservationProcess = StatusProcessAction.ERROR;\n\n      if (error instanceof BookingOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear la reservaci√≥n',\n          error.message\n        );\n      } else if (error instanceof GuestOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear los huespedes',\n          error.message\n        );\n      }\n    }\n  }\n\n  protected readonly FormGroup = FormGroup;\n  protected readonly StatusProcessAction = StatusProcessAction;\n}\n",
      "properties": [
        {
          "name": "room",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "AddressCreateHotelForm",
      "id": "interface-AddressCreateHotelForm-c2dc98e819ff4c4faaba8c7a54ab3f469f799159c5bf2846a649ddf8ce21e345b600a7bf928d10ed6298a590510a1e5634b35c5fa2ffce6bcca6e05856d78d60",
      "file": "src/app/presenter/models/form/hotel.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CreateHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressCreateHotelForm>;\n}\n\nexport interface EditHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressHotelForm>;\n  isActive: FormControl<boolean | null>;\n}\n\nexport interface AddressHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude?: FormControl<number | null>;\n  longitude?: FormControl<number | null>;\n}\n\nexport interface AddressCreateHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude: FormControl<number | null>;\n  longitude: FormControl<number | null>;\n}\n",
      "properties": [
        {
          "name": "additionalInfo",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "country",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "latitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "longitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "AddressHotelForm",
      "id": "interface-AddressHotelForm-c2dc98e819ff4c4faaba8c7a54ab3f469f799159c5bf2846a649ddf8ce21e345b600a7bf928d10ed6298a590510a1e5634b35c5fa2ffce6bcca6e05856d78d60",
      "file": "src/app/presenter/models/form/hotel.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CreateHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressCreateHotelForm>;\n}\n\nexport interface EditHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressHotelForm>;\n  isActive: FormControl<boolean | null>;\n}\n\nexport interface AddressHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude?: FormControl<number | null>;\n  longitude?: FormControl<number | null>;\n}\n\nexport interface AddressCreateHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude: FormControl<number | null>;\n  longitude: FormControl<number | null>;\n}\n",
      "properties": [
        {
          "name": "additionalInfo",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "country",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "latitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": true,
          "description": "",
          "line": 20
        },
        {
          "name": "longitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": true,
          "description": "",
          "line": 21
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "AuthSessionResponse",
      "id": "interface-AuthSessionResponse-7b380edef730b5d9d51aeefb3732ae53a4364f563311e09271b41635b913d593088024c61be02273420198ce525505b149474bd2cc5e27facb79b17d77a0349a",
      "file": "src/app/core/models/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  AuthError,\n  Provider,\n  Session,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport interface OAuthInfoRequest {\n  provider: Provider;\n}\n\nexport interface LogOutRequest {\n  error: AuthError | null;\n}\n\nexport interface AuthSessionResponse {\n  data: { session: Session | null };\n}\n\nexport interface OAuthUserMetadata {\n  full_name: string;\n  email: string;\n}\n\nexport interface UserProfileResponse {\n  profile: UserEntity;\n  user: UserResponse;\n}\n",
      "properties": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "BookingDto",
      "id": "interface-BookingDto-d1dec482330d7be0d589f5485636257a169a8b92636e6dc36709c514fcecb7b5e36b690dc0b1bd7a20f6116eae00263ab2345520a59d2322b858462df986bad3",
      "file": "src/app/data/dtos/booking.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { GuestDto } from '@/app/data/dtos/guest.dto';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\n\nexport interface BookingDto {\n  id?: string;\n  date_arrive: string;\n  date_checkout: string;\n  emergency_contact_full_name: string;\n  emergency_contact_phone: string;\n  total_price: number;\n  guests?: GuestDto[];\n  room_id?: string;\n  rooms?: RoomDto | RoomDto[];\n}\n",
      "properties": [
        {
          "name": "date_arrive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "date_checkout",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "emergency_contact_full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "emergency_contact_phone",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "guests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "GuestDto[]",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "room_id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "rooms",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomDto | RoomDto[]",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "total_price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "BookingEmailFormat",
      "id": "interface-BookingEmailFormat-793f9eb87d1f2167a3f4ebd9ae77c33087c4b74242e28f4ffa0c95f1543b4e3d9d113fd85f72d0a2ba6a19bdaec3768e456fcfbcadba2a55e2c6115ff5d26698",
      "file": "src/app/core/models/notification.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface BookingEmailFormat {\n  hotel: string;\n  checkIn: string;\n  checkOut: string;\n  typeRoom: string;\n  numGuests: number;\n}\n",
      "properties": [
        {
          "name": "checkIn",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "checkOut",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "numGuests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "typeRoom",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "BookingRoomFormModel",
      "id": "interface-BookingRoomFormModel-daa0598127a63d1b751e1c97cb4e58fea133a343d248f75a23d650415481d3293c003fa72039402c5d64a3d9d1ffa1a0ac245634c2e6c758215ac0a100ae97d3",
      "file": "src/app/presenter/models/form/booking.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormArray, FormControl, FormGroup } from '@angular/forms';\n\nexport interface BookingRoomFormModel {\n  emergencyContactName: FormControl<string>;\n  emergencyContactPhone: FormControl<string>;\n  guests: FormArray<FormGroup<GuestBookingFormModel>>;\n}\n\nexport interface GuestBookingFormModel {\n  fullName: FormControl<string>;\n  birthDate: FormControl<string | null>;\n  gender: FormControl<string>;\n  documentType: FormControl<string>;\n  documentNumber: FormControl<string>;\n  email: FormControl<string>;\n  phoneNumber: FormControl<string>;\n}\n",
      "properties": [
        {
          "name": "emergencyContactName",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "emergencyContactPhone",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "guests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormArray<FormGroup<GuestBookingFormModel>>",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "City",
      "id": "interface-City-f1e9fe9a56f6cc16aa04dda05715017fbd88929d249c1ece30c0e1a13c7edcd2c5c6d6f96751e1ff70421edfaf10c6bb1d467819b1dfc4a4fbbd9b2f4514a5bf",
      "file": "src/app/presenter/models/form/location.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface City {\n  id: string;\n  name: string;\n  countryId: string;\n}\n",
      "properties": [
        {
          "name": "countryId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "CreateGuestsBookingHotelRequest",
      "id": "interface-CreateGuestsBookingHotelRequest-6d7cc75760c6272b164cb49200974773aeb79af79756cabd43657bf7c10a8f85e574138fbe94dec0d6c036e48310ccf666b14534d9d20c3edce928cd66eb6907",
      "file": "src/app/core/models/guest.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { GuestEntity } from '@/app/domain/entities/guest.entity';\n\nexport interface CreateGuestsBookingHotelRequest {\n  bookingId: string;\n  guestsData: GuestEntity[];\n}\n",
      "properties": [
        {
          "name": "bookingId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "guestsData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "GuestEntity[]",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "CreateHotelForm",
      "id": "interface-CreateHotelForm-c2dc98e819ff4c4faaba8c7a54ab3f469f799159c5bf2846a649ddf8ce21e345b600a7bf928d10ed6298a590510a1e5634b35c5fa2ffce6bcca6e05856d78d60",
      "file": "src/app/presenter/models/form/hotel.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CreateHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressCreateHotelForm>;\n}\n\nexport interface EditHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressHotelForm>;\n  isActive: FormControl<boolean | null>;\n}\n\nexport interface AddressHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude?: FormControl<number | null>;\n  longitude?: FormControl<number | null>;\n}\n\nexport interface AddressCreateHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude: FormControl<number | null>;\n  longitude: FormControl<number | null>;\n}\n",
      "properties": [
        {
          "name": "address",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<AddressCreateHotelForm>",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "CreateRoomForm",
      "id": "interface-CreateRoomForm-3caf4a7fe8d0c6d46ac0561f9fd998a4c668dbee93326f8e9ca4d42e88df1a5e2846ebbe166ea0c9a0828bb0ceddfe2346b05c41fe521068116f3aaf1ffae841",
      "file": "src/app/presenter/models/form/room.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\n\nexport interface CreateRoomForm {\n  type: FormControl<string | null>;\n  basePrice: FormControl<number | null>;\n  taxes: FormControl<number | null>;\n  roomNumber: FormControl<string | null>;\n  capacity: FormControl<number | null>;\n  description: FormControl<string | null>;\n}\n\nexport interface EditRoomForm {\n  isAvailable: FormControl<boolean | null>;\n  type: FormControl<{ id: string; value: string } | null>;\n  basePrice: FormControl<number | null>;\n  taxes: FormControl<number | null>;\n  roomNumber: FormControl<string | null>;\n  capacity: FormControl<number | null>;\n  description: FormControl<string | null>;\n}\n",
      "properties": [
        {
          "name": "basePrice",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "capacity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "roomNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "taxes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "CreateRoomModalDynamicDialogConfigData",
      "id": "interface-CreateRoomModalDynamicDialogConfigData-2a8885d643e0083e85fe448876b6c8646f8233afcf93ee603b54ab1ba5f836eae32c57343f4492b039ebfe8517f4f844bcfd9b73a782aa841e60cb25407e8296",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/create-room-dialog/create-room-dialog.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { CreateRoomForm } from '@/app/presenter/models/form/room.model';\nimport { CreateRoomUseCaseService } from '@/app/domain/usecases/room/create-room-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { RoomOperationError } from '@/app/core/validations/rooms/room-operation.error';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { roomHotelTypes } from '@/app/presenter/views/shared/constants/room';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Store } from '@ngxs/store';\nimport { AddRoom } from '@/app/presenter/state/rooms/actions';\n\ninterface CreateRoomModalDynamicDialogConfigData {\n  hotel: HotelEntity;\n}\n\n@Component({\n  selector: 'app-create-room-dialog',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    AutoFocus,\n  ],\n  templateUrl: './create-room-dialog.component.html',\n  styleUrl: './create-room-dialog.component.scss',\n})\nexport class CreateRoomDialogComponent {\n  createRoomForm!: FormGroup<CreateRoomForm>;\n  roomHotelTypesList = roomHotelTypes;\n\n  constructor(\n    private fb: FormBuilder,\n    private createRoomUseCaseService: CreateRoomUseCaseService,\n    private dialogConfigService: DynamicDialogConfig<CreateRoomModalDynamicDialogConfigData>,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private store: Store\n  ) {\n    this.createRoomForm = this.fb.group<CreateRoomForm>({\n      type: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      basePrice: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      taxes: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      roomNumber: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      capacity: this.fb.control(1, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      description: this.fb.control(''),\n    });\n  }\n\n  async createRoom() {\n    if (this.createRoomForm.invalid) {\n      this.createRoomForm.markAllAsTouched();\n      return;\n    }\n\n    try {\n      const newRoom = await this.createRoomUseCaseService.execute({\n        type: (\n          this.createRoomForm.value.type as unknown as {\n            id: string;\n            value: string;\n          }\n        ).value,\n        basePrice: this.createRoomForm.value.basePrice!,\n        taxes: this.createRoomForm.value.taxes!,\n        roomNumber: this.createRoomForm.value.roomNumber!,\n        capacity: this.createRoomForm.value.capacity!,\n        description: this.createRoomForm.value.description ?? '',\n        hotel: this.dialogConfigService.data?.hotel.id,\n      });\n\n      this.store.dispatch(new AddRoom(newRoom));\n\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Crear nueva habitaci√≥n',\n        detail: 'Se ha creado la habitaci√≥n exitosamente',\n        closable: true,\n      });\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof RoomOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear la habitaci√≥n',\n          error.message\n        );\n      }\n    }\n  }\n}\n",
      "properties": [
        {
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "EditHotelForm",
      "id": "interface-EditHotelForm-c2dc98e819ff4c4faaba8c7a54ab3f469f799159c5bf2846a649ddf8ce21e345b600a7bf928d10ed6298a590510a1e5634b35c5fa2ffce6bcca6e05856d78d60",
      "file": "src/app/presenter/models/form/hotel.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CreateHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressCreateHotelForm>;\n}\n\nexport interface EditHotelForm {\n  name: FormControl<string | null>;\n  description: FormControl<string | null>;\n  address: FormGroup<AddressHotelForm>;\n  isActive: FormControl<boolean | null>;\n}\n\nexport interface AddressHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude?: FormControl<number | null>;\n  longitude?: FormControl<number | null>;\n}\n\nexport interface AddressCreateHotelForm {\n  country: FormControl<string>;\n  city: FormControl<string>;\n  additionalInfo: FormControl<string | null>;\n  latitude: FormControl<number | null>;\n  longitude: FormControl<number | null>;\n}\n",
      "properties": [
        {
          "name": "address",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<AddressHotelForm>",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "isActive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<boolean | null>",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "EditHotelModalDynamicDialogConfigData",
      "id": "interface-EditHotelModalDynamicDialogConfigData-9a85e595cbff4ad435a8db67179b245ece67983d90d7150451ff84418858c50f7a4b4babb1ab12bf048de79f4135c0eb78496efe17ca2c65c1d12a334731bd3e",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/edit-new-hotel-modal/edit-hotel-modal.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  AddressHotelForm,\n  EditHotelForm,\n} from '@/app/presenter/models/form/hotel.model';\nimport { EditHotelUseCaseService } from '@/app/domain/usecases/hotel/edit-hotel-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { HotelOperationError } from '@/app/core/validations/hotels/hotel-operation.error';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { GetHotelByIdUseCaseService } from '@/app/domain/usecases/hotel/get-hotel-by-id-use-case.service';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditHotel } from '@/app/presenter/state/hotels/actions';\nimport { Store } from '@ngxs/store';\nimport { cities } from '@/app/presenter/views/shared/constants/cities';\nimport { countries } from '@/app/presenter/views/shared/constants/countries';\n\ninterface EditHotelModalDynamicDialogConfigData {\n  id: string;\n}\n\n@Component({\n  selector: 'app-edit-hotel-modal',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    InputSwitchModule,\n  ],\n  templateUrl: './edit-hotel-modal.component.html',\n  styleUrl: './edit-hotel-modal.component.scss',\n})\nexport class EditHotelModalComponent implements OnInit {\n  editHotelForm!: FormGroup<EditHotelForm>;\n  actualHotel!: HotelEntity;\n\n  loadingDataToEdit: StatusProcessAction = StatusProcessAction.IDLE;\n\n  constructor(\n    private fb: FormBuilder,\n    private editHotelUseCaseService: EditHotelUseCaseService,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private getHotelUseCaseService: GetHotelByIdUseCaseService,\n    private dynamicDialogConfig: DynamicDialogConfig<EditHotelModalDynamicDialogConfigData>,\n    private store: Store\n  ) {\n    this.editHotelForm = this.fb.group<EditHotelForm>({\n      name: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      description: this.fb.control(''),\n      address: this.fb.group<AddressHotelForm>({\n        country: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        city: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        additionalInfo: this.fb.control(''),\n      }),\n\n      isActive: this.fb.control(false),\n    });\n  }\n\n  ngOnInit() {\n    void this.getHotelToEdit();\n  }\n\n  async getHotelToEdit() {\n    this.loadingDataToEdit = StatusProcessAction.LOADING;\n\n    try {\n      this.actualHotel = await this.getHotelUseCaseService.execute(\n        this.dynamicDialogConfig.data?.id ?? ''\n      );\n      this.loadingDataToEdit = StatusProcessAction.SUCCESS;\n\n      this.editHotelForm.patchValue({\n        name: this.actualHotel.name,\n        description: this.actualHotel.description,\n        address: {\n          country: this.actualHotel.country,\n          city: this.actualHotel.city,\n          additionalInfo: this.actualHotel.additionalAdressInfo,\n        },\n        isActive: this.actualHotel.isActive,\n      });\n    } catch {\n      this.loadingDataToEdit = StatusProcessAction.ERROR;\n    }\n  }\n\n  async editHotel() {\n    if (this.editHotelForm.invalid) {\n      this.editHotelForm.markAllAsTouched();\n      return;\n    }\n\n    try {\n      const editedHotel = await this.editHotelUseCaseService.execute({\n        hotelId: this.dynamicDialogConfig.data?.id ?? '',\n        hotelData: {\n          id: this.dynamicDialogConfig.data?.id ?? '',\n          name: this.editHotelForm.value.name!,\n          description: this.editHotelForm.value.description!,\n          country: this.editHotelForm.value?.address?.country ?? '',\n          city: this.editHotelForm.value?.address?.city ?? '',\n          additionalAdressInfo:\n            this.editHotelForm.value?.address?.additionalInfo ?? '',\n          isActive:\n            this.editHotelForm.value.isActive ?? this.actualHotel.isActive,\n        },\n      });\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Editar hotel',\n        detail: 'Se ha editado el hotel exitosamente',\n        closable: true,\n      });\n\n      this.store.dispatch(new EditHotel(editedHotel));\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof HotelOperationError) {\n        console.error('Ha ocurrido un error al editar el hotel', error.message);\n      }\n    }\n  }\n\n  protected readonly StatusProcessAction = StatusProcessAction;\n  protected readonly cities = cities;\n  protected readonly countries = countries;\n}\n",
      "properties": [
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "EditRoomForm",
      "id": "interface-EditRoomForm-3caf4a7fe8d0c6d46ac0561f9fd998a4c668dbee93326f8e9ca4d42e88df1a5e2846ebbe166ea0c9a0828bb0ceddfe2346b05c41fe521068116f3aaf1ffae841",
      "file": "src/app/presenter/models/form/room.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\n\nexport interface CreateRoomForm {\n  type: FormControl<string | null>;\n  basePrice: FormControl<number | null>;\n  taxes: FormControl<number | null>;\n  roomNumber: FormControl<string | null>;\n  capacity: FormControl<number | null>;\n  description: FormControl<string | null>;\n}\n\nexport interface EditRoomForm {\n  isAvailable: FormControl<boolean | null>;\n  type: FormControl<{ id: string; value: string } | null>;\n  basePrice: FormControl<number | null>;\n  taxes: FormControl<number | null>;\n  roomNumber: FormControl<string | null>;\n  capacity: FormControl<number | null>;\n  description: FormControl<string | null>;\n}\n",
      "properties": [
        {
          "name": "basePrice",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "capacity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "isAvailable",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<boolean | null>",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "roomNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "taxes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<literal type | null>",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "EditRoomModalDynamicDialogConfigData",
      "id": "interface-EditRoomModalDynamicDialogConfigData-7e14cf1f02b22af49594c0cb4c760f4d83f49b83d4074643006e619dd98125fcfe54dc5819f62662be5083e1c65de7c8f00d5ebcef4c4f28269c14927070d7ea",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/edit-room-dialog/edit-room-dialog.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { EditRoomForm } from '@/app/presenter/models/form/room.model';\nimport { roomHotelTypes } from '@/app/presenter/views/shared/constants/room';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\nimport { RoomOperationError } from '@/app/core/validations/rooms/room-operation.error';\nimport { EditRoomUseCaseService } from '@/app/domain/usecases/room/edit-room-use-case.service';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { GetRoomByIdUseCaseService } from '@/app/domain/usecases/room/get-room-by-id-use-case.service';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditRoom } from '@/app/presenter/state/rooms/actions';\nimport { Store } from '@ngxs/store';\n\ninterface EditRoomModalDynamicDialogConfigData {\n  room: RoomEntity;\n}\n@Component({\n  selector: 'app-edit-room-dialog',\n  standalone: true,\n  imports: [\n    AutoFocus,\n    ButtonComponent,\n    DropdownModule,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    InputSwitchModule,\n  ],\n  templateUrl: './edit-room-dialog.component.html',\n  styleUrl: './edit-room-dialog.component.scss',\n})\nexport class EditRoomDialogComponent implements OnInit {\n  editRoomForm!: FormGroup<EditRoomForm>;\n  roomHotelTypesList = roomHotelTypes;\n  actualRoom!: RoomEntity;\n  loadingDataRoomToEdit: StatusProcessAction = StatusProcessAction.IDLE;\n\n  constructor(\n    private fb: FormBuilder,\n    private editRoomUseCaseService: EditRoomUseCaseService,\n    private getRoomUseCaseService: GetRoomByIdUseCaseService,\n    private dialogConfigService: DynamicDialogConfig<EditRoomModalDynamicDialogConfigData>,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private store: Store\n  ) {\n    this.editRoomForm = this.fb.group<EditRoomForm>({\n      type: this.fb.control(null, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      basePrice: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      taxes: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      roomNumber: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      capacity: this.fb.control(1, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      description: this.fb.control(''),\n      isAvailable: this.fb.control(false, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    });\n  }\n\n  ngOnInit() {\n    void this.getRoomToEdit();\n  }\n\n  async getRoomToEdit() {\n    this.loadingDataRoomToEdit = StatusProcessAction.LOADING;\n\n    try {\n      this.actualRoom = await this.getRoomUseCaseService.execute(\n        this.dialogConfigService.data?.room.id ?? ''\n      );\n      this.loadingDataRoomToEdit = StatusProcessAction.SUCCESS;\n\n      this.editRoomForm.patchValue({\n        type: roomHotelTypes.find(type => type.value === this.actualRoom.type),\n        basePrice: this.actualRoom.basePrice,\n        taxes: this.actualRoom.taxes,\n        roomNumber: this.actualRoom.roomNumber,\n        capacity: this.actualRoom.capacity,\n        description: this.actualRoom.description ?? '',\n        isAvailable: this.actualRoom.isAvailable,\n      });\n    } catch (error) {\n      console.error(error);\n      this.loadingDataRoomToEdit = StatusProcessAction.ERROR;\n    }\n  }\n\n  async editRoom() {\n    if (this.editRoomForm.invalid) {\n      this.editRoomForm.markAllAsTouched();\n      return;\n    }\n    try {\n      const editedRoom = await this.editRoomUseCaseService.execute({\n        roomId: this.dialogConfigService.data?.room.id ?? '',\n        roomData: {\n          id: this.dialogConfigService.data?.room.id ?? '',\n          type: (\n            this.editRoomForm.value.type as unknown as {\n              id: string;\n              value: string;\n            }\n          ).value,\n          basePrice: this.editRoomForm.value.basePrice!,\n          taxes: this.editRoomForm.value.taxes!,\n          roomNumber: this.editRoomForm.value.roomNumber!,\n          capacity: this.editRoomForm.value.capacity!,\n          description: this.editRoomForm.value.description ?? '',\n          isAvailable:\n            this.editRoomForm.value.isAvailable ?? this.actualRoom.isAvailable,\n        },\n      });\n\n      this.store.dispatch(new EditRoom(editedRoom));\n\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Editar habitaci√≥n',\n        detail: 'Se ha editado la habitaci√≥n exitosamente',\n        closable: true,\n      });\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof RoomOperationError) {\n        console.error(\n          'Ha ocurrido un error al editar la habitaci√≥n',\n          error.message\n        );\n      }\n    }\n  }\n\n  protected readonly StatusProcessAction = StatusProcessAction;\n}\n",
      "properties": [
        {
          "name": "room",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "EmailDto",
      "id": "interface-EmailDto-b69f128874959a6aa2a5233ea6769ccbc4e995b92830462bb3117760575ee2cdc392706318a5e2429f859416c4e3f2771c654fb28670d8a403514f1d0bfa0207",
      "file": "src/app/core/models/dtos/email.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface EmailDto {\n  to: string;\n  subject: string;\n  message: string;\n  context: Record<string, unknown>;\n}\n",
      "properties": [
        {
          "name": "context",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | >",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "message",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "subject",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "to",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "GenerateReservationDynamicDialogConfig",
      "id": "interface-GenerateReservationDynamicDialogConfig-48e03c047ec7b64a5d536a8fcbd039876f65983cf6cc08f6a07147b1346816b301fbcd5eedde550e3ce41b2709eeebd7d5ab08a53cc25fe5e0435f1eb140d461",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/generate-reservation.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CarouselModule } from 'primeng/carousel';\nimport { Button } from 'primeng/button';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomsListToReverseComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/rooms-list-to-reverse/rooms-list-to-reverse.component';\n\ninterface GenerateReservationDynamicDialogConfig {\n  hotel: HotelEntity;\n}\n\n@Component({\n  selector: 'app-generate-reservation',\n  standalone: true,\n  imports: [CarouselModule, Button, RoomsListToReverseComponent],\n  templateUrl: './generate-reservation.component.html',\n  styleUrl: './generate-reservation.component.scss',\n})\nexport class GenerateReservationComponent implements OnInit {\n  rooms: RoomEntity[] = [];\n\n  responsiveOptions: {\n    breakpoint: string;\n    numVisible: number;\n    numScroll: number;\n  }[] = [];\n\n  constructor(\n    public dynamicDialogRef: DynamicDialogRef,\n    private dynamicDialogConfig: DynamicDialogConfig<GenerateReservationDynamicDialogConfig>\n  ) {}\n\n  ngOnInit() {\n    this.responsiveOptions = [\n      {\n        breakpoint: '1199px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n      {\n        breakpoint: '991px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n      {\n        breakpoint: '767px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n    ];\n    this.rooms = this.dynamicDialogConfig.data?.hotel.rooms ?? [];\n  }\n}\n",
      "properties": [
        {
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "GuestBookingFormModel",
      "id": "interface-GuestBookingFormModel-daa0598127a63d1b751e1c97cb4e58fea133a343d248f75a23d650415481d3293c003fa72039402c5d64a3d9d1ffa1a0ac245634c2e6c758215ac0a100ae97d3",
      "file": "src/app/presenter/models/form/booking.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormArray, FormControl, FormGroup } from '@angular/forms';\n\nexport interface BookingRoomFormModel {\n  emergencyContactName: FormControl<string>;\n  emergencyContactPhone: FormControl<string>;\n  guests: FormArray<FormGroup<GuestBookingFormModel>>;\n}\n\nexport interface GuestBookingFormModel {\n  fullName: FormControl<string>;\n  birthDate: FormControl<string | null>;\n  gender: FormControl<string>;\n  documentType: FormControl<string>;\n  documentNumber: FormControl<string>;\n  email: FormControl<string>;\n  phoneNumber: FormControl<string>;\n}\n",
      "properties": [
        {
          "name": "birthDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "documentNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "documentType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "fullName",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "gender",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "phoneNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "GuestDto",
      "id": "interface-GuestDto-31e8a86aec514b7f940e703982cfc016c8cdb26a85825e7fb3254a79e818adbe22eaf0a82f2ed1211753df741aea17cbaf6c519a3e8c00ce10933fbd0d109dd9",
      "file": "src/app/data/dtos/guest.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface GuestDto {\n  id?: string;\n  full_name: string;\n  email: string;\n  phone_number: string;\n  birth_date: string;\n  gender: string;\n  document_type: string;\n  document_number: string;\n  booking_id?: string;\n}\n",
      "properties": [
        {
          "name": "birth_date",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "booking_id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "document_number",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "document_type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "gender",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 2
        },
        {
          "name": "phone_number",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "GuestsDynamicDialogConfigData",
      "id": "interface-GuestsDynamicDialogConfigData-faf3933edd5164f94ac0ae6392b266066391a8630b7c2575a876d45229725fc96a4e313e6cec91da8205cff5d287e8ffdee1acbf5d04a4091920ebc530ef967b",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guests-reservation-list.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ReservationItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/reservation-item/reservation-item.component';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { GuestReservationItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guest-reservation-item/guest-reservation-item.component';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\n\ninterface GuestsDynamicDialogConfigData {\n  guests: GuestEntity[];\n  reservation: BookingEntity;\n}\n\n@Component({\n  selector: 'app-guests-reservation-list',\n  standalone: true,\n  imports: [\n    ReservationItemComponent,\n    GuestReservationItemComponent,\n    IconComponent,\n  ],\n  templateUrl: './guests-reservation-list.component.html',\n  styleUrl: './guests-reservation-list.component.scss',\n})\nexport class GuestsReservationListComponent {\n  listOfGuests: GuestEntity[] = [];\n  reservation!: BookingEntity;\n\n  constructor(\n    private guestsDataDynamicDialog: DynamicDialogConfig<GuestsDynamicDialogConfigData>\n  ) {\n    this.listOfGuests = this.guestsDataDynamicDialog.data!.guests;\n    this.reservation = this.guestsDataDynamicDialog.data!.reservation;\n  }\n}\n",
      "properties": [
        {
          "name": "guests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "GuestEntity[]",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "reservation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "BookingEntity",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "HotelDto",
      "id": "interface-HotelDto-d134114845ec7cb12e05302be401b3a164c2d23ecb2c1987b3973801cce0e99f49e734c700bb4850a7341c0566f14b52de6fc93bf61887818e11918a3ad2a35b",
      "file": "src/app/data/dtos/hotel.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { RoomDto } from '@/app/data/dtos/room.dto';\n\nexport interface HotelDto {\n  id?: string;\n  name: string;\n  city: string;\n  country: string;\n  description: string;\n  additional_info_address: string;\n  agencyId?: string;\n  isActive?: boolean;\n  rooms?: RoomDto[];\n  latitude?: number;\n  longitude?: number;\n}\n\nexport interface SearchFilterDto {\n  city: string | null;\n  date_arrive: string | null;\n  date_checkout: string | null;\n  num_guests: number | null;\n}\n",
      "properties": [
        {
          "name": "additional_info_address",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "agencyId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "country",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "isActive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "latitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "longitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "rooms",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomDto[]",
          "optional": true,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "HotelFilterForm",
      "id": "interface-HotelFilterForm-284cabb9c436715c2b5598567b842d7aa04abbb8332443f735bd0b167334b0858d31940220c7e8673250851ba6362947657d5a67219946c547b2e3fb3768219a",
      "file": "src/app/presenter/models/form/hotel-filter.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\nimport { City } from '@/app/presenter/models/form/location.model';\n\nexport interface HotelFilterForm {\n  city: FormControl<City | null>;\n  dateArrive: FormControl<Date | null>;\n  dateCheckout: FormControl<Date | null>;\n  numGuests: FormControl<number | null>;\n}\n\nexport interface HotelFilterModel {\n  city: string | null;\n  dateArrive: string | null;\n  dateCheckout: string | null;\n  numGuests: number | null;\n}\n",
      "properties": [
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<City | null>",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "dateArrive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<Date | null>",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "dateCheckout",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<Date | null>",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "numGuests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<number | null>",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "HotelFilterModel",
      "id": "interface-HotelFilterModel-284cabb9c436715c2b5598567b842d7aa04abbb8332443f735bd0b167334b0858d31940220c7e8673250851ba6362947657d5a67219946c547b2e3fb3768219a",
      "file": "src/app/presenter/models/form/hotel-filter.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\nimport { City } from '@/app/presenter/models/form/location.model';\n\nexport interface HotelFilterForm {\n  city: FormControl<City | null>;\n  dateArrive: FormControl<Date | null>;\n  dateCheckout: FormControl<Date | null>;\n  numGuests: FormControl<number | null>;\n}\n\nexport interface HotelFilterModel {\n  city: string | null;\n  dateArrive: string | null;\n  dateCheckout: string | null;\n  numGuests: number | null;\n}\n",
      "properties": [
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "dateArrive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "dateCheckout",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "numGuests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number | null",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "HotelStateModel",
      "id": "interface-HotelStateModel-019d56e254c4eea1b13c5fb1da9d9f569bc7305fa9bf3bef0d38b369e9e533aaa4125eb706b5ab8c045c123fdf5f713bd10ec8c532e1702fb2c3feb63823f8da",
      "file": "src/app/presenter/state/hotels/models/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport interface HotelStateModel {\n  actualHotel: HotelEntity | null;\n  hotels: HotelEntity[];\n}\n",
      "properties": [
        {
          "name": "actualHotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity | null",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "hotels",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[]",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IInjectionFactory",
      "id": "interface-IInjectionFactory-7a6cd48eedda0d376e4ea045f32150dc6d1b719c1cb2e333a7b7059721d6d9ed3679feab50fbee36b08a96e0402f795ae1573fc6b199b31e3cb16f22f7456236",
      "file": "src/app/core/interfaces/factories/iinjection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Provider } from '@angular/core';\n\nexport interface IInjectionFactory {\n  createProviders(): Provider[];\n}\n",
      "properties": [],
      "indexSignatures": [],
      "kind": 173,
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 4,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "extends": []
    },
    {
      "name": "LoginUserForm",
      "id": "interface-LoginUserForm-a64cd74f2aad99c1f622e5f812096763013bd599860941ab8d45394217c8f65a0142e4aa3df863213d54c780c40d88aa8c315b35e4be644ea20d13913ef245c5",
      "file": "src/app/presenter/models/form/auth-users.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\n\nexport interface LoginUserForm {\n  email: FormControl<string | null>;\n  password: FormControl<string | null>;\n}\n\nexport interface RegisterTravellerForm {\n  full_name: FormControl<string>;\n  email: FormControl<string>;\n  password: FormControl<string>;\n  repeatPassword: FormControl<string>;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "password",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "LoginUserRequestDTO",
      "id": "interface-LoginUserRequestDTO-c7becc2f7fc3308e4208b23de46e406fff33ec17517e2104eb846dbe2cce273267461d549357d847ceff6bdb1dc2c83f2900bfca8e81e610d13d820b368eba50",
      "file": "src/app/core/models/dtos/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface LoginUserRequestDTO {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterUserRequestDTO {\n  email: string;\n  password: string;\n  full_name: string;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "password",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "LogOutRequest",
      "id": "interface-LogOutRequest-7b380edef730b5d9d51aeefb3732ae53a4364f563311e09271b41635b913d593088024c61be02273420198ce525505b149474bd2cc5e27facb79b17d77a0349a",
      "file": "src/app/core/models/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  AuthError,\n  Provider,\n  Session,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport interface OAuthInfoRequest {\n  provider: Provider;\n}\n\nexport interface LogOutRequest {\n  error: AuthError | null;\n}\n\nexport interface AuthSessionResponse {\n  data: { session: Session | null };\n}\n\nexport interface OAuthUserMetadata {\n  full_name: string;\n  email: string;\n}\n\nexport interface UserProfileResponse {\n  profile: UserEntity;\n  user: UserResponse;\n}\n",
      "properties": [
        {
          "name": "error",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "AuthError | null",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Mapper",
      "id": "interface-Mapper-136b72a8293fffdc3f4b605d27c6181859d0046b65a443bc5330376b153e5bb24dae6715cbbb6d6f29a46fdd0bd7b697283250e2c026854e0b80802c907431f1",
      "file": "src/app/core/base/mappers.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Mapper<Entity, DTO> {\n  mapFrom(param: Entity): DTO;\n  mapTo(param: DTO): Entity;\n}\n",
      "properties": [],
      "indexSignatures": [],
      "kind": 173,
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "Entity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "DTO",
          "typeParameters": [],
          "line": 2,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "Entity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "DTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Entity",
          "typeParameters": [],
          "line": 3,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "DTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "extends": []
    },
    {
      "name": "MapPoint",
      "id": "interface-MapPoint-01b87a4891c9fd98fcc8036646fb1c1f8b7d2eddd1246879cffc07db1abcc5059ea4beeba04128cbe8836836cd0138b5d5897c053f80cea9ed91c9ce552e7d33",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/map-hotels/map-hotels.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport {\n  latLng,\n  LayerGroup,\n  tileLayer,\n  Map,\n  LatLng,\n  Marker,\n  icon,\n} from 'leaflet';\n\ninterface MapPoint {\n  coords: LatLng;\n  message: string;\n}\n\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotelState } from '@/app/presenter/state/hotels';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'app-map-hotels',\n  standalone: true,\n  imports: [LeafletModule],\n  templateUrl: './map-hotels.component.html',\n  styleUrl: './map-hotels.component.scss',\n})\nexport class MapHotelsComponent implements OnInit, OnDestroy {\n  map!: Map;\n  markersLayer: LayerGroup = new LayerGroup();\n  actualHotels: HotelEntity[] | null = null;\n  actualHotels$!: Observable<HotelEntity[] | null>;\n\n  actualHotelsSubscription: Subscription | null = null;\n  points: MapPoint[] = [];\n\n  options = {\n    layers: [\n      tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 9,\n        minZoom: 3,\n      }),\n    ],\n    zoom: 5,\n    center: latLng(4.5709, -74.2973),\n  };\n\n  constructor(private store: Store) {\n    this.actualHotels$ = this.store.select(HotelState.getHotels);\n  }\n\n  ngOnInit() {\n    this.actualHotelsSubscription = this.actualHotels$.subscribe(listHotels => {\n      this.actualHotels = listHotels;\n      this.addRandomPoints();\n    });\n  }\n\n  onMapReady(map: Map) {\n    this.map = map;\n    this.markersLayer.addTo(this.map);\n  }\n\n  addPoints(points: MapPoint[]) {\n    this.markersLayer.clearLayers();\n\n    points.forEach(point => {\n      const marker = new Marker(point.coords, {\n        icon: icon({\n          iconSize: [40, 40],\n          iconAnchor: [40, 40],\n          iconUrl: '/assets/img/pinner.png',\n          shadowUrl: 'assets/marker-shadow.png',\n        }),\n      })\n        .bindPopup(point.message)\n        .openPopup();\n      this.markersLayer.addLayer(marker);\n    });\n  }\n\n  addRandomPoints() {\n    this.points = (this.actualHotels ?? []).map(hotel => {\n      return {\n        coords: latLng(hotel?.latitude ?? 0, hotel?.longitude ?? 0),\n        message: hotel?.name ?? '',\n      };\n    });\n    this.addPoints(this.points);\n  }\n\n  ngOnDestroy() {\n    this.actualHotelsSubscription?.unsubscribe();\n  }\n}\n",
      "properties": [
        {
          "name": "coords",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "LatLng",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "message",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "OAuthInfoRequest",
      "id": "interface-OAuthInfoRequest-7b380edef730b5d9d51aeefb3732ae53a4364f563311e09271b41635b913d593088024c61be02273420198ce525505b149474bd2cc5e27facb79b17d77a0349a",
      "file": "src/app/core/models/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  AuthError,\n  Provider,\n  Session,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport interface OAuthInfoRequest {\n  provider: Provider;\n}\n\nexport interface LogOutRequest {\n  error: AuthError | null;\n}\n\nexport interface AuthSessionResponse {\n  data: { session: Session | null };\n}\n\nexport interface OAuthUserMetadata {\n  full_name: string;\n  email: string;\n}\n\nexport interface UserProfileResponse {\n  profile: UserEntity;\n  user: UserResponse;\n}\n",
      "properties": [
        {
          "name": "provider",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Provider",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "OAuthUserMetadata",
      "id": "interface-OAuthUserMetadata-7b380edef730b5d9d51aeefb3732ae53a4364f563311e09271b41635b913d593088024c61be02273420198ce525505b149474bd2cc5e27facb79b17d77a0349a",
      "file": "src/app/core/models/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  AuthError,\n  Provider,\n  Session,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport interface OAuthInfoRequest {\n  provider: Provider;\n}\n\nexport interface LogOutRequest {\n  error: AuthError | null;\n}\n\nexport interface AuthSessionResponse {\n  data: { session: Session | null };\n}\n\nexport interface OAuthUserMetadata {\n  full_name: string;\n  email: string;\n}\n\nexport interface UserProfileResponse {\n  profile: UserEntity;\n  user: UserResponse;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RegisterTravellerForm",
      "id": "interface-RegisterTravellerForm-a64cd74f2aad99c1f622e5f812096763013bd599860941ab8d45394217c8f65a0142e4aa3df863213d54c780c40d88aa8c315b35e4be644ea20d13913ef245c5",
      "file": "src/app/presenter/models/form/auth-users.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormControl } from '@angular/forms';\n\nexport interface LoginUserForm {\n  email: FormControl<string | null>;\n  password: FormControl<string | null>;\n}\n\nexport interface RegisterTravellerForm {\n  full_name: FormControl<string>;\n  email: FormControl<string>;\n  password: FormControl<string>;\n  repeatPassword: FormControl<string>;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "password",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "repeatPassword",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string>",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RegisterUserRequestDTO",
      "id": "interface-RegisterUserRequestDTO-c7becc2f7fc3308e4208b23de46e406fff33ec17517e2104eb846dbe2cce273267461d549357d847ceff6bdb1dc2c83f2900bfca8e81e610d13d820b368eba50",
      "file": "src/app/core/models/dtos/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface LoginUserRequestDTO {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterUserRequestDTO {\n  email: string;\n  password: string;\n  full_name: string;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "password",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RoomDto",
      "id": "interface-RoomDto-aed19ee29c0954e46ff511862f82f9fd0a73d0506ea72266a4e862a1ba09ec021c39264da5d003649e224fd00a42784e83832960e3cc611e2c74e0a16f79a510",
      "file": "src/app/data/dtos/room.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HotelDto } from '@/app/data/dtos/hotel.dto';\n\nexport interface RoomDto {\n  id?: string;\n  capacity: number;\n  room_number: string;\n  base_price: number;\n  taxes: number;\n  is_available?: boolean;\n  type: string;\n  hotel_id?: string;\n  description: string;\n  hotels?: HotelDto | HotelDto[];\n}\n",
      "properties": [
        {
          "name": "base_price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "capacity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "hotel_id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "hotels",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelDto | HotelDto[]",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "is_available",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "room_number",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "taxes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "RoomStateModel",
      "id": "interface-RoomStateModel-a191c54e4ec40da1f926ddb4bd513d33d413d37a6f0fb24d88800ac3960e0aba71bf0584c4eda4204d2a16bc5064b795359a8c59bc4e57ffe1231f21ef39556b",
      "file": "src/app/presenter/state/rooms/models/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport interface RoomStateModel {\n  rooms: RoomEntity[];\n}\n",
      "properties": [
        {
          "name": "rooms",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SearchFilterDto",
      "id": "interface-SearchFilterDto-d134114845ec7cb12e05302be401b3a164c2d23ecb2c1987b3973801cce0e99f49e734c700bb4850a7341c0566f14b52de6fc93bf61887818e11918a3ad2a35b",
      "file": "src/app/data/dtos/hotel.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { RoomDto } from '@/app/data/dtos/room.dto';\n\nexport interface HotelDto {\n  id?: string;\n  name: string;\n  city: string;\n  country: string;\n  description: string;\n  additional_info_address: string;\n  agencyId?: string;\n  isActive?: boolean;\n  rooms?: RoomDto[];\n  latitude?: number;\n  longitude?: number;\n}\n\nexport interface SearchFilterDto {\n  city: string | null;\n  date_arrive: string | null;\n  date_checkout: string | null;\n  num_guests: number | null;\n}\n",
      "properties": [
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "date_arrive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "date_checkout",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "num_guests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number | null",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SearchFilterHotelStateModel",
      "id": "interface-SearchFilterHotelStateModel-040a145c85c92adff59277453408d2320ca3a6ec79278f1c5156e9ed779542532bdb6c38f2ab526dabb869c756acfd3876044b80131b40de296af0fcec138212",
      "file": "src/app/presenter/state/searchHotelsFilter/models/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\n\nexport interface SearchFilterHotelStateModel {\n  actualSearchHotel: HotelFilterModel | null;\n}\n",
      "properties": [
        {
          "name": "actualSearchHotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "UpdateHotelRequest",
      "id": "interface-UpdateHotelRequest-446e5de7f623a227be14179ed4fb563aa273a707517f6f4e2225ae9c475a48ac67895c567c1527a134297b3930c5b0108db44c3fdabcb22fb3996cee0ad4bdaa",
      "file": "src/app/core/models/hotel.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport interface UpdateHotelRequest {\n  hotelId: string;\n  hotelData: HotelEntity;\n}\n",
      "properties": [
        {
          "name": "hotelData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "hotelId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "UpdateRoomRequest",
      "id": "interface-UpdateRoomRequest-bb972d9db3944b321af9e7ecfc75e594b447e28119608d823b16dff177cb80d583def1405580821de93cb1083fd036de3e802a367f5dad0a9ae55ae573ad6ab3",
      "file": "src/app/core/models/room.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport interface UpdateRoomRequest {\n  roomId: string;\n  roomData: RoomEntity;\n}\n",
      "properties": [
        {
          "name": "roomData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "roomId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "UseCase",
      "id": "interface-UseCase-69bd48ee923a4846c535a3bf2294e68b4f6c4629582c3824e89f126b04633740144118af3fe8f2f2157c341d84fd1201df32a49b1719184f1ede9b3f86976c52",
      "file": "src/app/domain/base/usecase.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface UseCase<Input, Output> {\n  execute(input: Input): Promise<Output>;\n}\n",
      "properties": [],
      "indexSignatures": [],
      "kind": 173,
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "input",
              "type": "Input",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<Output>",
          "typeParameters": [],
          "line": 2,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "input",
              "type": "Input",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "extends": []
    },
    {
      "name": "UserDto",
      "id": "interface-UserDto-e15dc08ca3db189109d6b890c8818a21e120a981a623620909a828a1b918345c1e5328b7daee0893f526c5e5907a9fce3a696854630b82714c98284e546fd425",
      "file": "src/app/data/dtos/user.dto.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ActorRoles } from '@/app/core/constants/ActorRoles';\n\nexport interface UserDto {\n  id?: string;\n  full_name: string;\n  email: string;\n  role?: ActorRoles;\n  userId?: string;\n}\n",
      "properties": [
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "role",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ActorRoles",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "userId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "UserProfileResponse",
      "id": "interface-UserProfileResponse-7b380edef730b5d9d51aeefb3732ae53a4364f563311e09271b41635b913d593088024c61be02273420198ce525505b149474bd2cc5e27facb79b17d77a0349a",
      "file": "src/app/core/models/auth.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  AuthError,\n  Provider,\n  Session,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport interface OAuthInfoRequest {\n  provider: Provider;\n}\n\nexport interface LogOutRequest {\n  error: AuthError | null;\n}\n\nexport interface AuthSessionResponse {\n  data: { session: Session | null };\n}\n\nexport interface OAuthUserMetadata {\n  full_name: string;\n  email: string;\n}\n\nexport interface UserProfileResponse {\n  profile: UserEntity;\n  user: UserResponse;\n}\n",
      "properties": [
        {
          "name": "profile",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "UserEntity",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "user",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "UserResponse",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [
    {
      "name": "AuthenticateUserOAuthService",
      "id": "injectable-AuthenticateUserOAuthService-ee4d205dbed9e7f954158160b2d63395c15f83e0033b03953a7a008df0af3c944f67c5ce855fe351ad5e708bf6a5b3759496105a14552b8abd69b8f2fbaf468b",
      "file": "src/app/domain/usecases/user/authenticate-user-oauth.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<OAuthResponse>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { OAuthResponse } from '@supabase/supabase-js';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { OAuthInfoRequest } from '@/app/core/models/auth';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticateUserOAuthService\n  implements UseCase<OAuthInfoRequest, OAuthResponse>\n{\n  constructor(private _authUserAdapter: AuthUserAdapter) {}\n\n  execute(oAuthInfoRequest: OAuthInfoRequest): Promise<OAuthResponse> {\n    return this._authUserAdapter.oAuthLogin(oAuthInfoRequest);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "AuthenticationService",
      "id": "injectable-AuthenticationService-e935055b165733deaf9c80a7b228d543f0a56acada118007eea49398472f21db681bd82647bf0f839eab09a0ec370015e33da345d52bce2ff4397f521c3fa5a9",
      "file": "src/app/core/services/auth/authentication.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "logout",
          "args": [],
          "optional": false,
          "returnType": "Promise<LogOutRequest>",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "AuthUserAdapter"
          }
        },
        {
          "name": "oAuthLogin",
          "args": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<OAuthResponse>",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AuthUserAdapter"
          }
        },
        {
          "name": "register",
          "args": [
            {
              "name": "registerUserDto",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 32,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "registerUserDto",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AuthUserAdapter"
          }
        },
        {
          "name": "simpleLogin",
          "args": [
            {
              "name": "loginUserDto",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "loginUserDto",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AuthUserAdapter"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport {\n  LoginUserRequestDTO,\n  RegisterUserRequestDTO,\n} from '@/app/core/models/dtos/auth';\nimport { AuthResponse, OAuthResponse } from '@supabase/supabase-js';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\nimport { LogOutRequest, OAuthInfoRequest } from '@/app/core/models/auth';\nimport variables from '@/app/core/config/variables';\nimport { ActorRoles } from '@/app/core/constants/ActorRoles';\nimport { UserRepositoryService } from '@/app/data/repositories/user/user-repository.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService extends AuthUserAdapter {\n  constructor(\n    private supabaseService: SupabaseService,\n    private _userRepository: UserRepositoryService\n  ) {\n    super();\n  }\n\n  simpleLogin(loginUserDto: LoginUserRequestDTO): Promise<AuthResponse> {\n    return this.supabaseService.supabase.auth.signInWithPassword({\n      email: loginUserDto.email,\n      password: loginUserDto.password,\n    });\n  }\n\n  async register(\n    registerUserDto: RegisterUserRequestDTO\n  ): Promise<AuthResponse> {\n    const authResponse: AuthResponse =\n      await this.supabaseService.supabase.auth.signUp({\n        email: registerUserDto.email,\n        password: registerUserDto.password,\n        options: {\n          data: {\n            full_name: registerUserDto.full_name,\n            role: ActorRoles.TRAVELLER,\n          },\n        },\n      });\n\n    if (!authResponse.data || authResponse.error) {\n      throw new Error('Error creating user');\n    } else {\n      await this._userRepository.createUserProfile({\n        authUser: authResponse.data.user!.id,\n        email: authResponse.data.user!.email!,\n        full_name: registerUserDto.full_name,\n        role: ActorRoles.TRAVELLER,\n      });\n    }\n\n    return authResponse;\n  }\n\n  oAuthLogin(oAuthInfoRequest: OAuthInfoRequest): Promise<OAuthResponse> {\n    return this.supabaseService.supabase.auth.signInWithOAuth({\n      provider: oAuthInfoRequest.provider,\n      options: {\n        redirectTo: `${window.location.origin}/${variables.redirectOAuthUrl}`,\n      },\n    });\n  }\n\n  logout(): Promise<LogOutRequest> {\n    return this.supabaseService.supabase.auth.signOut();\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "_userRepository",
            "type": "UserRepositoryService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_userRepository",
            "type": "UserRepositoryService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["AuthUserAdapter"],
      "type": "injectable"
    },
    {
      "name": "AuthSupabaseService",
      "id": "injectable-AuthSupabaseService-abcbb61ee3621d58eca848cbf597c1950bf00b610c0e33099c580557452dc246fb9df41e4ce16c66fbc601e8d1fef2a4d534e49de418152e6d2994627dcf2c5d",
      "file": "src/app/core/services/supabase/auth-supabase.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getSession",
          "args": [],
          "optional": false,
          "returnType": "Promise<AuthSessionResponse | null>",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [125],
          "inheritance": {
            "file": "IAuthUserSession"
          }
        },
        {
          "name": "getUser",
          "args": [],
          "optional": false,
          "returnType": "Promise<UserProfileResponse>",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "inheritance": {
            "file": "IAuthUserSession"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport {\n  AuthSessionResponse,\n  UserProfileResponse,\n} from '@/app/core/models/auth';\nimport { UserRepositoryService } from '@/app/data/repositories/user/user-repository.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthSupabaseService extends IAuthUserSession {\n  constructor(\n    private supabaseService: SupabaseService,\n    private _userRepository: UserRepositoryService\n  ) {\n    super();\n  }\n\n  async getUser(): Promise<UserProfileResponse> {\n    const user = await this.supabaseService.supabase.auth.getUser();\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    const userProfile = await this._userRepository.getUserProfile(\n      user?.data?.user?.id ?? ''\n    );\n    if (!userProfile) {\n      throw new Error('User profile not found');\n    }\n    return {\n      profile: userProfile,\n      user: user,\n    };\n  }\n\n  public getSession(): Promise<AuthSessionResponse | null> {\n    return this.supabaseService.supabase.auth.getSession();\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "_userRepository",
            "type": "UserRepositoryService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_userRepository",
            "type": "UserRepositoryService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IAuthUserSession"],
      "type": "injectable"
    },
    {
      "name": "BookingRepositoryService",
      "id": "injectable-BookingRepositoryService-0d57795f042399a2339ce1b61110ac84908499ce4cf9cbb5288a45b54c811a565d5dd9d8649a1edf64230a7793fc681782d29eee396638a29332f01ccb1ded3e",
      "file": "src/app/data/repositories/booking/booking-repository.service.ts",
      "properties": [
        {
          "name": "nameTable",
          "defaultValue": "'bookings'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methods": [
        {
          "name": "createBooking",
          "args": [
            {
              "name": "booking",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "booking",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IBookingRepository"
          }
        },
        {
          "name": "getDetailBookingInfo",
          "args": [
            {
              "name": "bookingId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 105,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "bookingId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IBookingRepository"
          }
        },
        {
          "name": "getDetailedBookingInfoByAgent",
          "args": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity[]>",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IBookingRepository"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { CreateBookingMapper } from '@/app/data/mappers/booking/create-booking.mapper';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\nimport { BookingDto } from '@/app/data/dtos/booking.dto';\nimport { BookingOperationError } from '@/app/core/validations/bookings/booking-operation-error';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { GetHotelMapper } from '@/app/data/mappers/hotel/get-hotel.mapper';\nimport { GetRoomMapper } from '@/app/data/mappers/room/get-room.mapper';\nimport { ListGuestsBookingMapper } from '@/app/data/mappers/guest/list-guests-booking.mapper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingRepositoryService extends IBookingRepository {\n  nameTable = 'bookings';\n\n  constructor(\n    private supabaseService: SupabaseService,\n    private createBookingMapper: CreateBookingMapper,\n    private getRoomHotelMapper: GetRoomMapper,\n    private getHotelMapper: GetHotelMapper,\n    private listGuestsBookingMapper: ListGuestsBookingMapper\n  ) {\n    super();\n  }\n\n  async createBooking(booking: BookingEntity): Promise<BookingEntity> {\n    const bookingDto: BookingDto = this.createBookingMapper.mapFrom(booking);\n\n    const { data, error: bookingError } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .insert([\n        {\n          ...bookingDto,\n        },\n      ])\n      .select()\n      .single<BookingDto>();\n\n    if (!data || bookingError) {\n      throw new BookingOperationError(\n        'create',\n        'Error creating the booking',\n        bookingError\n      );\n    }\n    return this.createBookingMapper.mapTo(data);\n  }\n\n  async getDetailedBookingInfoByAgent(\n    agentId: string\n  ): Promise<BookingEntity[]> {\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .select(\n        `\n      *,\n      rooms:rooms(\n        *,\n        hotels:hotels(\n          *\n        )\n      ),\n      guests:guests(*)\n    `\n      )\n      .eq('rooms.hotels.agencyId', agentId);\n\n    if (!data || error) {\n      throw new BookingOperationError(\n        'get detail bookings by agent',\n        'Error getting the booking by specific agent',\n        error\n      );\n    }\n\n    /** Map the complex booking data to the BookingEntity */\n    const dataBooking = data as unknown as BookingDto[];\n\n    const finalReservations = dataBooking\n      .map(booking => {\n        const room = booking.rooms as RoomDto;\n        const hotel = room.hotels as HotelDto;\n\n        if (hotel.agencyId === agentId) {\n          return {\n            ...this.createBookingMapper.mapTo(booking),\n            guests: booking.guests?.map(this.listGuestsBookingMapper.mapTo),\n            rooms: {\n              ...this.getRoomHotelMapper.mapTo(room),\n              hotels: this.getHotelMapper.mapTo(hotel),\n            },\n          };\n        }\n        return null;\n      })\n      .filter(booking => booking !== null) as BookingEntity[];\n\n    return finalReservations;\n  }\n\n  async getDetailBookingInfo(bookingId: string): Promise<BookingEntity> {\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .select(\n        `\n      *,\n      rooms:rooms(\n        *,\n        hotels:hotels(\n          *\n        )\n      ),\n      guests:guests(*)\n    `\n      )\n      .eq('id', bookingId)\n      .single<BookingDto>();\n\n    if (!data || error) {\n      throw new BookingOperationError(\n        'get detail booking by id',\n        'Error getting the booking by specific id',\n        error\n      );\n    }\n\n    /** Map the complex booking data to the BookingEntity */\n    const booking = data as unknown as BookingDto;\n\n    const room = booking.rooms as RoomDto;\n    const hotel = room.hotels as HotelDto;\n\n    const finalReservation = {\n      ...booking,\n      guests: booking.guests,\n      rooms: {\n        ...room,\n        hotels: hotel,\n      },\n    };\n\n    return {\n      ...this.createBookingMapper.mapTo(finalReservation),\n      guests: finalReservation.guests?.map(this.listGuestsBookingMapper.mapTo),\n      rooms: {\n        ...this.getRoomHotelMapper.mapTo(finalReservation.rooms as RoomDto),\n        hotels: this.getHotelMapper.mapTo(\n          (finalReservation.rooms as RoomDto).hotels as HotelDto\n        ),\n      },\n    };\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createBookingMapper",
            "type": "CreateBookingMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getRoomHotelMapper",
            "type": "GetRoomMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getHotelMapper",
            "type": "GetHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "listGuestsBookingMapper",
            "type": "ListGuestsBookingMapper",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createBookingMapper",
            "type": "CreateBookingMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getRoomHotelMapper",
            "type": "GetRoomMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getHotelMapper",
            "type": "GetHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "listGuestsBookingMapper",
            "type": "ListGuestsBookingMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IBookingRepository"],
      "type": "injectable"
    },
    {
      "name": "CompleteDataUserOAuthUseCaseService",
      "id": "injectable-CompleteDataUserOAuthUseCaseService-27dd8ee49c575922cb22b23f3585478cf65e12d803b4f793cf71e889bd0b00ceaee60ea3b12a8ecbdbf21e99fd8da3920bc6a2480c726e449aa61a6e968017ca",
      "file": "src/app/domain/usecases/user/complete-data-user-oauth-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "user",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "user",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IUserRepository } from '@/app/domain/interfaces/iuser-repository';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\nimport { ActorRoles } from '@/app/core/constants/ActorRoles';\nimport { UseCase } from '@/app/domain/base/usecase';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompleteDataUserOAuthUseCaseService\n  implements UseCase<UserEntity, void>\n{\n  constructor(private _userRepository: IUserRepository) {}\n\n  async execute(user: UserEntity): Promise<void> {\n    if (!user?.id) {\n      throw new Error('User id is required');\n    }\n    const existingProfile = await this._userRepository.getUserProfile(user.id);\n\n    if (!existingProfile) {\n      const newUserProfile: UserEntity = {\n        authUser: user.id,\n        email: user.email,\n        full_name: user.full_name,\n        role: ActorRoles.TRAVELLER,\n      };\n      await this._userRepository.createUserProfile(newUserProfile);\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_userRepository",
            "type": "IUserRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_userRepository",
            "type": "IUserRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateBookingMapper",
      "id": "injectable-CreateBookingMapper-10052acfc996b3dcad66807995a96b40e333f4cee2019cc492237a407e9536a3524cbb64272b13cc9317ae6eb651baa23c86a20c6cde7791a46f639eb8cbcf27",
      "file": "src/app/data/mappers/booking/create-booking.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingEntity",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { BookingDto } from '@/app/data/dtos/booking.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateBookingMapper implements Mapper<BookingEntity, BookingDto> {\n  mapFrom(param: BookingEntity): BookingDto {\n    return {\n      emergency_contact_full_name: param.emergencyContactFullName,\n      emergency_contact_phone: param.emergencyPhone,\n      total_price: param.totalPrice,\n      date_arrive: param.dateArrive,\n      date_checkout: param.dateCheckout,\n      room_id: param.room,\n    };\n  }\n  mapTo(param: BookingDto): BookingEntity {\n    return {\n      id: param.id,\n      emergencyContactFullName: param.emergency_contact_full_name,\n      emergencyPhone: param.emergency_contact_phone,\n      totalPrice: param.total_price,\n      dateArrive: param.date_arrive,\n      dateCheckout: param.date_checkout,\n      room: param.room_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateBookingUseCaseService",
      "id": "injectable-CreateBookingUseCaseService-f649fd7ea38fbb765506f8af7c411ae786234ad2735eb7cca14aa01370b4cd384e2cb5b9eeb6c5966f02aea95ff899451f2d912680457b09559dabca1df70bc6",
      "file": "src/app/domain/usecases/booking/create-booking-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "bookingData",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "bookingData",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateBookingUseCaseService\n  implements UseCase<BookingEntity, BookingEntity>\n{\n  constructor(private _bookingRepository: IBookingRepository) {}\n\n  async execute(bookingData: BookingEntity): Promise<BookingEntity> {\n    return this._bookingRepository.createBooking(bookingData);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_bookingRepository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_bookingRepository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateCompleteBookingUseCaseService",
      "id": "injectable-CreateCompleteBookingUseCaseService-20944eb5404087bfd901aab8990e4823198c241a56ec99c0c3c2093331f5963e9f38561a12ae072e80874c3437815a311d3ca50408efbf655e02ec3a2773c8e5",
      "file": "src/app/domain/usecases/booking/create-complete-booking-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "bookingData",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "bookingData",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { CreateGuestsUseCaseService } from '@/app/domain/usecases/guest/create-guests-use-case.service';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { CreateBookingUseCaseService } from '@/app/domain/usecases/booking/create-booking-use-case.service';\nimport { BookingOperationError } from '@/app/core/validations/bookings/booking-operation-error';\nimport { BookingEmailFormat } from '@/app/core/models/notification';\nimport { firstValueFrom } from 'rxjs';\nimport { NotificationService } from '@/app/core/services/notification/notification-service.service';\nimport { EmailNotificationService } from '@/app/core/services/notification/mail/email-notification.service';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateCompleteBookingUseCaseService\n  implements UseCase<BookingEntity, BookingEntity>\n{\n  constructor(\n    private createBookingUseCase: CreateBookingUseCaseService,\n    private createGuestBookingsUseCase: CreateGuestsUseCaseService,\n    private _notificationService: NotificationService,\n    private _emailNotificationService: EmailNotificationService,\n    private sessionUser: SessionUserService,\n    private _bookingRepository: IBookingRepository\n  ) {}\n\n  async execute(bookingData: BookingEntity): Promise<BookingEntity> {\n    const guests: GuestEntity[] = bookingData.guests ?? [];\n\n    const booking: BookingEntity =\n      await this.createBookingUseCase.execute(bookingData);\n\n    if (!booking.id) {\n      throw new BookingOperationError(\n        'create complete booking',\n        'Error creating complete booking'\n      );\n    }\n\n    await this.createGuestBookingsUseCase.execute({\n      bookingId: booking.id,\n      guestsData: guests,\n    });\n\n    const bookingCompleteInfo: BookingEntity =\n      await this._bookingRepository.getDetailBookingInfo(booking.id);\n\n    this._notificationService.setStrategy(this._emailNotificationService);\n\n    const mailBookingData: BookingEmailFormat = {\n      typeRoom: bookingCompleteInfo.rooms!.type,\n      hotel: bookingCompleteInfo.rooms!.hotels!.name,\n      checkIn: bookingCompleteInfo.dateArrive,\n      checkOut: bookingCompleteInfo.dateCheckout,\n      numGuests: bookingCompleteInfo.guests!.length,\n    };\n\n    await firstValueFrom(\n      this._notificationService.notify({\n        to: this.sessionUser.getUserSession()?.user.email,\n        subject: 'Booking created',\n        message: 'Your booking has been created',\n        context: mailBookingData,\n      })\n    );\n\n    return booking;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "createBookingUseCase",
            "type": "CreateBookingUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createGuestBookingsUseCase",
            "type": "CreateGuestsUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "_notificationService",
            "type": "NotificationService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "_emailNotificationService",
            "type": "EmailNotificationService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "sessionUser",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "_bookingRepository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "createBookingUseCase",
            "type": "CreateBookingUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createGuestBookingsUseCase",
            "type": "CreateGuestsUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_notificationService",
            "type": "NotificationService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_emailNotificationService",
            "type": "EmailNotificationService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "sessionUser",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_bookingRepository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateGuestsBookingMapper",
      "id": "injectable-CreateGuestsBookingMapper-e4d438064ad8baa55da59b9ff7762456eb9fe31aa1fa109036cce2349dac12495f35f0fc5a971737ef3248204478c6be53857f1ec4e4265f66e32b463fbc70d6",
      "file": "src/app/data/mappers/guest/create-guests-booking.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "GuestEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "GuestDto",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "GuestEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "GuestDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "GuestEntity",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "GuestDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { GuestDto } from '@/app/data/dtos/guest.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateGuestsBookingMapper\n  implements Mapper<GuestEntity, GuestDto>\n{\n  mapFrom(param: GuestEntity): GuestDto {\n    return {\n      birth_date: param.birthDate,\n      email: param.email,\n      full_name: param.fullName,\n      phone_number: param.phoneNumber,\n      gender: param.gender,\n      document_number: param.documentNumber,\n      document_type: param.documentType,\n      booking_id: param.booking,\n    };\n  }\n  mapTo(param: GuestDto): GuestEntity {\n    return {\n      birthDate: param.birth_date,\n      email: param.email,\n      fullName: param.full_name,\n      phoneNumber: param.phone_number,\n      gender: param.gender,\n      documentNumber: param.document_number,\n      documentType: param.document_type,\n      booking: param.booking_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateGuestsUseCaseService",
      "id": "injectable-CreateGuestsUseCaseService-3d4c2788a4d3f35040ac29951167942eb922c65267eafe493abb9c1eb6cbb14ddf0084bc9b13fbaed0b32d904c47dec1f66b8c7c82785ff24d716ec3c216421f",
      "file": "src/app/domain/usecases/guest/create-guests-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<GuestEntity[]>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { IGuestRepository } from '@/app/domain/interfaces/iguest.repository';\nimport { CreateGuestsBookingHotelRequest } from '@/app/core/models/guest';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateGuestsUseCaseService\n  implements UseCase<CreateGuestsBookingHotelRequest, GuestEntity[]>\n{\n  constructor(private _guestRepository: IGuestRepository) {}\n\n  execute(\n    paramsCreateGuestsBooking: CreateGuestsBookingHotelRequest\n  ): Promise<GuestEntity[]> {\n    return this._guestRepository.createGuests(paramsCreateGuestsBooking);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_guestRepository",
            "type": "IGuestRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_guestRepository",
            "type": "IGuestRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateHotelMapper",
      "id": "injectable-CreateHotelMapper-6531081eea347f9aeb82e73b0b305f4d3b536708f2488b3dfd3d764f12b67ebf7d486b414508efc5111f27f9b2149912ab278d4fadb573f0bdc60e11ccdc2aba",
      "file": "src/app/data/mappers/hotel/create-hotel.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateHotelMapper implements Mapper<HotelEntity, HotelDto> {\n  mapFrom(param: HotelEntity): HotelDto {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additional_info_address: param.additionalAdressInfo,\n      agencyId: param.agency,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n  mapTo(param: HotelDto): HotelEntity {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additionalAdressInfo: param.additional_info_address,\n      agency: param.agencyId,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateHotelUseCaseService",
      "id": "injectable-CreateHotelUseCaseService-12f8f236dc95dcb07e6a45d7c0660d9c5c3132f2a29ad728249899a746dbe48558336efe9bdc65d6298ab15ecec07c7dab99611f5bcfef4a259ef25727466cfd",
      "file": "src/app/domain/usecases/hotel/create-hotel-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "hotelData",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hotelData",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateHotelUseCaseService\n  implements UseCase<HotelEntity, HotelEntity>\n{\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(hotelData: HotelEntity): Promise<HotelEntity> {\n    return this._hotelRepository.createHotel(hotelData);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateRoomMapper",
      "id": "injectable-CreateRoomMapper-854509afcfa8ca1657e33b8765e8c9b7a792799292bf129abdecf3100c8f31b3c77bf41016c781e31b63b837fdd7bf0eff90686f62523052cac48b9b8d6e78a6",
      "file": "src/app/data/mappers/room/create-room.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomEntity",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateRoomMapper implements Mapper<RoomEntity, RoomDto> {\n  mapFrom(param: RoomEntity): RoomDto {\n    return {\n      capacity: param.capacity,\n      room_number: param.roomNumber,\n      base_price: param.basePrice,\n      taxes: param.taxes,\n      is_available: param.isAvailable,\n      type: param.type,\n      description: param.description,\n      hotel_id: param.hotel,\n    };\n  }\n  mapTo(param: RoomDto): RoomEntity {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      roomNumber: param.room_number,\n      basePrice: param.base_price,\n      taxes: param.taxes,\n      isAvailable: param.is_available,\n      type: param.type,\n      description: param.description,\n      hotel: param.hotel_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateRoomUseCaseService",
      "id": "injectable-CreateRoomUseCaseService-838fa5b0f75c16ce6a21f72246dc6847cc354bf55a27336971418a8a4dc4d8ea554018dfe888a4ec7b7da3d208cbf45cfda1c2dbb88467ae212711a1682c7f8b",
      "file": "src/app/domain/usecases/room/create-room-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "roomData",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "roomData",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateRoomUseCaseService\n  implements UseCase<RoomEntity, RoomEntity>\n{\n  constructor(private _roomRepository: IRoomRepository) {}\n\n  execute(roomData: RoomEntity): Promise<RoomEntity> {\n    return this._roomRepository.createRoom(roomData);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateSimpleAccountUserUseCaseService",
      "id": "injectable-CreateSimpleAccountUserUseCaseService-db4bba1847a2054fb047001e1a9b1994470b9d5b5bd3f891a62551453a7435ee9cec53ccb8f77c36375b351945b0f8da03f2d425f73643a92dda87dd5e6ac5ad",
      "file": "src/app/domain/usecases/user/create-simple-account-user-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "registerUserData",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "registerUserData",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { RegisterUserRequestDTO } from '@/app/core/models/dtos/auth';\nimport { AuthResponse } from '@supabase/supabase-js';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateSimpleAccountUserUseCaseService\n  implements UseCase<RegisterUserRequestDTO, AuthResponse>\n{\n  constructor(private authUserAdapter: AuthUserAdapter) {}\n\n  async execute(\n    registerUserData: RegisterUserRequestDTO\n  ): Promise<AuthResponse> {\n    return this.authUserAdapter.register(registerUserData);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "CreateUserMapperService",
      "id": "injectable-CreateUserMapperService-97e8f6dadee8134fcf45315dec0edfa35bcad097e146b991c6456aa162362ad08b66bf10b59e8563f367cc03ff7d3445b10f013eea8e241d897ead3b0c360c79",
      "file": "src/app/data/mappers/user/create-user-mapper.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "UserDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "UserDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "UserEntity",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "UserDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Mapper } from '@/app/core/base/mappers';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\nimport { UserDto } from '@/app/data/dtos/user.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateUserMapperService implements Mapper<UserEntity, UserDto> {\n  mapFrom(param: UserEntity): UserDto {\n    return {\n      email: param.email,\n      full_name: param.full_name,\n      role: param.role,\n      userId: param.authUser,\n    };\n  }\n  mapTo(param: UserDto): UserEntity {\n    return {\n      id: param?.id,\n      email: param.email,\n      full_name: param.full_name,\n      role: param.role,\n      authUser: param.userId,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "DeleteHotelUseCaseService",
      "id": "injectable-DeleteHotelUseCaseService-654c66b03e44f2e9289fe89c07ef739bfca0955523360134fdfda89d249d926c18e1f86e12378c3064c1486e33c9d9b77df01006d6897947d513c7c021de944b",
      "file": "src/app/domain/usecases/hotel/delete-hotel-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\nimport { UseCase } from '@/app/domain/base/usecase';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeleteHotelUseCaseService implements UseCase<string, void> {\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(hotelId: string): Promise<void> {\n    return this._hotelRepository.deleteHotel(hotelId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 8,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "DeleteRoomUseCaseService",
      "id": "injectable-DeleteRoomUseCaseService-3c61e95d45e80fe486ebefdde35b22fe5234e350a289e2101d941b8891f2b095383cb637b7a5beed6f3b9db2b6af8f990ff86fc65f356c29e775e0af521665a9",
      "file": "src/app/domain/usecases/room/delete-room-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeleteRoomUseCaseService implements UseCase<string, void> {\n  constructor(private _roomRepository: IRoomRepository) {}\n\n  execute(roomId: string): Promise<void> {\n    return this._roomRepository.deleteRoom(roomId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 8,
        "jsdoctags": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "EditHotelUseCaseService",
      "id": "injectable-EditHotelUseCaseService-4e43f71d60175301ba29fd01703164422c8b17484acdace1f8aa18262f5b5bf3ed785b1741a652a2e5a2b33dcc997eb9b4f13399c4901c5a74e61a6b1f988c09",
      "file": "src/app/domain/usecases/hotel/edit-hotel-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { UpdateHotelRequest } from '@/app/core/models/hotel';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditHotelUseCaseService\n  implements UseCase<UpdateHotelRequest, HotelEntity>\n{\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(paramsEditHotel: UpdateHotelRequest): Promise<HotelEntity> {\n    return this._hotelRepository.updateHotel(paramsEditHotel);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "EditRoomUseCaseService",
      "id": "injectable-EditRoomUseCaseService-a03fe513fb908f0f401c298c1733a4f3606da425e06a016ce7dda29101dc829c17fa019d9c4163176e14cc3672842d30f3acd17ce06cdecab134da41ee860ce6",
      "file": "src/app/domain/usecases/room/edit-room-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "paramsEditRoom",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "paramsEditRoom",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { UpdateRoomRequest } from '@/app/core/models/room';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditRoomUseCaseService\n  implements UseCase<UpdateRoomRequest, RoomEntity>\n{\n  constructor(private _roomRepository: IRoomRepository) {}\n\n  execute(paramsEditRoom: UpdateRoomRequest): Promise<RoomEntity> {\n    return this._roomRepository.updateRoom(paramsEditRoom);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "EmailNotificationService",
      "id": "injectable-EmailNotificationService-a8708fd6b207f1b3fc32d1283ff90da01442211536dc56734d976a8236b3c944567e9b2fc307cbcf210e60b10b6dae4ed74c946f9dfaf360d0127061541b5c8a",
      "file": "src/app/core/services/notification/mail/email-notification.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "args": [
            {
              "name": "infoNotification",
              "type": "EmailDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "infoNotification",
              "type": "EmailDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { INotificationStrategy } from '@/app/core/interfaces/notifications/inotification-strategy';\nimport { Injectable } from '@angular/core';\nimport { EmailDto } from '@/app/core/models/dtos/email.dto';\nimport { HttpClient } from '@angular/common/http';\nimport variablesConfig from '@/app/core/config/variables';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailNotificationService implements INotificationStrategy {\n  constructor(private http: HttpClient) {}\n\n  notify(infoNotification: EmailDto): Observable<unknown> {\n    const body = {\n      to: infoNotification.to,\n      subject: infoNotification.subject,\n      message: infoNotification.message,\n      context: infoNotification.context,\n    };\n\n    return this.http.post<EmailDto>(variablesConfig.apiEmailSender, body);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllBookingReservationByAgentIdService",
      "id": "injectable-GetAllBookingReservationByAgentIdService-9a8247bef6bee755ffba70579d64e7159ffdf88448dc86ff8f76820f2c602d2e2b93a7472850d26015b19746c0179759749aa74d7fa0ffe56357aed1d9f42bc8",
      "file": "src/app/domain/usecases/booking/get-all-booking-reservation-by-agent-id.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity[]>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllBookingReservationByAgentIdService\n  implements UseCase<string, BookingEntity[]>\n{\n  constructor(private _bookingRespository: IBookingRepository) {}\n\n  execute(agentId: string): Promise<BookingEntity[]> {\n    return this._bookingRespository.getDetailedBookingInfoByAgent(agentId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_bookingRespository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_bookingRespository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllHotelsByAgentMapper",
      "id": "injectable-GetAllHotelsByAgentMapper-4074d996eda9e706ebea6214eefebbcd5edc99cf89b2f2ed9ac6bab0cdd668ee37857bb178ac9f465cde9dec7a2f4d512b46ba7e4b466cca086a655e0e78d1e0",
      "file": "src/app/data/mappers/hotel/get-all-hotels-by-agent.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelDto",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelEntity",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllHotelsByAgentMapper\n  implements Mapper<HotelEntity, HotelDto>\n{\n  mapFrom(param: HotelEntity): HotelDto {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additional_info_address: param.additionalAdressInfo,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n  mapTo(param: HotelDto): HotelEntity {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additionalAdressInfo: param.additional_info_address,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllHotelsByAgentUseCaseService",
      "id": "injectable-GetAllHotelsByAgentUseCaseService-582b0195115ddd1d368ecd5014aaef92aca5e128de79d6c66e5271f8732d04be8385789ba7c5686a1262b6703d2eded45e44dd8ccab6ba0bc27b502221a51c65",
      "file": "src/app/domain/usecases/hotel/get-all-hotels-by-agent-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllHotelsByAgentUseCaseService\n  implements UseCase<string, HotelEntity[]>\n{\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(agentId: string): Promise<HotelEntity[]> {\n    return this._hotelRepository.getHotelsByAgency(agentId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllHotelsByFilterUseCaseService",
      "id": "injectable-GetAllHotelsByFilterUseCaseService-9fc1f61cde278f7b4b7d8de892ef2f7d0984d49b46bc8356d8ebead1a20a4f17b4279cc50bcaf74d50fb9972e08ee56934efb1fa7872a872822ac2516a0b4d45",
      "file": "src/app/domain/usecases/hotel/get-all-hotels-by-filter-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "filters",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "filters",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllHotelsByFilterUseCaseService\n  implements UseCase<HotelFilterModel, HotelEntity[]>\n{\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(filters: HotelFilterModel): Promise<HotelEntity[]> {\n    return this._hotelRepository.getHotelsByFilter(filters);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllRoomsByHotelMapper",
      "id": "injectable-GetAllRoomsByHotelMapper-8d10fdbc77a586d8fe478531c7626ff733fe61197779777ad4a3bf508dd9f93839e5cd33b984ea67fb161ea21e45651b928be1f28998723fccc908d2d64fc4fe",
      "file": "src/app/data/mappers/room/get-all-rooms-by-hotel.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllRoomsByHotelMapper implements Mapper<RoomEntity, RoomDto> {\n  mapFrom(param: RoomEntity): RoomDto {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      room_number: param.roomNumber,\n      base_price: param.basePrice,\n      taxes: param.taxes,\n      is_available: param.isAvailable,\n      type: param.type,\n      description: param.description,\n      hotel_id: param.hotel,\n    };\n  }\n  mapTo(param: RoomDto): RoomEntity {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      roomNumber: param.room_number,\n      basePrice: param.base_price,\n      taxes: param.taxes,\n      isAvailable: param.is_available,\n      type: param.type,\n      description: param.description,\n      hotel: param.hotel_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetAllRoomsByHotelUseCaseService",
      "id": "injectable-GetAllRoomsByHotelUseCaseService-932c1e643c7767bb67b6718b243fefbbb80112bbb7ed87de92bedf9f535ad0df3d66aec313b3948c0ebb795cced8e249c450b54bf4f75c8d1eae7b1cf1abcc16",
      "file": "src/app/domain/usecases/room/get-all-rooms-by-hotel-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity[]>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetAllRoomsByHotelUseCaseService\n  implements UseCase<string, RoomEntity[]>\n{\n  constructor(private _roomRepository: IRoomRepository) {}\n\n  execute(hotelId: string): Promise<RoomEntity[]> {\n    return this._roomRepository.getRoomsByHotel(hotelId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetBookingDetailService",
      "id": "injectable-GetBookingDetailService-941f23f8248f1065108ea57d321959065f1b39e1736218c9c1041806e48737939ad6b7f44b1a0c7ec4d2aa7da32f4669ac37eec03c0721276f0e6075aa44962e",
      "file": "src/app/domain/usecases/booking/get-booking-detail.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "bookingId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "bookingId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetBookingDetailService implements UseCase<string, BookingEntity> {\n  constructor(private _bookingRespository: IBookingRepository) {}\n\n  execute(bookingId: string): Promise<BookingEntity> {\n    return this._bookingRespository.getDetailBookingInfo(bookingId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_bookingRespository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "_bookingRespository",
            "type": "IBookingRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetHotelByIdUseCaseService",
      "id": "injectable-GetHotelByIdUseCaseService-fe26ec49bc29296ac83142d51fe01f8026c63cb1597b0caf95770da7ff3e2a01c414e92008023c8beb764b9b573a2f2eb0fe286834dbca0147b8179ec51ce78b",
      "file": "src/app/domain/usecases/hotel/get-hotel-by-id-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { UseCase } from '@/app/domain/base/usecase';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetHotelByIdUseCaseService\n  implements UseCase<string, HotelEntity>\n{\n  constructor(private _hotelRepository: IHotelRepository) {}\n\n  execute(hotelId: string): Promise<HotelEntity> {\n    return this._hotelRepository.getHotel(hotelId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "_hotelRepository",
            "type": "IHotelRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetHotelMapper",
      "id": "injectable-GetHotelMapper-9863ed01418e70a04cdf14375029d2fe45773e85b0fa452208c638963e6639bf2e8496312884aefe1f51a3238cddcb72028373e561153a5b602312cbe0de10f0",
      "file": "src/app/data/mappers/hotel/get-hotel.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetHotelMapper implements Mapper<HotelEntity, HotelDto> {\n  mapFrom(param: HotelEntity): HotelDto {\n    return {\n      id: param.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additional_info_address: param.additionalAdressInfo,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n  mapTo(param: HotelDto): HotelEntity {\n    return {\n      id: param.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additionalAdressInfo: param.additional_info_address,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetHotelsByFilterMapper",
      "id": "injectable-GetHotelsByFilterMapper-ee02555e87b2aea0437db4996b1c317570f8ae9f646edb1a5b33002b2db72cbe2484d0067e0bc82adad0f196c6272acf9be4c9539d2dcbe190c2b44a65ff6e14",
      "file": "src/app/data/mappers/hotel/getHotelsByFilter.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelDto",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelEntity",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { Injectable } from '@angular/core';\nimport { GetAllRoomsByHotelMapper } from '@/app/data/mappers/room/get-all-rooms-by-hotel.mapper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetHotelsByFilterMapper implements Mapper<HotelEntity, HotelDto> {\n  constructor(private getAllRoomHotelMapper: GetAllRoomsByHotelMapper) {}\n\n  mapFrom(param: HotelEntity): HotelDto {\n    return {\n      id: param.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additional_info_address: param.additionalAdressInfo,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n      isActive: param.isActive,\n    };\n  }\n  mapTo(param: HotelDto): HotelEntity {\n    return {\n      id: param.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additionalAdressInfo: param.additional_info_address,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n      rooms: param.rooms\n        ? param.rooms.map(roomDto => this.getAllRoomHotelMapper.mapTo(roomDto))\n        : [],\n    };\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "getAllRoomHotelMapper",
            "type": "GetAllRoomsByHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "getAllRoomHotelMapper",
            "type": "GetAllRoomsByHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetRoomByIdUseCaseService",
      "id": "injectable-GetRoomByIdUseCaseService-ec1e04cd27843f975d97824bf4b78bc0270cb4620be94f96d845d6c248bd1ead8e4bcde492272314b443e048c804a614fe3d768308c81b6a7c117ac3761e589d",
      "file": "src/app/domain/usecases/room/get-room-by-id-use-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetRoomByIdUseCaseService implements UseCase<string, RoomEntity> {\n  constructor(private _roomRepository: IRoomRepository) {}\n\n  execute(hotelId: string): Promise<RoomEntity> {\n    return this._roomRepository.getRoom(hotelId);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "_roomRepository",
            "type": "IRoomRepository",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GetRoomMapper",
      "id": "injectable-GetRoomMapper-215f7898551dcff367380f49624d7b54ffa0931e04ef8301b8fee5b1ad9c475d0f1c2c15f874288ed6bc014fc291cd8dceb916a1eafbcd2d6266337bb638460f",
      "file": "src/app/data/mappers/room/get-room.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetRoomMapper implements Mapper<RoomEntity, RoomDto> {\n  mapFrom(param: RoomEntity): RoomDto {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      room_number: param.roomNumber,\n      base_price: param.basePrice,\n      taxes: param.taxes,\n      is_available: param.isAvailable,\n      type: param.type,\n      description: param.description,\n      hotel_id: param.hotel,\n    };\n  }\n  mapTo(param: RoomDto): RoomEntity {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      roomNumber: param.room_number,\n      basePrice: param.base_price,\n      taxes: param.taxes,\n      isAvailable: param.is_available,\n      type: param.type,\n      description: param.description,\n      hotel: param.hotel_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "GuestRepositoryService",
      "id": "injectable-GuestRepositoryService-cb3c9ccc065bb86631fe6dc75559200188ad60395053ff13093bced41c77a77970278fd7dc1a42a9bbfbe9f0d6ceafed84aee55831f97aa7b0d8b81fba9710ae",
      "file": "src/app/data/repositories/guest/guest-repository.service.ts",
      "properties": [
        {
          "name": "nameTable",
          "defaultValue": "'guests'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methods": [
        {
          "name": "createGuests",
          "args": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<GuestEntity[]>",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IGuestRepository"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IGuestRepository } from '@/app/domain/interfaces/iguest.repository';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { GuestDto } from '@/app/data/dtos/guest.dto';\nimport { CreateGuestsBookingMapper } from '@/app/data/mappers/guest/create-guests-booking.mapper';\nimport { CreateGuestsBookingHotelRequest } from '@/app/core/models/guest';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport { GuestOperationError } from '@/app/core/validations/guests/guest-operation-error';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GuestRepositoryService extends IGuestRepository {\n  nameTable = 'guests';\n\n  constructor(\n    private createGuestsBookingMapper: CreateGuestsBookingMapper,\n    private supabaseService: SupabaseService\n  ) {\n    super();\n  }\n\n  async createGuests(\n    paramsCreateGuestsBooking: CreateGuestsBookingHotelRequest\n  ): Promise<GuestEntity[]> {\n    const guestsDto: GuestDto[] = paramsCreateGuestsBooking.guestsData.map(\n      guestData =>\n        this.createGuestsBookingMapper.mapFrom({\n          ...guestData,\n          booking: paramsCreateGuestsBooking.bookingId,\n        })\n    );\n\n    const { data, error: guestsError } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .insert(guestsDto)\n      .select();\n\n    if (!data || guestsError) {\n      throw new GuestOperationError(\n        'createGuests',\n        'Error creating guests',\n        guestsError\n      );\n    }\n    return data.map(this.createGuestsBookingMapper.mapTo);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "createGuestsBookingMapper",
            "type": "CreateGuestsBookingMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "createGuestsBookingMapper",
            "type": "CreateGuestsBookingMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IGuestRepository"],
      "type": "injectable"
    },
    {
      "name": "HotelRepositoryService",
      "id": "injectable-HotelRepositoryService-0fd7b440d3768831db479be6a271b03fbf14c9cad0b77ac96ce9f1653a384fac95132944b8b3a0a5b46dda9916aed0a23d071330b083ab56a7dc5889c5949a37",
      "file": "src/app/data/repositories/hotel/hotel-repository.service.ts",
      "properties": [
        {
          "name": "nameTable",
          "defaultValue": "'hotels'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methods": [
        {
          "name": "createHotel",
          "args": [
            {
              "name": "hotel",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "hotel",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        },
        {
          "name": "deleteHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        },
        {
          "name": "getHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 87,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        },
        {
          "name": "getHotelsByAgency",
          "args": [
            {
              "name": "agencyId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 104,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "agencyId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        },
        {
          "name": "getHotelsByFilter",
          "args": [
            {
              "name": "filter",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 124,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "filter",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        },
        {
          "name": "updateHotel",
          "args": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IHotelRepository"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport { CreateHotelMapper } from '@/app/data/mappers/hotel/create-hotel.mapper';\nimport { UpdateHotelMapper } from '@/app/data/mappers/hotel/update-hotel.mapper';\nimport { HotelOperationError } from '@/app/core/validations/hotels/hotel-operation.error';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { GetAllHotelsByAgentMapper } from '@/app/data/mappers/hotel/get-all-hotels-by-agent.mapper';\nimport { GetHotelMapper } from '@/app/data/mappers/hotel/get-hotel.mapper';\nimport { UpdateHotelRequest } from '@/app/core/models/hotel';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { SearchFilterHotelMapper } from '@/app/data/mappers/hotel/search-filter-hotel.mapper';\nimport { GetHotelsByFilterMapper } from '@/app/data/mappers/hotel/getHotelsByFilter.mapper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HotelRepositoryService extends IHotelRepository {\n  nameTable = 'hotels';\n\n  constructor(\n    private supabaseService: SupabaseService,\n    private createHotelMapper: CreateHotelMapper,\n    private updateHotelMapper: UpdateHotelMapper,\n    private getHotelMapper: GetHotelMapper,\n    private getAllHotelsByAgentMapper: GetAllHotelsByAgentMapper,\n    private getAllHotelByFilterMapper: GetHotelsByFilterMapper,\n    private searchFilterHotelMapper: SearchFilterHotelMapper\n  ) {\n    super();\n  }\n\n  async createHotel(hotel: HotelEntity): Promise<HotelEntity> {\n    const hotelDto = this.createHotelMapper.mapFrom(hotel);\n\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .insert(hotelDto)\n      .select()\n      .single<HotelDto>();\n\n    if (!data || error) {\n      throw new HotelOperationError(\n        'create',\n        'Error creando un nuevo hotel',\n        error\n      );\n    }\n    return this.createHotelMapper.mapTo(data);\n  }\n\n  async updateHotel(paramsEditHotel: UpdateHotelRequest): Promise<HotelEntity> {\n    const hotelDto = this.updateHotelMapper.mapFrom(paramsEditHotel.hotelData);\n\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .upsert(hotelDto)\n      .select()\n      .single<HotelDto>();\n\n    if (!data || error) {\n      throw new HotelOperationError(\n        'update',\n        `Error actualizando el hotel con ID: ${paramsEditHotel.hotelId}`,\n        error\n      );\n    }\n    return this.updateHotelMapper.mapTo(data);\n  }\n\n  async deleteHotel(hotelId: string): Promise<void> {\n    const { error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .delete()\n      .eq('id', hotelId);\n\n    if (error) {\n      throw new HotelOperationError(\n        'delete',\n        `Error eliminando el hotel con ID: ${hotelId}`,\n        error\n      );\n    }\n  }\n\n  async getHotel(hotelId: string): Promise<HotelEntity> {\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .select('*')\n      .eq('id', hotelId)\n      .single<HotelDto>();\n\n    if (!data || error) {\n      throw new HotelOperationError(\n        'getById',\n        `Error obteniendo el hotel con ID: ${hotelId}`,\n        error\n      );\n    }\n    return this.getHotelMapper.mapTo(data);\n  }\n\n  async getHotelsByAgency(agencyId?: string): Promise<HotelEntity[]> {\n    let query = this.supabaseService.supabase.from(this.nameTable).select('*');\n\n    if (agencyId) {\n      query = query.eq('agencyId', agencyId);\n    }\n\n    const { data, error } = await query;\n\n    if (!data || error) {\n      throw new HotelOperationError(\n        'getAll',\n        'Error obteniendo la lista de hoteles',\n        error\n      );\n    }\n\n    return data.map(this.getAllHotelsByAgentMapper.mapTo);\n  }\n\n  async getHotelsByFilter(filter: HotelFilterModel): Promise<HotelEntity[]> {\n    const filterDto = this.searchFilterHotelMapper.mapToDto(filter);\n\n    /** Get booking rooms in the date range**/\n    let bookedRoomsQuery = this.supabaseService.supabase\n      .from('bookings')\n      .select('room_id');\n\n    if (filterDto.date_arrive && filterDto.date_checkout) {\n      bookedRoomsQuery = bookedRoomsQuery\n        .gte('date_arrive', filterDto.date_arrive)\n        .lte('date_checkout', filterDto.date_checkout);\n    }\n\n    const bookedRooms = await bookedRoomsQuery;\n\n    /** 1. Filter hotels by city and rooms capacity\n     *  2. Remove rooms with booking id in the date range\n     *  3. Remove hotels with no rooms\n     * **/\n\n    let query = this.supabaseService.supabase\n      .from('hotels')\n      .select(\n        `\n    *,\n    rooms:rooms(\n      *\n    )\n  `\n      )\n      .eq('isActive', true)\n      .eq('rooms.is_available', true)\n      .gte('rooms.capacity', filterDto.num_guests);\n\n    if (filterDto.city) {\n      query = query.eq('city', filterDto.city);\n    }\n\n    query\n      .not(\n        'rooms.id',\n        'in',\n        `(${((bookedRooms?.data as unknown as { room_id: string }[]) ?? [])\n          .map((room: { room_id: string }) => room.room_id)\n          .join(',')})`\n      )\n      .not('rooms', 'is', null);\n\n    const { data, error } = await query;\n\n    if (error) {\n      throw new HotelOperationError(\n        'getAllHotelsByFilter',\n        'Error obteniendo lista hoteles por filtro',\n        error\n      );\n    }\n    const hotelDataDto = (data || []) as HotelDto[];\n\n    return hotelDataDto.map(hotelDataDto =>\n      this.getAllHotelByFilterMapper.mapTo(hotelDataDto)\n    );\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createHotelMapper",
            "type": "CreateHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "updateHotelMapper",
            "type": "UpdateHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getHotelMapper",
            "type": "GetHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getAllHotelsByAgentMapper",
            "type": "GetAllHotelsByAgentMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getAllHotelByFilterMapper",
            "type": "GetHotelsByFilterMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "searchFilterHotelMapper",
            "type": "SearchFilterHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createHotelMapper",
            "type": "CreateHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "updateHotelMapper",
            "type": "UpdateHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getHotelMapper",
            "type": "GetHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getAllHotelsByAgentMapper",
            "type": "GetAllHotelsByAgentMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getAllHotelByFilterMapper",
            "type": "GetHotelsByFilterMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "searchFilterHotelMapper",
            "type": "SearchFilterHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IHotelRepository"],
      "type": "injectable"
    },
    {
      "name": "HotelState",
      "id": "injectable-HotelState-ec84b46dc132b4326c693e4b8d82b19d943088764b558d3a48491afb77c65d7d2a4f94ecf63d5be5c5dbea00eb76cbbee1e5b840898712776423b43daa5e9a14",
      "file": "src/app/presenter/state/hotels/index.ts",
      "properties": [],
      "methods": [
        {
          "name": "addActualHotel",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddActualHotel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddActualHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddActualHotel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "addHotel",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddHotel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddHotel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "addHotels",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddHotels",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddHotels"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddHotels",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "editHotel",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "EditHotel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "EditHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "EditHotel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getActualHotel",
          "args": [
            {
              "name": "state",
              "type": "HotelStateModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Selector",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [170, 126],
          "jsdoctags": [
            {
              "name": "state",
              "type": "HotelStateModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getHotels",
          "args": [
            {
              "name": "state",
              "type": "HotelStateModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Selector",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [170, 126],
          "jsdoctags": [
            {
              "name": "state",
              "type": "HotelStateModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeActualHotel",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "RemoveActualHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeHotel",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "RemoveHotel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "RemoveHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "RemoveHotel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setRooms",
          "args": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddHotels",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "SetHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<HotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddHotels",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport {\n  AddActualHotel,\n  AddHotel,\n  AddHotels,\n  EditHotel,\n  RemoveActualHotel,\n  RemoveHotel,\n  SetHotel,\n} from '@/app/presenter/state/hotels/actions';\nimport { HotelStateModel } from '@/app/presenter/state/hotels/models';\n\n@State<HotelStateModel>({\n  name: 'hotel',\n  defaults: {\n    actualHotel: null,\n    hotels: [],\n  },\n})\n@Injectable()\nexport class HotelState {\n  @Selector()\n  static getActualHotel(state: HotelStateModel) {\n    return state.actualHotel;\n  }\n\n  @Selector()\n  static getHotels(state: HotelStateModel) {\n    return state.hotels;\n  }\n\n  @Action(AddActualHotel)\n  addActualHotel(\n    { patchState }: StateContext<HotelStateModel>,\n    { payload }: AddActualHotel\n  ) {\n    patchState({\n      actualHotel: payload,\n    });\n  }\n\n  @Action(SetHotel)\n  setRooms(\n    { patchState }: StateContext<HotelStateModel>,\n    { payload }: AddHotels\n  ) {\n    patchState({\n      hotels: [...payload],\n    });\n  }\n\n  @Action(RemoveActualHotel)\n  removeActualHotel({ patchState }: StateContext<HotelStateModel>) {\n    patchState({\n      actualHotel: null,\n    });\n  }\n\n  @Action(AddHotel)\n  addHotel(\n    { getState, patchState }: StateContext<HotelStateModel>,\n    { payload }: AddHotel\n  ) {\n    const state = getState();\n    patchState({\n      hotels: [payload, ...state.hotels],\n    });\n  }\n\n  @Action(AddHotels)\n  addHotels(\n    { getState, patchState }: StateContext<HotelStateModel>,\n    { payload }: AddHotels\n  ) {\n    const state = getState();\n    patchState({\n      hotels: [...payload, ...state.hotels],\n    });\n  }\n\n  @Action(RemoveHotel)\n  removeHotel(\n    { getState, patchState }: StateContext<HotelStateModel>,\n    { hotelId }: RemoveHotel\n  ) {\n    const state = getState();\n    patchState({\n      hotels: state.hotels.filter(hotel => (hotel?.id ?? '') !== hotelId),\n    });\n  }\n\n  @Action(EditHotel)\n  editHotel(\n    { getState, patchState }: StateContext<HotelStateModel>,\n    { payload }: EditHotel\n  ) {\n    const state = getState();\n\n    const updatedHotels = state.hotels.map(hotel =>\n      hotel.id === payload.id ? { ...hotel, ...payload } : hotel\n    );\n\n    patchState({\n      hotels: updatedHotels,\n    });\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ListBookingMapper",
      "id": "injectable-ListBookingMapper-9568be6b82913fbb041f3d8ddec8ff022a256510a3f9018033c5581ad09169232cf92c20607d64fec493f715f679928ce369a1bc67fb6d5ff5615e5445ae390c",
      "file": "src/app/data/mappers/booking/list-booking.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingEntity",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { BookingDto } from '@/app/data/dtos/booking.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ListBookingMapper implements Mapper<BookingEntity, BookingDto> {\n  mapFrom(param: BookingEntity): BookingDto {\n    return {\n      emergency_contact_full_name: param.emergencyContactFullName,\n      emergency_contact_phone: param.emergencyPhone,\n      total_price: param.totalPrice,\n      date_arrive: param.dateArrive,\n      date_checkout: param.dateCheckout,\n      room_id: param.room,\n    };\n  }\n  mapTo(param: BookingDto): BookingEntity {\n    return {\n      emergencyContactFullName: param.emergency_contact_full_name,\n      emergencyPhone: param.emergency_contact_phone,\n      totalPrice: param.total_price,\n      dateArrive: param.date_arrive,\n      dateCheckout: param.date_checkout,\n      room: param.room_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ListBookingMapper",
      "id": "injectable-ListBookingMapper-9568be6b82913fbb041f3d8ddec8ff022a256510a3f9018033c5581ad09169232cf92c20607d64fec493f715f679928ce369a1bc67fb6d5ff5615e5445ae390c-1",
      "file": "src/app/data/mappers/booking/list-detail-booking.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "BookingEntity",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "BookingDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { BookingDto } from '@/app/data/dtos/booking.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ListBookingMapper implements Mapper<BookingEntity, BookingDto> {\n  mapFrom(param: BookingEntity): BookingDto {\n    return {\n      emergency_contact_full_name: param.emergencyContactFullName,\n      emergency_contact_phone: param.emergencyPhone,\n      total_price: param.totalPrice,\n      date_arrive: param.dateArrive,\n      date_checkout: param.dateCheckout,\n      room_id: param.room,\n    };\n  }\n  mapTo(param: BookingDto): BookingEntity {\n    return {\n      emergencyContactFullName: param.emergency_contact_full_name,\n      emergencyPhone: param.emergency_contact_phone,\n      totalPrice: param.total_price,\n      dateArrive: param.date_arrive,\n      dateCheckout: param.date_checkout,\n      room: param.room_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "ListBookingMapper-1"
    },
    {
      "name": "ListGuestsBookingMapper",
      "id": "injectable-ListGuestsBookingMapper-e35afc3ecaefa0173c0e55c5d3d00fe1b0603d5bb3749eae4f5a4a1ff75e7bad5916e5db6e11dbd0efbb99baf29bedb3067ed3c90147f262b99fbe60996549dc",
      "file": "src/app/data/mappers/guest/list-guests-booking.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "GuestEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "GuestDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "GuestEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "GuestDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "GuestEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "GuestDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { GuestDto } from '@/app/data/dtos/guest.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ListGuestsBookingMapper implements Mapper<GuestEntity, GuestDto> {\n  mapFrom(param: GuestEntity): GuestDto {\n    return {\n      id: param.id,\n      birth_date: param.birthDate,\n      email: param.email,\n      full_name: param.fullName,\n      phone_number: param.phoneNumber,\n      gender: param.gender,\n      document_number: param.documentNumber,\n      document_type: param.documentType,\n      booking_id: param.booking,\n    };\n  }\n  mapTo(param: GuestDto): GuestEntity {\n    return {\n      id: param.id,\n      birthDate: param.birth_date,\n      email: param.email,\n      fullName: param.full_name,\n      phoneNumber: param.phone_number,\n      gender: param.gender,\n      documentNumber: param.document_number,\n      documentType: param.document_type,\n      booking: param.booking_id,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "LogOutUserCaseService",
      "id": "injectable-LogOutUserCaseService-12e353d4c57cbc2ad157c2ebd102175a575c6e562e488324a492ed87dd87fc03245ce90e05881c28804e9141a03235506a8723bc9ce2473e41000000b222b1b2",
      "file": "src/app/domain/usecases/user/log-out-user-case.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [],
          "optional": false,
          "returnType": "Promise<LogOutRequest>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\nimport { LogOutRequest } from '@/app/core/models/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogOutUserCaseService implements UseCase<void, LogOutRequest> {\n  constructor(private _authUserAdapter: AuthUserAdapter) {}\n\n  async execute(): Promise<LogOutRequest> {\n    return this._authUserAdapter.logout();\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "NotificationService",
      "id": "injectable-NotificationService-e167ba347666ba79e6aea77ada1a9584a74b62c5ee42ef057d576927f6d2a9ab36814329fb266d52d64e855e0b96e8a0d2599f4287d46de1337884ed6da6ae36",
      "file": "src/app/core/services/notification/notification-service.service.ts",
      "properties": [
        {
          "name": "strategy",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "INotificationStrategy",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "notify",
          "args": [
            {
              "name": "infoNotification",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<>",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [164],
          "jsdoctags": [
            {
              "name": "infoNotification",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "INotificationStrategy"
          }
        },
        {
          "name": "setStrategy",
          "args": [
            {
              "name": "strategy",
              "type": "INotificationStrategy",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "strategy",
              "type": "INotificationStrategy",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { INotificationStrategy } from '@/app/core/interfaces/notifications/inotification-strategy';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService extends INotificationStrategy {\n  constructor() {\n    super();\n  }\n  private strategy!: INotificationStrategy;\n\n  setStrategy(strategy: INotificationStrategy) {\n    this.strategy = strategy;\n  }\n\n  override notify(infoNotification: unknown): Observable<unknown> {\n    return this.strategy.notify(infoNotification);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 8
      },
      "extends": ["INotificationStrategy"],
      "type": "injectable"
    },
    {
      "name": "RoomRepositoryService",
      "id": "injectable-RoomRepositoryService-49c160ec0137dd17f41b10ab8fae731253cd771dac8defefb4f75682df7a567719fb7213632d4f0279a738612847d33b38add6fd940174386512b036ecb6959b",
      "file": "src/app/data/repositories/room/room-repository.service.ts",
      "properties": [
        {
          "name": "nameTable",
          "defaultValue": "'rooms'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methods": [
        {
          "name": "createRoom",
          "args": [
            {
              "name": "room",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "room",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IRoomRepository"
          }
        },
        {
          "name": "deleteRoom",
          "args": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IRoomRepository"
          }
        },
        {
          "name": "getRoom",
          "args": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 83,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "roomId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IRoomRepository"
          }
        },
        {
          "name": "getRoomsByHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity[]>",
          "typeParameters": [],
          "line": 100,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IRoomRepository"
          }
        },
        {
          "name": "updateRoom",
          "args": [
            {
              "name": "paramsEditRoom",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "paramsEditRoom",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IRoomRepository"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\n\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { CreateRoomMapper } from '@/app/data/mappers/room/create-room.mapper';\nimport { UpdateRoomMapper } from '@/app/data/mappers/room/update-room.mapper';\nimport { GetRoomMapper } from '@/app/data/mappers/room/get-room.mapper';\nimport { GetAllRoomsByHotelMapper } from '@/app/data/mappers/room/get-all-rooms-by-hotel.mapper';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomOperationError } from '@/app/core/validations/rooms/room-operation.error';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\nimport { UpdateRoomRequest } from '@/app/core/models/room';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoomRepositoryService extends IRoomRepository {\n  nameTable = 'rooms';\n\n  constructor(\n    private supabaseService: SupabaseService,\n    private createRoomMapper: CreateRoomMapper,\n    private updateRoomMapper: UpdateRoomMapper,\n    private getRoomMapper: GetRoomMapper,\n    private getAllRoomsByHotelMapper: GetAllRoomsByHotelMapper\n  ) {\n    super();\n  }\n\n  async createRoom(room: RoomEntity): Promise<RoomEntity> {\n    const roomDto = this.createRoomMapper.mapFrom(room);\n\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .insert(roomDto)\n      .select()\n      .single<RoomDto>();\n\n    if (!data || error) {\n      throw new RoomOperationError(\n        'create',\n        'Error creando una nueva habitaci√≥n',\n        error\n      );\n    }\n    return this.createRoomMapper.mapTo(data);\n  }\n\n  async updateRoom(paramsEditRoom: UpdateRoomRequest): Promise<RoomEntity> {\n    const roomDto = this.updateRoomMapper.mapFrom(paramsEditRoom.roomData);\n\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .upsert(roomDto)\n      .select()\n      .single<RoomDto>();\n\n    if (!data || error) {\n      throw new RoomOperationError(\n        'update',\n        `Error actualizando la habitaci√≥n con ID: ${paramsEditRoom.roomId}`,\n        error\n      );\n    }\n    return this.updateRoomMapper.mapTo(data);\n  }\n\n  async deleteRoom(roomId: string): Promise<void> {\n    const { error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .delete()\n      .eq('id', roomId);\n\n    if (error) {\n      throw new RoomOperationError(\n        'delete',\n        `Error eliminando la habitaci√≥n con ID: ${roomId}`,\n        error\n      );\n    }\n  }\n\n  async getRoom(roomId: string): Promise<RoomEntity> {\n    const { data, error } = await this.supabaseService.supabase\n      .from(this.nameTable)\n      .select('*')\n      .eq('id', roomId)\n      .single<RoomDto>();\n\n    if (!data || error) {\n      throw new RoomOperationError(\n        'getById',\n        `Error obteniendo la habitaci√≥n con ID: ${roomId}`,\n        error\n      );\n    }\n    return this.getRoomMapper.mapTo(data);\n  }\n\n  async getRoomsByHotel(hotelId?: string): Promise<RoomEntity[]> {\n    let query = this.supabaseService.supabase.from(this.nameTable).select('*');\n\n    if (hotelId) {\n      query = query.eq('hotel_id', hotelId);\n    }\n\n    const { data, error } = await query;\n\n    if (!data || error) {\n      throw new RoomOperationError(\n        'getAll',\n        'Error obteniendo la lista de habitaciones',\n        error\n      );\n    }\n\n    return data.map(this.getAllRoomsByHotelMapper.mapTo);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createRoomMapper",
            "type": "CreateRoomMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "updateRoomMapper",
            "type": "UpdateRoomMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getRoomMapper",
            "type": "GetRoomMapper",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getAllRoomsByHotelMapper",
            "type": "GetAllRoomsByHotelMapper",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createRoomMapper",
            "type": "CreateRoomMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "updateRoomMapper",
            "type": "UpdateRoomMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getRoomMapper",
            "type": "GetRoomMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getAllRoomsByHotelMapper",
            "type": "GetAllRoomsByHotelMapper",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IRoomRepository"],
      "type": "injectable"
    },
    {
      "name": "RoomState",
      "id": "injectable-RoomState-25d063d81b4b0fd84f5e613d9269603009686fffd61c989448d9440a1b5dce9f9424903e0e64f3ffb20fa59d2174fd5fd6aec1a0717565166ea64ea56d9b3823",
      "file": "src/app/presenter/state/rooms/index.ts",
      "properties": [],
      "methods": [
        {
          "name": "addRoom",
          "args": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddRoom",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddRoom"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddRoom",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "addRooms",
          "args": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddRooms",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddRooms"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddRooms",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "editRoom",
          "args": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "EditRoom",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "EditRoom"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "EditRoom",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getRooms",
          "args": [
            {
              "name": "state",
              "type": "RoomStateModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Selector",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [170, 126],
          "jsdoctags": [
            {
              "name": "state",
              "type": "RoomStateModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeRoom",
          "args": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "RemoveRoom",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "RemoveRoom"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "RemoveRoom",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setRooms",
          "args": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddRooms",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "SetRooms"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<RoomStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddRooms",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport {\n  AddRoom,\n  AddRooms,\n  EditRoom,\n  RemoveRoom,\n  SetRooms,\n} from '@/app/presenter/state/rooms/actions';\nimport { RoomStateModel } from '@/app/presenter/state/rooms/models';\n\n@State<RoomStateModel>({\n  name: 'room',\n  defaults: {\n    rooms: [],\n  },\n})\n@Injectable()\nexport class RoomState {\n  @Selector()\n  static getRooms(state: RoomStateModel) {\n    return state.rooms || [];\n  }\n  @Action(AddRoom)\n  addRoom(\n    { getState, patchState }: StateContext<RoomStateModel>,\n    { payload }: AddRoom\n  ) {\n    const state = getState();\n    patchState({\n      rooms: [...state.rooms, payload],\n    });\n  }\n\n  @Action(AddRooms)\n  addRooms(\n    { getState, patchState }: StateContext<RoomStateModel>,\n    { payload }: AddRooms\n  ) {\n    const state = getState();\n    patchState({\n      rooms: [...payload, ...state.rooms],\n    });\n  }\n\n  @Action(SetRooms)\n  setRooms(\n    { patchState }: StateContext<RoomStateModel>,\n    { payload }: AddRooms\n  ) {\n    patchState({\n      rooms: [...payload],\n    });\n  }\n\n  @Action(RemoveRoom)\n  removeRoom(\n    { getState, patchState }: StateContext<RoomStateModel>,\n    { roomId }: RemoveRoom\n  ) {\n    const state = getState();\n    patchState({\n      rooms: state.rooms.filter(room => (room?.id ?? '') !== roomId),\n    });\n  }\n\n  @Action(EditRoom)\n  editRoom(\n    { getState, patchState }: StateContext<RoomStateModel>,\n    { payload }: EditRoom\n  ) {\n    const state = getState();\n\n    const updatedRooms = state.rooms.map(room =>\n      room.id === payload.id ? { ...room, ...payload } : room\n    );\n\n    patchState({\n      rooms: updatedRooms,\n    });\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SearchFilterHotelMapper",
      "id": "injectable-SearchFilterHotelMapper-6c53170bba04b9fbed78960089d15026800ed313f15449a1625e2daf7a909004a6f6264d10f6167bf5894e75a8891de548112469feca3753de0e6fc4dad872d7",
      "file": "src/app/data/mappers/hotel/search-filter-hotel.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapToDto",
          "args": [
            {
              "name": "param",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "SearchFilterDto",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { SearchFilterDto } from '@/app/data/dtos/hotel.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchFilterHotelMapper {\n  mapToDto(param: HotelFilterModel): SearchFilterDto {\n    return {\n      city: param?.city,\n      date_arrive: param?.dateArrive,\n      date_checkout: param?.dateCheckout,\n      num_guests: param?.numGuests,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SearchHotelsFilterState",
      "id": "injectable-SearchHotelsFilterState-a445d3adbbcb35bf9250c0e97c8d320ab9b22ca815dda0cf911d280e5a004fcd7d76ec0276476f2905fb764d9f0d87eb16be42d4163b99f2eb218c44b6d9f505",
      "file": "src/app/presenter/state/searchHotelsFilter/index.ts",
      "properties": [],
      "methods": [
        {
          "name": "addActualSearchHotelFilter",
          "args": [
            {
              "type": "StateContext<SearchFilterHotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "type": "AddActualSearchHotel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "AddActualSearchHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<SearchFilterHotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "type": "AddActualSearchHotel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getActualSearchHotelFilter",
          "args": [
            {
              "name": "state",
              "type": "SearchFilterHotelStateModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Selector",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [170, 126],
          "jsdoctags": [
            {
              "name": "state",
              "type": "SearchFilterHotelStateModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeActualModel",
          "args": [
            {
              "type": "StateContext<SearchFilterHotelStateModel>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Action",
              "stringifiedArguments": "RemoveActualSearchHotel"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "type": "StateContext<SearchFilterHotelStateModel>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { SearchFilterHotelStateModel } from '@/app/presenter/state/searchHotelsFilter/models';\nimport {\n  AddActualSearchHotel,\n  RemoveActualSearchHotel,\n} from '@/app/presenter/state/searchHotelsFilter/actions';\n\n@State<SearchFilterHotelStateModel>({\n  name: 'searchFilterHotel',\n  defaults: {\n    actualSearchHotel: null,\n  },\n})\n@Injectable()\nexport class SearchHotelsFilterState {\n  @Selector()\n  static getActualSearchHotelFilter(state: SearchFilterHotelStateModel) {\n    return state.actualSearchHotel;\n  }\n\n  @Action(AddActualSearchHotel)\n  addActualSearchHotelFilter(\n    { patchState }: StateContext<SearchFilterHotelStateModel>,\n    { payload }: AddActualSearchHotel\n  ) {\n    patchState({\n      actualSearchHotel: payload,\n    });\n  }\n\n  @Action(RemoveActualSearchHotel)\n  removeActualModel({ patchState }: StateContext<SearchFilterHotelStateModel>) {\n    patchState({\n      actualSearchHotel: null,\n    });\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SessionUserService",
      "id": "injectable-SessionUserService-e551b321d69cc52fdd80655e06c392c5a11718a3aaedbac1c016349c4667062542836c88490e6cbb7073c9a422daae4be550454f7f7170d2953864e48753ed7f",
      "file": "src/app/presenter/views/shared/services/session-user.service.ts",
      "properties": [
        {
          "name": "session$",
          "defaultValue": "this.sessionSubject.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "sessionSubject",
          "defaultValue": "new BehaviorSubject<Session | null>(null)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "getUserSession",
          "args": [],
          "optional": false,
          "returnType": "Session | null",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Session } from '@supabase/supabase-js';\nimport { BehaviorSubject } from 'rxjs';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionUserService {\n  private sessionSubject = new BehaviorSubject<Session | null>(null);\n  session$ = this.sessionSubject.asObservable();\n\n  constructor(private supabaseService: SupabaseService) {\n    this.supabaseService.supabase.auth.onAuthStateChange((event, session) => {\n      this.sessionSubject.next(session);\n    });\n  }\n\n  getUserSession(): Session | null {\n    return this.sessionSubject.value;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SimpleUserLoginUseCaseService",
      "id": "injectable-SimpleUserLoginUseCaseService-fd6a10690cee791a19a754b83f44d043584d9ad3b39d070f804fb61fc8b5a84255cc35d627afb5a7f0b066f6e1b3fad6adc4c3fc45a72d7c7e88e0125e950139",
      "file": "src/app/domain/usecases/user/simple-user-login-use-case-service.ts",
      "properties": [],
      "methods": [
        {
          "name": "execute",
          "args": [
            {
              "name": "loginUserData",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "loginUserData",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { UseCase } from '@/app/domain/base/usecase';\nimport { LoginUserRequestDTO } from '@/app/core/models/dtos/auth';\nimport { AuthResponse } from '@supabase/supabase-js';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SimpleUserLoginUseCaseService\n  implements UseCase<LoginUserRequestDTO, AuthResponse>\n{\n  constructor(private _authUserAdapter: AuthUserAdapter) {}\n\n  async execute(loginUserData: LoginUserRequestDTO): Promise<AuthResponse> {\n    return this._authUserAdapter.simpleLogin(loginUserData);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_authUserAdapter",
            "type": "AuthUserAdapter",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SupabaseService",
      "id": "injectable-SupabaseService-7af10d4238baf9f49dc7ddc713e2a1a81dee2832a7b043a9c1f87765370b4e5eb7d65f4213da575249dd975c0433665d5071c0d70ecef241d5d2b2a90a230014",
      "file": "src/app/core/services/supabase/supabase.service.ts",
      "properties": [
        {
          "name": "supabase",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseClient",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methods": [],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport variables from '@/app/core/config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(variables.supabaseUrl, variables.supabaseKey);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 9
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "UpdateHotelMapper",
      "id": "injectable-UpdateHotelMapper-2bd5b1d365b8da87f66721ed1c5275bf7e77400dbb7ce2d01f569d605b3ad64a8aca3c525e3571eb0717ea50e361c716adba1224ead020ccbf4b8c56062a860d",
      "file": "src/app/data/mappers/hotel/update-hotel.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "HotelEntity",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "HotelDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { HotelDto } from '@/app/data/dtos/hotel.dto';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateHotelMapper implements Mapper<HotelEntity, HotelDto> {\n  mapFrom(param: HotelEntity): HotelDto {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additional_info_address: param.additionalAdressInfo,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n  mapTo(param: HotelDto): HotelEntity {\n    return {\n      id: param?.id,\n      name: param.name,\n      city: param.city,\n      country: param.country,\n      description: param.description,\n      additionalAdressInfo: param.additional_info_address,\n      isActive: param.isActive,\n      latitude: param?.latitude,\n      longitude: param?.longitude,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "UpdateRoomMapper",
      "id": "injectable-UpdateRoomMapper-17b40c734cfe210c2a10ff3231f856d173e47d61decb7156b3afc61fb59d1c7fc015d24446b432e8f61c4ab49dcc4b4c6a88542229f7a1d4bae0d7e58a518c83",
      "file": "src/app/data/mappers/room/update-room.mapper.ts",
      "properties": [],
      "methods": [
        {
          "name": "mapFrom",
          "args": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomDto",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapTo",
          "args": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "RoomEntity",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "param",
              "type": "RoomDto",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Mapper } from '@/app/core/base/mappers';\nimport { Injectable } from '@angular/core';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomDto } from '@/app/data/dtos/room.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateRoomMapper implements Mapper<RoomEntity, RoomDto> {\n  mapFrom(param: RoomEntity): RoomDto {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      room_number: param.roomNumber,\n      base_price: param.basePrice,\n      taxes: param.taxes,\n      is_available: param.isAvailable,\n      type: param.type,\n      description: param.description,\n    };\n  }\n  mapTo(param: RoomDto): RoomEntity {\n    return {\n      id: param.id,\n      capacity: param.capacity,\n      roomNumber: param.room_number,\n      basePrice: param.base_price,\n      taxes: param.taxes,\n      isAvailable: param.is_available,\n      type: param.type,\n      description: param.description,\n    };\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "UserRepositoryService",
      "id": "injectable-UserRepositoryService-126a56dd8cb218b55226dabef26ef3d9aa53a98923aa6a8c6c11f29cfc77722bc0c87d7a62fbc72a735215451993ba8e184bd4f774a062535fa367c00cf9fe6b",
      "file": "src/app/data/repositories/user/user-repository.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "createUserProfile",
          "args": [
            {
              "name": "userProfile",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<UserEntity>",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "userProfile",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IUserRepository"
          }
        },
        {
          "name": "getUserProfile",
          "args": [
            {
              "name": "userId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<UserEntity | null>",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "userId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "IUserRepository"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { IUserRepository } from '@/app/domain/interfaces/iuser-repository';\nimport { UserEntity } from '@/app/domain/entities/user.entity';\nimport { UserDto } from '@/app/data/dtos/user.dto';\nimport { CreateUserMapperService } from '@/app/data/mappers/user/create-user-mapper.service';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRepositoryService extends IUserRepository {\n  constructor(\n    private supabaseService: SupabaseService,\n    private createUserMapper: CreateUserMapperService\n  ) {\n    super();\n  }\n\n  async getUserProfile(userId: string): Promise<UserEntity | null> {\n    const { data, error } = await this.supabaseService.supabase\n      .from('profiles')\n      .select('*')\n      .eq('userId', userId)\n      .single<UserDto>();\n\n    if (error || !data) {\n      return null;\n    }\n\n    return this.createUserMapper.mapTo(data);\n  }\n\n  async createUserProfile(userProfile: UserEntity): Promise<UserEntity> {\n    const userDto = this.createUserMapper.mapFrom(userProfile);\n\n    const { data, error } = await this.supabaseService.supabase\n      .from('profiles')\n      .insert(userDto)\n      .select()\n      .single<UserDto>();\n\n    if (error) {\n      throw new Error('Error creating profile');\n    }\n\n    return this.createUserMapper.mapTo(data);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createUserMapper",
            "type": "CreateUserMapperService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "supabaseService",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createUserMapper",
            "type": "CreateUserMapperService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": ["IUserRepository"],
      "type": "injectable"
    }
  ],
  "guards": [
    {
      "name": "AuthGuardTravelAgent",
      "id": "injectable-AuthGuardTravelAgent-3e24be245be71e87dd3f00a5ec189297f2a9c6274b2e5a1ff20433fafb696c4f2edb1db7c09dea5877d32a106f1f36da1ab3bf14daf5fecf19b53008b09a547c",
      "file": "src/app/presenter/views/shared/guards/auth-guard-travel-agent.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "canActivate",
          "args": [],
          "optional": false,
          "returnType": "Promise | Observable | boolean | UrlTree",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "checkUserRole",
          "args": [],
          "optional": false,
          "returnType": "Promise<boolean | UrlTree>",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport { ActorRoles } from '@/app/core/constants/ActorRoles';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardTravelAgent implements CanActivate {\n  constructor(\n    private router: Router,\n    private authSessionService: IAuthUserSession\n  ) {}\n\n  canActivate():\n    | Promise<boolean | UrlTree>\n    | Observable<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.checkUserRole();\n  }\n\n  private async checkUserRole(): Promise<boolean | UrlTree> {\n    const requiredRole = ActorRoles.TRAVEL_AGENT;\n    try {\n      const user = await this.authSessionService.getUser();\n      if (!user || user.profile.role !== requiredRole) {\n        await this.router.navigate(['']);\n        return false;\n      }\n    } catch {\n      await this.router.navigate(['']);\n      return false;\n    }\n\n    return true;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "authSessionService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authSessionService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "guard"
    }
  ],
  "interceptors": [],
  "classes": [
    {
      "name": "AddActualHotel",
      "id": "class-AddActualHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelEntity | null",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 4,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelEntity | null",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity | null",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Add Actual'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AddActualSearchHotel",
      "id": "class-AddActualSearchHotel-0df19ac766985bc94beef24eb51262c93bc66256366cf374e3916ae2c8e868280ec6d4081cf7e86e397df0eb6dfc18a5176ddefb03efc4b37476419aad91e61b",
      "file": "src/app/presenter/state/searchHotelsFilter/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\n\nexport class AddActualSearchHotel {\n  static readonly type = '[SearchHotelFilter] Add search filter';\n\n  constructor(public payload: HotelFilterModel | null) {}\n}\n\nexport class RemoveActualSearchHotel {\n  static readonly type = '[SearchHotelFilter] Remove search filter';\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelFilterModel | null",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 4,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelFilterModel | null",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[SearchHotelFilter] Add search filter'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AddHotel",
      "id": "class-AddHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Add Hotel'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AddHotels",
      "id": "class-AddHotels-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelEntity[]",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[]",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Add Hotels'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AddRoom",
      "id": "class-AddRoom-25c298f49262d6e0e5ef049db3cf3884e76a55bc71ca806ec230e5d9ed0dda5926dcab37e9c7dab47eb4ac98b9ed04a11b3a7549454511aa8f7a822a885fcbaa",
      "file": "src/app/presenter/state/rooms/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class AddRoom {\n  static readonly type = '[Room] Add Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class AddRooms {\n  static readonly type = '[Room] Add Rooms';\n  constructor(public payload: RoomEntity[]) {}\n}\n\nexport class RemoveRoom {\n  static readonly type = '[Room] Remove Room';\n  constructor(public roomId: string) {}\n}\n\nexport class EditRoom {\n  static readonly type = '[Room] Edit Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class SetRooms {\n  static readonly type = '[Room] Set Room';\n  constructor(public payload: RoomEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 4,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Room] Add Room'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AddRooms",
      "id": "class-AddRooms-25c298f49262d6e0e5ef049db3cf3884e76a55bc71ca806ec230e5d9ed0dda5926dcab37e9c7dab47eb4ac98b9ed04a11b3a7549454511aa8f7a822a885fcbaa",
      "file": "src/app/presenter/state/rooms/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class AddRoom {\n  static readonly type = '[Room] Add Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class AddRooms {\n  static readonly type = '[Room] Add Rooms';\n  constructor(public payload: RoomEntity[]) {}\n}\n\nexport class RemoveRoom {\n  static readonly type = '[Room] Remove Room';\n  constructor(public roomId: string) {}\n}\n\nexport class EditRoom {\n  static readonly type = '[Room] Edit Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class SetRooms {\n  static readonly type = '[Room] Set Room';\n  constructor(public payload: RoomEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Room] Add Rooms'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AuthInjectionFactory",
      "id": "class-AuthInjectionFactory-52367320be62001e30d38c111461d4d9ef623d09a5e564a77e316ef30c2f5776415f6846ea9b4f64f8c81f9f2bfd2e06d40fda1f2e9de9bea780e4f5c34ce76a",
      "file": "src/app/core/factories/providers/auth-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { AuthUserAdapter } from '@/app/domain/interfaces/auth-user-adapter';\nimport { AuthenticationService } from '@/app/core/services/auth/authentication.service';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport { AuthSupabaseService } from '@/app/core/services/supabase/auth-supabase.service';\n\nexport class AuthInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: AuthUserAdapter,\n        useClass: AuthenticationService,\n      },\n      {\n        provide: IAuthUserSession,\n        useClass: AuthSupabaseService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "AuthUserAdapter",
      "id": "class-AuthUserAdapter-cdffc75bd824370eb440f6695e11a1715db3e25e64ec01f5385ffcea9e9cc490f4d87d897ddf8fca1f3875181b2db3648c007beb3ec1a62780834d5a18520e17",
      "file": "src/app/domain/interfaces/auth-user-adapter.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import {\n  LoginUserRequestDTO,\n  RegisterUserRequestDTO,\n} from '@/app/core/models/dtos/auth';\nimport { AuthResponse, OAuthResponse } from '@supabase/supabase-js';\nimport { LogOutRequest, OAuthInfoRequest } from '@/app/core/models/auth';\n\nexport abstract class AuthUserAdapter {\n  abstract simpleLogin(\n    loginUserDto: LoginUserRequestDTO\n  ): Promise<AuthResponse>;\n  abstract register(\n    registerUserDto: RegisterUserRequestDTO\n  ): Promise<AuthResponse>;\n  abstract oAuthLogin(\n    oAuthInfoRequest: OAuthInfoRequest\n  ): Promise<OAuthResponse>;\n  abstract logout(): Promise<LogOutRequest>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "logout",
          "args": [],
          "optional": false,
          "returnType": "Promise<LogOutRequest>",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128]
        },
        {
          "name": "oAuthLogin",
          "args": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<OAuthResponse>",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "oAuthInfoRequest",
              "type": "OAuthInfoRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "register",
          "args": [
            {
              "name": "registerUserDto",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "registerUserDto",
              "type": "RegisterUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "simpleLogin",
          "args": [
            {
              "name": "loginUserDto",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<AuthResponse>",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "loginUserDto",
              "type": "LoginUserRequestDTO",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AuthUserSessionInjectionFactory",
      "id": "class-AuthUserSessionInjectionFactory-e5acde3199ec8b585aadbb6dd23d049b62d3580f03c491e3cffd920a1fb2832f6ece7397b26bf53d616aabc35929e27d19f62c6d2d2e16fa615ade577fa63cb2",
      "file": "src/app/core/factories/providers/authUserSession-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport { AuthSupabaseService } from '@/app/core/services/supabase/auth-supabase.service';\n\nexport class AuthUserSessionInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IAuthUserSession,\n        useClass: AuthSupabaseService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "BookingEntity",
      "id": "class-BookingEntity-e17254f4039bd626a7c7d827bc068a27b1bfef8370297a101226d42451ba1f5686243c5dffdda599dd5f81236d18cca704d5ef82946531c3f4f64f43bf885ac0",
      "file": "src/app/domain/entities/booking.entity.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class BookingEntity {\n  constructor(\n    public dateArrive: string,\n    public dateCheckout: string,\n    public emergencyContactFullName: string,\n    public emergencyPhone: string,\n    public totalPrice: number,\n    public room?: string,\n    public guests?: GuestEntity[],\n    public id?: string,\n    public rooms?: RoomEntity\n  ) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dateArrive",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dateCheckout",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "emergencyContactFullName",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "emergencyPhone",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "totalPrice",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "room",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "guests",
            "type": "GuestEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "rooms",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 4,
        "jsdoctags": [
          {
            "name": "dateArrive",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dateCheckout",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "emergencyContactFullName",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "emergencyPhone",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "totalPrice",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "room",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "guests",
            "type": "GuestEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "rooms",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "dateArrive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "dateCheckout",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [125]
        },
        {
          "name": "emergencyContactFullName",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [125]
        },
        {
          "name": "emergencyPhone",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [125]
        },
        {
          "name": "guests",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "GuestEntity[]",
          "optional": true,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13,
          "modifierKind": [125]
        },
        {
          "name": "room",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "rooms",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": true,
          "description": "",
          "line": 14,
          "modifierKind": [125]
        },
        {
          "name": "totalPrice",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "BookingInjectionFactory",
      "id": "class-BookingInjectionFactory-93ad5e62fc38e4a193ae16dcfb030e316ef0debb6e178cabc20ab0029074c2a135165823c80b69f23c70aba2d5a23122d158d0cdb546f8d9da7d96e8e3b0e3e1",
      "file": "src/app/core/factories/providers/booking-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IBookingRepository } from '@/app/domain/interfaces/ibooking.repository';\nimport { BookingRepositoryService } from '@/app/data/repositories/booking/booking-repository.service';\n\nexport class BookingInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IBookingRepository,\n        useClass: BookingRepositoryService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "BookingOperationError",
      "id": "class-BookingOperationError-24b31393227033859d21f28f5e3a1ed5af5656a0037fe68fa6962e9f74d40370b40b4dc611584a6b853c3f5a2a1c8c5c96deaebeab5a28b3d85e78f60345ea8b",
      "file": "src/app/core/validations/bookings/booking-operation-error.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "export class BookingOperationError extends Error {\n  constructor(\n    public operation: string,\n    message: string,\n    public originalError?: unknown\n  ) {\n    super(message);\n    this.name = `BookingOperationError:${operation}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 1,
        "jsdoctags": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "operation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3,
          "modifierKind": [125]
        },
        {
          "name": "originalError",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": true,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": ["Error"],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "EditHotel",
      "id": "class-EditHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Edit Hotel'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "EditRoom",
      "id": "class-EditRoom-25c298f49262d6e0e5ef049db3cf3884e76a55bc71ca806ec230e5d9ed0dda5926dcab37e9c7dab47eb4ac98b9ed04a11b3a7549454511aa8f7a822a885fcbaa",
      "file": "src/app/presenter/state/rooms/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class AddRoom {\n  static readonly type = '[Room] Add Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class AddRooms {\n  static readonly type = '[Room] Add Rooms';\n  constructor(public payload: RoomEntity[]) {}\n}\n\nexport class RemoveRoom {\n  static readonly type = '[Room] Remove Room';\n  constructor(public roomId: string) {}\n}\n\nexport class EditRoom {\n  static readonly type = '[Room] Edit Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class SetRooms {\n  static readonly type = '[Room] Set Room';\n  constructor(public payload: RoomEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "RoomEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Room] Edit Room'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "GuestEntity",
      "id": "class-GuestEntity-78b34a21e0ed5319eb62d184862d6b935d18b73af3f838fbd373864ef4e5caec4fb7be8cab9b9bead9aeea8222807339c74f029e483f67f557a671f4c762901a",
      "file": "src/app/domain/entities/guest.entity.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { BookingEntity } from '@/app/domain/entities/booking.entity';\n\nexport class GuestEntity {\n  constructor(\n    public fullName: string,\n    public email: string,\n    public phoneNumber: string,\n    public birthDate: string,\n    public gender: string,\n    public documentType: string,\n    public documentNumber: string,\n    public booking?: BookingEntity['id'],\n    public id?: string\n  ) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fullName",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "email",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "phoneNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "birthDate",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "gender",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "documentType",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "documentNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "booking",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 3,
        "jsdoctags": [
          {
            "name": "fullName",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "email",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "phoneNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "birthDate",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "gender",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "documentType",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "documentNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "booking",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "birthDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [125]
        },
        {
          "name": "booking",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": true,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        },
        {
          "name": "documentNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "documentType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [125]
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "fullName",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        },
        {
          "name": "gender",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [125]
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13,
          "modifierKind": [125]
        },
        {
          "name": "phoneNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "GuestInjectionFactory",
      "id": "class-GuestInjectionFactory-9178bacf6c5d46b4290828f0fad0db25818d37faef70875b237054db5bccd55dae9f6c1a5a4e99e41e824e64c0538637a00a0cde3821a98fe18ca71422fcd01c",
      "file": "src/app/core/factories/providers/guest-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IGuestRepository } from '@/app/domain/interfaces/iguest.repository';\nimport { GuestRepositoryService } from '@/app/data/repositories/guest/guest-repository.service';\n\nexport class GuestInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IGuestRepository,\n        useClass: GuestRepositoryService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "GuestOperationError",
      "id": "class-GuestOperationError-b5f3940328455704650046eefa5e394b7d1bb718012208043b1e7a328a9cf35117d2343715b903bf1b47788d6533695ff64c3e597b087d19752aa0b098a672c7",
      "file": "src/app/core/validations/guests/guest-operation-error.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "export class GuestOperationError extends Error {\n  constructor(\n    public operation: string,\n    message: string,\n    public originalError: unknown\n  ) {\n    super(message);\n    this.name = `GuestOperationError:${operation}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 1,
        "jsdoctags": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "operation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3,
          "modifierKind": [125]
        },
        {
          "name": "originalError",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": ["Error"],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "HotelEntity",
      "id": "class-HotelEntity-b8f3f8c7257fa6de6a199415354085c255faa55ece9446b16642e235cf67cf7c0719ff17cfc150213d939eb3779aa99aafdd978bbfbf18b37b399b6886e89961",
      "file": "src/app/domain/entities/hotel.entity.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class HotelEntity {\n  constructor(\n    public name: string,\n    public description: string,\n    public country: string,\n    public city: string,\n    public additionalAdressInfo: string,\n    public latitude?: number,\n    public longitude?: number,\n    public rooms?: RoomEntity[],\n    public isActive?: boolean,\n    public agency?: string,\n    public id?: string\n  ) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "description",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "country",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "city",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "additionalAdressInfo",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "latitude",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "longitude",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "rooms",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "isActive",
            "type": "boolean",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "agency",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 3,
        "jsdoctags": [
          {
            "name": "name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "description",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "country",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "city",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "additionalAdressInfo",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "latitude",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "longitude",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "rooms",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "isActive",
            "type": "boolean",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "agency",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "additionalAdressInfo",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [125]
        },
        {
          "name": "agency",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 14,
          "modifierKind": [125]
        },
        {
          "name": "city",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [125]
        },
        {
          "name": "country",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [125]
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 15,
          "modifierKind": [125]
        },
        {
          "name": "isActive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 13,
          "modifierKind": [125]
        },
        {
          "name": "latitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 10,
          "modifierKind": [125]
        },
        {
          "name": "longitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        },
        {
          "name": "rooms",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": true,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "HotelInjectionFactory",
      "id": "class-HotelInjectionFactory-dfe41adfcee1e77527abe2183e4f775580018257005e1ea5d267dfc99e081e9751f1d06699c0531ae06bd7a97b4883608e56476bba36027617805359c9c9a374",
      "file": "src/app/core/factories/providers/hotel-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IHotelRepository } from '@/app/domain/interfaces/ihotel.repository';\nimport { HotelRepositoryService } from '@/app/data/repositories/hotel/hotel-repository.service';\n\nexport class HotelInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IHotelRepository,\n        useClass: HotelRepositoryService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "HotelOperationError",
      "id": "class-HotelOperationError-c2f3380c0c0e614737dfe2ec1c56e0d5f54eebd167def8a3408094ee21b1783fc347a5c60d10544b49614d8f304a526bcb70acdb44750e0c43413d8e010c3d12",
      "file": "src/app/core/validations/hotels/hotel-operation.error.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "export class HotelOperationError extends Error {\n  constructor(\n    public operation: string,\n    message: string,\n    public originalError: unknown\n  ) {\n    super(message);\n    this.name = `HotelOperationError:${operation}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 1,
        "jsdoctags": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "operation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3,
          "modifierKind": [125]
        },
        {
          "name": "originalError",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": ["Error"],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IAuthUserSession",
      "id": "class-IAuthUserSession-4700ca11e57c5b577044246a3b3d4a9efb4dd27e44611e3633016c56ebe12194bf99ad573d076172417e81eff53ac1e9a8f354a22e57eb5ddb49805b260f2d03",
      "file": "src/app/core/interfaces/auth/Iauth-user-session.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import {\n  AuthSessionResponse,\n  UserProfileResponse,\n} from '@/app/core/models/auth';\n\nexport abstract class IAuthUserSession {\n  abstract getUser(): Promise<UserProfileResponse>;\n  abstract getSession(): Promise<AuthSessionResponse | null>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "getSession",
          "args": [],
          "optional": false,
          "returnType": "Promise<AuthSessionResponse | null>",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128]
        },
        {
          "name": "getUser",
          "args": [],
          "optional": false,
          "returnType": "Promise<UserProfileResponse>",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IBookingRepository",
      "id": "class-IBookingRepository-55800efbbd3b63cabcfd3969230c4b69fe54c3ee6f270d32544deb58c0a87f181a80541f82cd9d09cef343880bdb8775ec4678eee7561a87ec0d88dce35b0989",
      "file": "src/app/domain/interfaces/ibooking.repository.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { BookingEntity } from '@/app/domain/entities/booking.entity';\n\nexport abstract class IBookingRepository {\n  abstract createBooking(booking: BookingEntity): Promise<BookingEntity>;\n  abstract getDetailedBookingInfoByAgent(\n    agentId: string\n  ): Promise<BookingEntity[]>;\n  abstract getDetailBookingInfo(agentId: string): Promise<BookingEntity>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createBooking",
          "args": [
            {
              "name": "booking",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 4,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "booking",
              "type": "BookingEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDetailBookingInfo",
          "args": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity>",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDetailedBookingInfoByAgent",
          "args": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<BookingEntity[]>",
          "typeParameters": [],
          "line": 5,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "agentId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IGuestRepository",
      "id": "class-IGuestRepository-8da266d4734b2231f7467075f5cfbcd890c79609c185b0f31f8439125c95c8921b51bb7dc35a7db475938023dbecb38d9bd8e1b5b938274442ed2bf00f50c477",
      "file": "src/app/domain/interfaces/iguest.repository.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { CreateGuestsBookingHotelRequest } from '@/app/core/models/guest';\n\nexport abstract class IGuestRepository {\n  abstract createGuests(\n    paramsCreateGuestsBooking: CreateGuestsBookingHotelRequest\n  ): Promise<GuestEntity[]>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createGuests",
          "args": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<GuestEntity[]>",
          "typeParameters": [],
          "line": 5,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "paramsCreateGuestsBooking",
              "type": "CreateGuestsBookingHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IHotelRepository",
      "id": "class-IHotelRepository-fc6a7c5d6791b025edbd5abe4f4db81097e92701b6bca5825298e3940779f2558cddce06748ce7b4705e70b21e3258ad46b273d2ae7fd11ca48c6e0a78924365",
      "file": "src/app/domain/interfaces/ihotel.repository.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { UpdateHotelRequest } from '@/app/core/models/hotel';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\n\nexport abstract class IHotelRepository {\n  abstract createHotel(hotel: HotelEntity): Promise<HotelEntity>;\n  abstract updateHotel(\n    paramsEditHotel: UpdateHotelRequest\n  ): Promise<HotelEntity>;\n  abstract deleteHotel(hotelId: string): Promise<void>;\n  abstract getHotel(hotelId: string): Promise<HotelEntity>;\n  abstract getHotelsByAgency(agencyId: string): Promise<HotelEntity[]>;\n  abstract getHotelsByFilter(filter: HotelFilterModel): Promise<HotelEntity[]>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createHotel",
          "args": [
            {
              "name": "hotel",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 6,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotel",
              "type": "HotelEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "deleteHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getHotelsByAgency",
          "args": [
            {
              "name": "agencyId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "agencyId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getHotelsByFilter",
          "args": [
            {
              "name": "filter",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity[]>",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "filter",
              "type": "HotelFilterModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateHotel",
          "args": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<HotelEntity>",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateHotelRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "INotificationStrategy",
      "id": "class-INotificationStrategy-49a12c0338e0be76aefa1bf36f4e3a63e1355fa5981b971f169a10e8e2e8e577aeb6785606d0ed1d101a8d095a0a4ebc4fae65c0d630144e0308653a412782ee",
      "file": "src/app/core/interfaces/notifications/inotification-strategy.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Observable } from 'rxjs';\n\nexport abstract class INotificationStrategy {\n  abstract notify(infoNotification: unknown): Observable<unknown>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "args": [
            {
              "name": "infoNotification",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<>",
          "typeParameters": [],
          "line": 4,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "infoNotification",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IRoomRepository",
      "id": "class-IRoomRepository-0f6ac64c4f39f9a1ff607a21934a36526934b911cff1ecb32589fb43cc5477e82b08cf1c33732605d8b3c6cfde8a1c5080b4b038181292b65b42c8180830528c",
      "file": "src/app/domain/interfaces/iroom.repository.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { UpdateRoomRequest } from '@/app/core/models/room';\n\nexport abstract class IRoomRepository {\n  abstract createRoom(hotel: RoomEntity): Promise<RoomEntity>;\n  abstract updateRoom(paramsEditHotel: UpdateRoomRequest): Promise<RoomEntity>;\n  abstract deleteRoom(hotelId: string): Promise<void>;\n  abstract getRoom(hotelId: string): Promise<RoomEntity>;\n  abstract getRoomsByHotel(hotelId: string): Promise<RoomEntity[]>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createRoom",
          "args": [
            {
              "name": "hotel",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 5,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotel",
              "type": "RoomEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "deleteRoom",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getRoom",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getRoomsByHotel",
          "args": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity[]>",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "hotelId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateRoom",
          "args": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<RoomEntity>",
          "typeParameters": [],
          "line": 6,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "paramsEditHotel",
              "type": "UpdateRoomRequest",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IUserRepository",
      "id": "class-IUserRepository-455dcece299201de040c95935e990471d22109babe5fe0d459f73d7b1786077908de6d757b17d4c3a905671ebf1df6a8a3ecedb9a65e2cb7290aa37b8d8aeebf",
      "file": "src/app/domain/interfaces/iuser-repository.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { UserEntity } from '@/app/domain/entities/user.entity';\n\nexport abstract class IUserRepository {\n  abstract getUserProfile(userId: string): Promise<UserEntity | null>;\n  abstract createUserProfile(profile: UserEntity): Promise<UserEntity>;\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createUserProfile",
          "args": [
            {
              "name": "profile",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<UserEntity>",
          "typeParameters": [],
          "line": 5,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "profile",
              "type": "UserEntity",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getUserProfile",
          "args": [
            {
              "name": "userId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<UserEntity | null>",
          "typeParameters": [],
          "line": 4,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [128],
          "jsdoctags": [
            {
              "name": "userId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "NotificationInjectionFactory",
      "id": "class-NotificationInjectionFactory-a0a075412d04e85eb5c86d3baded76e3b028c519f244f6e2350e90addc338d8a6a93191747bdd5956bac077e706922b5fc62185812307d88fb8e6fda913d2563",
      "file": "src/app/core/factories/providers/notification-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\n\nexport class NotificationInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      /* {\n        provide: INotificationStrategy,\n        useClass: EmailNotificationService,\n      },*/\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 6,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "RemoveActualHotel",
      "id": "class-RemoveActualHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "type",
          "defaultValue": "'[Hotel] Remove Actual Hotel'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "RemoveActualSearchHotel",
      "id": "class-RemoveActualSearchHotel-0df19ac766985bc94beef24eb51262c93bc66256366cf374e3916ae2c8e868280ec6d4081cf7e86e397df0eb6dfc18a5176ddefb03efc4b37476419aad91e61b",
      "file": "src/app/presenter/state/searchHotelsFilter/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\n\nexport class AddActualSearchHotel {\n  static readonly type = '[SearchHotelFilter] Add search filter';\n\n  constructor(public payload: HotelFilterModel | null) {}\n}\n\nexport class RemoveActualSearchHotel {\n  static readonly type = '[SearchHotelFilter] Remove search filter';\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "type",
          "defaultValue": "'[SearchHotelFilter] Remove search filter'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "RemoveHotel",
      "id": "class-RemoveHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "hotelId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "hotelId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "hotelId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Remove Hotel'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "RemoveRoom",
      "id": "class-RemoveRoom-25c298f49262d6e0e5ef049db3cf3884e76a55bc71ca806ec230e5d9ed0dda5926dcab37e9c7dab47eb4ac98b9ed04a11b3a7549454511aa8f7a822a885fcbaa",
      "file": "src/app/presenter/state/rooms/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class AddRoom {\n  static readonly type = '[Room] Add Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class AddRooms {\n  static readonly type = '[Room] Add Rooms';\n  constructor(public payload: RoomEntity[]) {}\n}\n\nexport class RemoveRoom {\n  static readonly type = '[Room] Remove Room';\n  constructor(public roomId: string) {}\n}\n\nexport class EditRoom {\n  static readonly type = '[Room] Edit Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class SetRooms {\n  static readonly type = '[Room] Set Room';\n  constructor(public payload: RoomEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "roomId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "roomId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "roomId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Room] Remove Room'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "RoomEntity",
      "id": "class-RoomEntity-84f885505b2960e6d0d0ed19f35259bfba7db9b7ce338499c9638107b146433ccd397273550366a79589f8de5bb1970bfb5819fe861e33c86ebff808704e03dc",
      "file": "src/app/domain/entities/room.entity.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class RoomEntity {\n  constructor(\n    public type: string,\n    public basePrice: number,\n    public taxes: number,\n    public roomNumber: string,\n    public capacity: number,\n    public description: string,\n    public isAvailable?: boolean,\n    public hotel?: string,\n    public id?: string,\n    public hotels?: HotelEntity\n  ) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "type",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "basePrice",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "taxes",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "roomNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "capacity",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "description",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "isAvailable",
            "type": "boolean",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "hotel",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "hotels",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 3,
        "jsdoctags": [
          {
            "name": "type",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "basePrice",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "taxes",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "roomNumber",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "capacity",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "description",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "isAvailable",
            "type": "boolean",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "hotel",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "hotels",
            "type": "HotelEntity",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "basePrice",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "capacity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [125]
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [125]
        },
        {
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        },
        {
          "name": "hotels",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": true,
          "description": "",
          "line": 14,
          "modifierKind": [125]
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13,
          "modifierKind": [125]
        },
        {
          "name": "isAvailable",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "roomNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [125]
        },
        {
          "name": "taxes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "RoomInjectionFactory",
      "id": "class-RoomInjectionFactory-aa4ef7b6197db5023fc962122211f6d31793bb400c674e1ad1301e3124193ca4711f48ce15287b321ee96dcadacb009701d377659333f337686c9ce884e3c282",
      "file": "src/app/core/factories/providers/room-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IRoomRepository } from '@/app/domain/interfaces/iroom.repository';\nimport { RoomRepositoryService } from '@/app/data/repositories/room/room-repository.service';\n\nexport class RoomInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IRoomRepository,\n        useClass: RoomRepositoryService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    },
    {
      "name": "RoomOperationError",
      "id": "class-RoomOperationError-267e31b76ac1d91008131f3a724b5672f58a045aa6c60a039fec3bc715114043fbe2bc99ce14cf9bc16682400c2164961e5dda070283dfee6837ef13131f6950",
      "file": "src/app/core/validations/rooms/room-operation.error.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "export class RoomOperationError extends Error {\n  constructor(\n    public operation: string,\n    message: string,\n    public originalError: unknown\n  ) {\n    super(message);\n    this.name = `RoomOperationError:${operation}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 1,
        "jsdoctags": [
          {
            "name": "operation",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "message",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "originalError",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "operation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3,
          "modifierKind": [125]
        },
        {
          "name": "originalError",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": ["Error"],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "SetHotel",
      "id": "class-SetHotel-09934d0e47a94675de6d722e5a7563cd936632a2157eb2e78ac1f032816983152a55b365194d0c743241a56c576ec5b5e30b354764baa0c6ed387eef918f907f",
      "file": "src/app/presenter/state/hotels/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { HotelEntity } from '@/app/domain/entities/hotel.entity';\n\nexport class AddActualHotel {\n  static readonly type = '[Hotel] Add Actual';\n\n  constructor(public payload: HotelEntity | null) {}\n}\n\nexport class RemoveHotel {\n  static readonly type = '[Hotel] Remove Hotel';\n  constructor(public hotelId: string) {}\n}\nexport class AddHotel {\n  static readonly type = '[Hotel] Add Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class AddHotels {\n  static readonly type = '[Hotel] Add Hotels';\n  constructor(public payload: HotelEntity[]) {}\n}\n\nexport class RemoveActualHotel {\n  static readonly type = '[Hotel] Remove Actual Hotel';\n}\n\nexport class EditHotel {\n  static readonly type = '[Hotel] Edit Hotel';\n  constructor(public payload: HotelEntity) {}\n}\n\nexport class SetHotel {\n  static readonly type = '[Hotel] Set Hotel';\n  constructor(public payload: HotelEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "HotelEntity[]",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 33,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "HotelEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[]",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Hotel] Set Hotel'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "SetRooms",
      "id": "class-SetRooms-25c298f49262d6e0e5ef049db3cf3884e76a55bc71ca806ec230e5d9ed0dda5926dcab37e9c7dab47eb4ac98b9ed04a11b3a7549454511aa8f7a822a885fcbaa",
      "file": "src/app/presenter/state/rooms/actions/index.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { RoomEntity } from '@/app/domain/entities/room.entity';\n\nexport class AddRoom {\n  static readonly type = '[Room] Add Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class AddRooms {\n  static readonly type = '[Room] Add Rooms';\n  constructor(public payload: RoomEntity[]) {}\n}\n\nexport class RemoveRoom {\n  static readonly type = '[Room] Remove Room';\n  constructor(public roomId: string) {}\n}\n\nexport class EditRoom {\n  static readonly type = '[Room] Edit Room';\n  constructor(public payload: RoomEntity) {}\n}\n\nexport class SetRooms {\n  static readonly type = '[Room] Set Room';\n  constructor(public payload: RoomEntity[]) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "payload",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "payload",
            "type": "RoomEntity[]",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "payload",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [125]
        },
        {
          "name": "type",
          "defaultValue": "'[Room] Set Room'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [126, 148]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "UserEntity",
      "id": "class-UserEntity-434e1c0d5b55ac8e8417b41d207687236a7b091b16950d8c821ce12a474c35b2d38195b4b765ae694e04e21ba90f24f3c5bb32814a43c0b983c940598512f4fc",
      "file": "src/app/domain/entities/user.entity.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { ActorRoles } from '@/app/core/constants/ActorRoles';\n\nexport class UserEntity {\n  constructor(\n    public full_name: string,\n    public email: string,\n    public role?: ActorRoles,\n    public id?: string,\n    public authUser?: string\n  ) {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "full_name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "email",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "role",
            "type": "ActorRoles",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          },
          {
            "name": "authUser",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 3,
        "jsdoctags": [
          {
            "name": "full_name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "email",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "role",
            "type": "ActorRoles",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authUser",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "inputsClass": [],
      "outputsClass": [],
      "properties": [
        {
          "name": "authUser",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 9,
          "modifierKind": [125]
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [125]
        },
        {
          "name": "full_name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [125]
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8,
          "modifierKind": [125]
        },
        {
          "name": "role",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ActorRoles",
          "optional": true,
          "description": "",
          "line": 7,
          "modifierKind": [125]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "UserInjectionFactory",
      "id": "class-UserInjectionFactory-ad697c44daee03b1f1e18feb41aa5df906016c2103e36e8b44bb2d3aa96f0c31e1a1de455b4d39d2f6a13f4468d47f27d096b38961bd57d7ff3eca0f7458b124",
      "file": "src/app/core/factories/providers/user-injection-factory.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { Provider } from '@angular/core';\n\nimport { IInjectionFactory } from '@/app/core/interfaces/factories/iinjection-factory';\nimport { IUserRepository } from '@/app/domain/interfaces/iuser-repository';\nimport { UserRepositoryService } from '@/app/data/repositories/user/user-repository.service';\n\nexport class UserInjectionFactory implements IInjectionFactory {\n  createProviders(): Provider[] {\n    return [\n      {\n        provide: IUserRepository,\n        useClass: UserRepositoryService,\n      },\n    ];\n  }\n}\n",
      "inputsClass": [],
      "outputsClass": [],
      "properties": [],
      "methods": [
        {
          "name": "createProviders",
          "args": [],
          "optional": false,
          "returnType": "Provider[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "indexSignatures": [],
      "extends": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["IInjectionFactory"]
    }
  ],
  "directives": [],
  "components": [
    {
      "name": "AddGuestsToRoomReservationComponent",
      "id": "component-AddGuestsToRoomReservationComponent-20e6e544e54316642917b5b305d5b87b992a8e4c62685702bfcfd8af2d1eecb5c5b22e027e06dc734b6ae1ac837dc9f60a8553449d27b1f2cdf33b9a824b26c2",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/add-guests-to-room-reservation/add-guests-to-room-reservation.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MessageService",
          "type": "injectable"
        }
      ],
      "selector": "app-add-guests-to-room-reservation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./add-guests-to-room-reservation.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualRoom",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity | null",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "actualSearchHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "actualSearchHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelFilterModel | null>",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "FormGroup",
          "defaultValue": "FormGroup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 200,
          "modifierKind": [124, 148]
        },
        {
          "name": "reservationForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<BookingRoomFormModel>",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "stateReservationProcess",
          "defaultValue": "StatusProcessAction.IDLE",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "StatusProcessAction",
          "defaultValue": "StatusProcessAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 201,
          "modifierKind": [124, 148]
        }
      ],
      "methodsClass": [
        {
          "name": "addGuest",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 142,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "createGuestFormGroup",
          "args": [],
          "optional": false,
          "returnType": "FormGroup<GuestBookingFormModel>",
          "typeParameters": [],
          "line": 109,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "removeGuest",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 146,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "submitReservation",
          "args": [],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 150,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "InputTextareaModule",
          "type": "module"
        },
        {
          "name": "PaginatorModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ButtonDirective",
          "type": "directive"
        },
        {
          "name": "NgForOf"
        },
        {
          "name": "CalendarModule",
          "type": "module"
        },
        {
          "name": "MessageModule",
          "type": "module"
        },
        {
          "name": "ProgressSpinnerModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport {\n  BookingRoomFormModel,\n  GuestBookingFormModel,\n} from '@/app/presenter/models/form/booking.model';\nimport { ButtonDirective } from 'primeng/button';\nimport { NgForOf } from '@angular/common';\nimport { CalendarModule } from 'primeng/calendar';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { CreateCompleteBookingUseCaseService } from '@/app/domain/usecases/booking/create-complete-booking-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { BookingOperationError } from '@/app/core/validations/bookings/booking-operation-error';\nimport { GuestOperationError } from '@/app/core/validations/guests/guest-operation-error';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { MessageModule } from 'primeng/message';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\nexport interface AddGuestToBookingDynamicDialogConfig {\n  room: RoomEntity;\n}\n\n@Component({\n  selector: 'app-add-guests-to-room-reservation',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    IconComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    ButtonDirective,\n    NgForOf,\n    CalendarModule,\n    MessageModule,\n    ProgressSpinnerModule,\n  ],\n  templateUrl: './add-guests-to-room-reservation.component.html',\n  styleUrl: './add-guests-to-room-reservation.component.scss',\n  providers: [MessageService],\n})\nexport class AddGuestsToRoomReservationComponent implements OnInit {\n  reservationForm!: FormGroup<BookingRoomFormModel>;\n\n  actualSearchHotel: HotelFilterModel | null = null;\n  actualSearchHotel$: Observable<HotelFilterModel | null>;\n\n  actualRoom: RoomEntity | null = null;\n  stateReservationProcess = StatusProcessAction.IDLE;\n\n  constructor(\n    private createCompleteBookingUseCaseService: CreateCompleteBookingUseCaseService,\n    private store: Store,\n    private dialogConfig: DynamicDialogConfig<AddGuestToBookingDynamicDialogConfig>,\n    private dynamicDialogRef: DynamicDialogRef\n  ) {\n    this.actualSearchHotel$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n    this.actualRoom = this.dialogConfig.data?.room ?? null;\n  }\n\n  ngOnInit(): void {\n    this.actualSearchHotel$.subscribe(actualSearchFilterHotel => {\n      this.actualSearchHotel = actualSearchFilterHotel;\n    });\n\n    this.reservationForm = new FormGroup<BookingRoomFormModel>({\n      emergencyContactName: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      emergencyContactPhone: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      guests: new FormArray<FormGroup<GuestBookingFormModel>>([]),\n    });\n    this.addGuest();\n  }\n\n  get guests(): FormArray<FormGroup<GuestBookingFormModel>> {\n    return this.reservationForm.controls.guests;\n  }\n\n  createGuestFormGroup(): FormGroup<GuestBookingFormModel> {\n    return new FormGroup<GuestBookingFormModel>({\n      fullName: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      birthDate: new FormControl(null, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      gender: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      documentType: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      documentNumber: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      email: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.email],\n      }),\n      phoneNumber: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    });\n  }\n\n  addGuest(): void {\n    this.guests.push(this.createGuestFormGroup());\n  }\n\n  removeGuest(index: number): void {\n    this.guests.removeAt(index);\n  }\n\n  async submitReservation(): Promise<void> {\n    if (this.reservationForm.invalid) {\n      this.reservationForm.markAllAsTouched();\n      return;\n    }\n    console.log('ssss');\n    console.log(this.actualSearchHotel);\n    this.stateReservationProcess = StatusProcessAction.LOADING;\n    try {\n      await this.createCompleteBookingUseCaseService.execute({\n        emergencyContactFullName:\n          this.reservationForm.value.emergencyContactName!,\n        emergencyPhone: this.reservationForm.value.emergencyContactPhone!,\n        dateArrive: this.actualSearchHotel!.dateArrive!,\n        dateCheckout: this.actualSearchHotel!.dateCheckout!,\n        totalPrice: this.actualRoom!.basePrice + this.actualRoom!.taxes,\n        guests: this.reservationForm.value.guests?.map(guest => ({\n          fullName: guest.fullName!,\n          birthDate: guest.birthDate!,\n          gender: guest.gender!,\n          documentType: guest.documentType!,\n          documentNumber: guest.documentNumber!,\n          email: guest.email!,\n          phoneNumber: guest.phoneNumber!,\n        })),\n        room: this.actualRoom?.id,\n      });\n\n      this.stateReservationProcess = StatusProcessAction.SUCCESS;\n\n      this.dynamicDialogRef.close({\n        success: true,\n      });\n    } catch (error) {\n      this.stateReservationProcess = StatusProcessAction.ERROR;\n\n      if (error instanceof BookingOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear la reservaci√≥n',\n          error.message\n        );\n      } else if (error instanceof GuestOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear los huespedes',\n          error.message\n        );\n      }\n    }\n  }\n\n  protected readonly FormGroup = FormGroup;\n  protected readonly StatusProcessAction = StatusProcessAction;\n}\n",
      "styleUrl": "./add-guests-to-room-reservation.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "createCompleteBookingUseCaseService",
            "type": "CreateCompleteBookingUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogConfig",
            "type": "DynamicDialogConfig<AddGuestToBookingDynamicDialogConfig>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dynamicDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 72,
        "jsdoctags": [
          {
            "name": "createCompleteBookingUseCaseService",
            "type": "CreateCompleteBookingUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogConfig",
            "type": "DynamicDialogConfig<AddGuestToBookingDynamicDialogConfig>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dynamicDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "accessors": {
        "guests": {
          "name": "guests",
          "getSignature": {
            "name": "guests",
            "type": "",
            "returnType": "FormArray<FormGroup<GuestBookingFormModel>>",
            "line": 105
          }
        }
      },
      "templateData": "<div class=\"complete-reservation\">\n  <div class=\"complete-reservation__contact-data\">\n    <form [formGroup]=\"reservationForm\" class=\"create-reservation__form\">\n      <div class=\"contact_emergency\">\n        <!-- Emergency Contact Name -->\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"name_emergency\"\n              type=\"text\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"reservationForm.controls.emergencyContactName\" />\n            <label for=\"name_emergency\"\n              >Nombre completo contacto de emergencia</label\n            >\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"reservationForm.controls.emergencyContactName\"\n            displayName=\"El nombre del contacto de emergencia\"></app-errors-form-messages>\n        </div>\n\n        <!-- Emergency Contact Phone -->\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"phone_emergency\"\n              type=\"text\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"reservationForm.controls.emergencyContactPhone\" />\n            <label for=\"phone_emergency\">Tel√©fono de emergencia</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"reservationForm.controls.emergencyContactPhone\"\n            displayName=\"El tel√©fono del contacto de emergencia\"></app-errors-form-messages>\n        </div>\n      </div>\n\n      <hr class=\"mt-5\" />\n\n      <div formArrayName=\"guests\">\n        <div\n          *ngFor=\"let guest of guests.controls; let i = index\"\n          [formGroupName]=\"i\"\n          [id]=\"'guest_' + i\"\n          class=\"passenger-group flex flex-col gap-y-8 mt-5\">\n          <div class=\"flex justify-between\">\n            <h2 class=\"my-2 font-bold\">Huesped {{ i + 1 }}</h2>\n            @if (guests.length > 1) {\n              <button class=\"text-error\" (click)=\"removeGuest(i)\">\n                <app-icon name=\"matDeleteRound\"></app-icon>\n              </button>\n            }\n          </div>\n          <div class=\"flex flex-col gap-8\">\n            <!-- Full Name -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"name_{{ i }}\"\n                  type=\"text\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.fullName\" />\n                <label for=\"name_{{ i }}\">Full Name</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.fullName\"\n                displayName=\"Nombre completo\"></app-errors-form-messages>\n            </div>\n\n            <!-- Date of Birth -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <p-calendar\n                  id=\"birthdate_{{ i }}\"\n                  styleClass=\"w-full\"\n                  dateFormat=\"yy/mm/dd\"\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.birthDate\" />\n\n                <label for=\"birthdate_{{ i }}\">Date of Birth</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.birthDate\"\n                displayName=\"Fecha de nacimiento\"></app-errors-form-messages>\n            </div>\n\n            <!-- Gender -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"gender_{{ i }}\"\n                  type=\"text\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.gender\" />\n                <label for=\"gender_{{ i }}\">Gender</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.gender\"\n                displayName=\"Genero\"></app-errors-form-messages>\n            </div>\n\n            <!-- Document Type -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"documentType_{{ i }}\"\n                  type=\"text\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.documentType\" />\n                <label for=\"documentType_{{ i }}\">Document Type</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.documentType\"\n                displayName=\"Tipo de documento\"></app-errors-form-messages>\n            </div>\n\n            <!-- Document Number -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"documentNumber_{{ i }}\"\n                  type=\"text\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.documentNumber\" />\n                <label for=\"documentNumber_{{ i }}\">Document Number</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.documentNumber\"\n                displayName=\"N√∫mero de documento\"></app-errors-form-messages>\n            </div>\n\n            <!-- Email -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"email_{{ i }}\"\n                  type=\"email\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.email\" />\n                <label for=\"email_{{ i }}\">Email</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.email\"\n                displayName=\"Correo\"></app-errors-form-messages>\n            </div>\n\n            <!-- Contact Phone -->\n            <div class=\"w-full\">\n              <p-floatLabel class=\"w-full\">\n                <input\n                  id=\"phone_{{ i }}\"\n                  type=\"text\"\n                  pInputText\n                  class=\"w-full\"\n                  [formControl]=\"guest.controls.phoneNumber\" />\n                <label for=\"phone_{{ i }}\">Contact Phone</label>\n              </p-floatLabel>\n              <app-errors-form-messages\n                [control]=\"guest.controls.phoneNumber\"\n                displayName=\"Tel√©fono de contacto\"></app-errors-form-messages>\n            </div>\n          </div>\n        </div>\n\n        <!-- Add Guest Button -->\n        @if (guests.length < actualRoom!.capacity) {\n          <div class=\"mt-2\">\n            <app-button\n              pButton\n              text=\"Agregar hu√©sped\"\n              size=\"small\"\n              type=\"button\"\n              (click)=\"addGuest()\">\n              <app-icon name=\"matAddCircleRound\" class=\"mr-2\"></app-icon>\n            </app-button>\n          </div>\n        }\n      </div>\n      <div class=\"flex justify-center mt-2\">\n        @if (stateReservationProcess === StatusProcessAction.ERROR) {\n          <p-message\n            severity=\"error\"\n            text=\"Ha ocurrido un error al realizar la reserva, intente de nuevo\"></p-message>\n        }\n        @if (stateReservationProcess === StatusProcessAction.LOADING) {\n          <p-progressSpinner\n            ariaLabel=\"loading\"\n            styleClass=\"w-[20px] h-[20px] mr-2\" />\n          <p>Reservando...</p>\n        }\n      </div>\n      <div class=\"mt-5 flex justify-center\">\n        <app-button\n          pButton\n          text=\"Realizar reserva\"\n          type=\"button\"\n          (click)=\"submitReservation()\">\n        </app-button>\n      </div>\n    </form>\n  </div>\n\n  <ng-template pTemplate=\"footer\">\n    @if (stateReservationProcess !== StatusProcessAction.LOADING) {\n      <p-button\n        label=\"Cancel\"\n        [text]=\"true\"\n        severity=\"secondary\"\n        (onClick)=\"submitReservation()\" />\n    }\n  </ng-template>\n</div>\n"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-f6ffb5a09e99868554273180d5de6b875cac9eaae7d28768c52e5e9d93a22c3205a7017a7fbe8ab940d027d0ed8ffbc28912bc7f012eb0ba75544c59af912b43",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MessageService",
          "type": "injectable"
        },
        {
          "name": "DialogService",
          "type": "injectable"
        }
      ],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [
        {
          "name": "provideIcons({ ...materialUIIcons })",
          "ns": "provideIcons({ "
        }
      ],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterOutlet"
        },
        {
          "name": "MainLayoutComponent",
          "type": "component"
        },
        {
          "name": "ToastModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MainLayoutComponent } from '@/app/presenter/views/shared/layouts/main-layout/main-layout.component';\nimport { provideIcons } from '@ng-icons/core';\nimport { materialUIIcons } from '@/app/presenter/icons/providerIcons';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, MainLayoutComponent, ToastModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  viewProviders: [provideIcons({ ...materialUIIcons })],\n  providers: [MessageService, DialogService],\n})\nexport class AppComponent implements OnInit {\n  constructor(private primengConfig: PrimeNGConfig) {}\n  ngOnInit() {\n    this.primengConfig.setTranslation({\n      clear: 'Limpiar',\n      today: 'Hoy',\n    });\n  }\n}\n",
      "styleUrl": "./app.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<app-main-layout></app-main-layout>\n"
    },
    {
      "name": "AuthenticationFormModalComponent",
      "id": "component-AuthenticationFormModalComponent-777ad3e5026a4d9c2b2a4fffc89b594ba824b56e1e4fbbbcb84549e2f93f18150413446bf027e16a4778b6194d787933624ca43b0481876886fdf58b1ac786bf",
      "file": "src/app/presenter/views/shared/components/common/organisms/auth/authentication-form-modal/authentication-form-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "DialogService",
          "type": "injectable"
        }
      ],
      "selector": "app-authentication-form-modal",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./authentication-form-modal.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isTravelAgent",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "isTraveller",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [
        {
          "name": "changedIsTravelAgent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "changedIsTraveller",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "closeDialog",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "DialogModule",
          "type": "module"
        },
        {
          "name": "ToggleButtonModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "NgIf"
        },
        {
          "name": "TravelAgenterAuthenticationFormComponent",
          "type": "component"
        },
        {
          "name": "TravellerAuthenticationFormComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { TravelAgenterAuthenticationFormComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/travel-agenter-authentication-form/travel-agenter-authentication-form.component';\nimport { TravellerAuthenticationFormComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/traveller-authentication-form/traveller-authentication-form.component';\n\n@Component({\n  selector: 'app-authentication-form-modal',\n  standalone: true,\n  imports: [\n    DialogModule,\n    ToggleButtonModule,\n    IconComponent,\n    FormsModule,\n    NgIf,\n    TravelAgenterAuthenticationFormComponent,\n    TravellerAuthenticationFormComponent,\n  ],\n  templateUrl: './authentication-form-modal.component.html',\n  styleUrl: './authentication-form-modal.component.scss',\n  providers: [DialogService],\n})\nexport class AuthenticationFormModalComponent {\n  isTravelAgent = false;\n  isTraveller = true;\n\n  constructor(private refAuthenticationModal: DynamicDialogRef) {}\n\n  closeDialog() {\n    this.refAuthenticationModal.close();\n  }\n\n  changedIsTravelAgent() {\n    this.isTraveller = !this.isTraveller;\n  }\n\n  changedIsTraveller() {\n    this.isTravelAgent = !this.isTravelAgent;\n  }\n}\n",
      "styleUrl": "./authentication-form-modal.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "refAuthenticationModal",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "refAuthenticationModal",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<section class=\"authentication-user\">\n  <div class=\"authentication-user__header\">\n    <img\n      class=\"main-brand__logo\"\n      src=\"/assets/img/main-logo-ultra-hotels-transparent.png\"\n      width=\"60px\"\n      height=\"60px\"\n      alt=\"Ultra Hotels logo\" />\n    <h2 class=\"authentication-user__header__title text-headline-lg\">\n      Iniciar sesi√≥n\n    </h2>\n    <div class=\"type-user-options\">\n      <p-toggleButton\n        [(ngModel)]=\"isTraveller\"\n        onLabel=\"Soy viajero\"\n        offLabel=\"Soy viajero\"\n        (onChange)=\"changedIsTraveller()\"\n        styleClass=\"w-9rem mt-5\"\n        ariaLabel=\"¬øEs viajero?\">\n        <ng-template pTemplate=\"offIcon\">\n          <span class=\"mr-4\">\n            <app-icon name=\"matTravelExploreRound\"></app-icon>\n          </span>\n        </ng-template>\n      </p-toggleButton>\n      <p-toggleButton\n        [(ngModel)]=\"isTravelAgent\"\n        onLabel=\"Soy agente de viajes\"\n        offLabel=\"Soy agente de viajes\"\n        (onChange)=\"changedIsTravelAgent()\"\n        styleClass=\"w-9rem mt-5\"\n        ariaLabel=\"¬øEs agente de viajes?\">\n        <ng-template pTemplate=\"offIcon\">\n          <span class=\"mr-4\">\n            <app-icon name=\"matCardTravelRound\"></app-icon>\n          </span>\n        </ng-template>\n      </p-toggleButton>\n    </div>\n  </div>\n  <div class=\"authentication-user__body\">\n    @if (isTravelAgent) {\n      <app-travel-agenter-authentication-form\n        [closeAuthenticationDialog]=\"\n          closeDialog.bind(this)\n        \"></app-travel-agenter-authentication-form>\n    } @else {\n      <app-traveller-authentication-form\n        [closeAuthenticationDialog]=\"\n          closeDialog.bind(this)\n        \"></app-traveller-authentication-form>\n    }\n  </div>\n</section>\n"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-67d4704def1fcf985e4f5cce1399d70514136ec77bd7a95f42d9f24cf3281102437505b22fd75d5a59e0e305787615fd0d1bfd9f5d11c1943bc2c57675e6a4f0",
      "file": "src/app/presenter/views/shared/components/design-system/atoms/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "classStyles",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "\"small\" | \"large\" | undefined",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        },
        {
          "name": "type",
          "defaultValue": "'button'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string",
          "decorators": []
        },
        {
          "name": "variant",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "Button"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Button } from 'primeng/button';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [Button],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss',\n})\nexport class ButtonComponent {\n  @Input() text = '';\n  @Input() size: 'small' | 'large' | undefined;\n  @Input() classStyles = '';\n  @Input() variant = 'primary';\n  @Input() type = 'button';\n}\n",
      "styleUrl": "./button.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p-button\n  [class]=\"['ds-button', variant]\"\n  [size]=\"size\"\n  [type]=\"type\"\n  [styleClass]=\"classStyles\">\n  <ng-content></ng-content>\n  <span>{{ text }}</span>\n</p-button>\n"
    },
    {
      "name": "CreateNewHotelModalComponent",
      "id": "component-CreateNewHotelModalComponent-4960af9f0e9d92a43429031c5d97d4ed1d9a635a5511ff77946a9ce8ceedab9ba47b0ad275047c6ddfd86befe9ddcd5213b9fb3bc6af9f83986726b863fe6f2e",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/create-new-hotel-modal/create-new-hotel-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-create-new-hotel-modal",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./create-new-hotel-modal.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cities",
          "defaultValue": "cities",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 153,
          "modifierKind": [124, 148]
        },
        {
          "name": "countries",
          "defaultValue": "countries",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 154,
          "modifierKind": [124, 148]
        },
        {
          "name": "createHotelForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<CreateHotelForm>",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [125]
        },
        {
          "name": "mapModalRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "sessionUserService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SessionUserService",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [125]
        }
      ],
      "methodsClass": [
        {
          "name": "createHotel",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 98,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "openMapModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "InputTextareaModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "Button"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "DropdownModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport {\n  AddressCreateHotelForm,\n  CreateHotelForm,\n} from '@/app/presenter/models/form/hotel.model';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CreateHotelUseCaseService } from '@/app/domain/usecases/hotel/create-hotel-use-case.service';\nimport { HotelOperationError } from '@/app/core/validations/hotels/hotel-operation.error';\nimport { MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { Button } from 'primeng/button';\nimport { MapModalComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/map-modal/map-modal.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { cities } from '@/app/presenter/views/shared/constants/cities';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { countries } from '@/app/presenter/views/shared/constants/countries';\nimport { Store } from '@ngxs/store';\nimport { AddHotel } from '@/app/presenter/state/hotels/actions';\n\n@Component({\n  selector: 'app-create-new-hotel-modal',\n  standalone: true,\n  imports: [\n    FloatLabelModule,\n    ReactiveFormsModule,\n    ErrorsFormMessagesComponent,\n    InputTextareaModule,\n    ButtonComponent,\n    InputTextModule,\n    FormsModule,\n    Button,\n    IconComponent,\n    DropdownModule,\n  ],\n  templateUrl: './create-new-hotel-modal.component.html',\n  styleUrl: './create-new-hotel-modal.component.scss',\n})\nexport class CreateNewHotelModalComponent {\n  createHotelForm!: FormGroup<CreateHotelForm>;\n\n  mapModalRef: DynamicDialogRef | undefined;\n\n  constructor(\n    public dialogService: DialogService,\n    private fb: FormBuilder,\n    private createHotelUseCaseService: CreateHotelUseCaseService,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    public sessionUserService: SessionUserService,\n    private store: Store\n  ) {\n    this.createHotelForm = this.fb.group<CreateHotelForm>({\n      name: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      description: this.fb.control(''),\n      address: this.fb.group<AddressCreateHotelForm>({\n        country: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        city: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        additionalInfo: this.fb.control(''),\n        latitude: this.fb.control(51.505, {\n          nonNullable: true,\n          validators: [\n            Validators.required,\n            Validators.pattern(/^-?\\d+(\\.\\d+)?$/),\n          ],\n        }),\n        longitude: this.fb.control(0.09, {\n          nonNullable: true,\n          validators: [\n            Validators.required,\n            Validators.pattern(/^-?\\d+(\\.\\d+)?$/),\n          ],\n        }),\n      }),\n    });\n  }\n\n  async createHotel() {\n    if (this.createHotelForm.invalid) {\n      this.createHotelForm.markAllAsTouched();\n      return;\n    }\n\n    try {\n      const hotelCreated = await this.createHotelUseCaseService.execute({\n        name: this.createHotelForm.value.name!,\n        description: this.createHotelForm.value.description!,\n        country: this.createHotelForm.value?.address?.country ?? '',\n        city: this.createHotelForm.value?.address?.city ?? '',\n        additionalAdressInfo:\n          this.createHotelForm.value?.address?.additionalInfo ?? '',\n        agency: this.sessionUserService.getUserSession()?.user?.id,\n        latitude: this.createHotelForm.value.address?.latitude ?? 0,\n        longitude: this.createHotelForm.value.address?.longitude ?? 0,\n      });\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Crear nuevo hotel',\n        detail: 'Se ha creado el hotel exitosamente',\n        closable: true,\n      });\n\n      this.store.dispatch(new AddHotel(hotelCreated));\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof HotelOperationError) {\n        console.error('Ha ocurrido un error al crear el hotel', error.message);\n      }\n    }\n  }\n\n  openMapModal() {\n    this.mapModalRef = this.dialogService.open(MapModalComponent, {\n      header: 'Ubicaci√≥n del hotel',\n      width: '50rem',\n    });\n\n    this.mapModalRef.onClose.subscribe(\n      (data: { latitude: number; longitude: number }) => {\n        if (data) {\n          this.createHotelForm.patchValue({\n            address: {\n              latitude: data?.latitude ?? 0,\n              longitude: data?.longitude ?? 0,\n            },\n          });\n        }\n      }\n    );\n  }\n\n  protected readonly cities = cities;\n  protected readonly countries = countries;\n}\n",
      "styleUrl": "./create-new-hotel-modal.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createHotelUseCaseService",
            "type": "CreateHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "sessionUserService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createHotelUseCaseService",
            "type": "CreateHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "sessionUserService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"create-hote-container\">\n  <form class=\"create-hote-container__form\">\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"name\"\n          type=\"text\"\n          pInputText\n          class=\"w-full\"\n          [formControl]=\"createHotelForm.controls.name\" />\n        <label for=\"name\">Nombre del Hotel</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"createHotelForm.controls.name\"\n        displayName=\"El nombre del hotel\"></app-errors-form-messages>\n    </div>\n\n    <div class=\"w-full flex flex-col\">\n      <p-floatLabel class=\"w-full\">\n        <textarea\n          id=\"description\"\n          pInputTextarea\n          class=\"w-full\"\n          [formControl]=\"createHotelForm.controls.description\"></textarea>\n        <label for=\"description\">Descripci√≥n</label>\n      </p-floatLabel>\n    </div>\n\n    <div class=\"w-full flex gap-4\">\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <p-dropdown\n            styleClass=\"w-full\"\n            class=\"city-dropdown\"\n            [options]=\"countries\"\n            optionLabel=\"name\"\n            [filter]=\"true\"\n            filterBy=\"name\"\n            optionValue=\"name\"\n            appendTo=\"body\"\n            [showClear]=\"true\"\n            id=\"countries\"\n            [formControl]=\"createHotelForm.controls.address.controls.country\"\n            placeholder=\"El pa√≠s\" />\n          <label for=\"countries\">Pa√≠s</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createHotelForm.controls.address.controls.country\"\n          displayName=\"La ciudad\"></app-errors-form-messages>\n      </div>\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <p-dropdown\n            styleClass=\"w-full\"\n            class=\"city-dropdown\"\n            [options]=\"cities\"\n            optionLabel=\"name\"\n            appendTo=\"body\"\n            [filter]=\"true\"\n            id=\"address_city\"\n            optionValue=\"name\"\n            filterBy=\"name\"\n            [showClear]=\"true\"\n            [formControl]=\"createHotelForm.controls.address.controls.city\"\n            placeholder=\"Ciudad\" />\n          <label for=\"address_city\">Ciudad/Provincia</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createHotelForm.controls.address.controls.city\"\n          displayName=\"La ciudad\"></app-errors-form-messages>\n      </div>\n    </div>\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"additional_address_info\"\n          type=\"text\"\n          pInputText\n          class=\"w-full\"\n          [formControl]=\"\n            createHotelForm.controls.address.controls.additionalInfo\n          \" />\n        <label for=\"additional_address_info\">Direcci√≥n</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"createHotelForm.controls.address.controls.additionalInfo\"\n        displayName=\"La ciudad\"></app-errors-form-messages>\n    </div>\n    <div class=\"flex gap-2 w-full\">\n      <div class=\"w-full flex-2\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"latitude\"\n            type=\"text\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"\n              createHotelForm.controls.address.controls.latitude\n            \" />\n          <label for=\"latitude\">Latitud</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createHotelForm.controls.address.controls.latitude\"\n          displayName=\"Latitud\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full flex-2\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"longitude\"\n            type=\"text\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"\n              createHotelForm.controls.address.controls.longitude\n            \" />\n          <label for=\"longitude\">Longitud</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createHotelForm.controls.address.controls.longitude\"\n          displayName=\"Longitud\"></app-errors-form-messages>\n      </div>\n      <div class=\"flex-1\">\n        <app-button (click)=\"openMapModal()\">\n          <app-icon name=\"matAddLocationAltRound\"></app-icon>\n        </app-button>\n      </div>\n    </div>\n\n    <app-button\n      text=\"Crear Nuevo Hotel\"\n      classStyles=\"font-bold\"\n      size=\"small\"\n      type=\"submit\"\n      (click)=\"createHotel()\"></app-button>\n  </form>\n</div>\n"
    },
    {
      "name": "CreateRoomDialogComponent",
      "id": "component-CreateRoomDialogComponent-2a8885d643e0083e85fe448876b6c8646f8233afcf93ee603b54ab1ba5f836eae32c57343f4492b039ebfe8517f4f844bcfd9b73a782aa841e60cb25407e8296",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/create-room-dialog/create-room-dialog.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-create-room-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./create-room-dialog.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "createRoomForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<CreateRoomForm>",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "roomHotelTypesList",
          "defaultValue": "roomHotelTypes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        }
      ],
      "methodsClass": [
        {
          "name": "createRoom",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 84,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "InputTextareaModule",
          "type": "module"
        },
        {
          "name": "PaginatorModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "AutoFocus"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { CreateRoomForm } from '@/app/presenter/models/form/room.model';\nimport { CreateRoomUseCaseService } from '@/app/domain/usecases/room/create-room-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { RoomOperationError } from '@/app/core/validations/rooms/room-operation.error';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { roomHotelTypes } from '@/app/presenter/views/shared/constants/room';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Store } from '@ngxs/store';\nimport { AddRoom } from '@/app/presenter/state/rooms/actions';\n\ninterface CreateRoomModalDynamicDialogConfigData {\n  hotel: HotelEntity;\n}\n\n@Component({\n  selector: 'app-create-room-dialog',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    AutoFocus,\n  ],\n  templateUrl: './create-room-dialog.component.html',\n  styleUrl: './create-room-dialog.component.scss',\n})\nexport class CreateRoomDialogComponent {\n  createRoomForm!: FormGroup<CreateRoomForm>;\n  roomHotelTypesList = roomHotelTypes;\n\n  constructor(\n    private fb: FormBuilder,\n    private createRoomUseCaseService: CreateRoomUseCaseService,\n    private dialogConfigService: DynamicDialogConfig<CreateRoomModalDynamicDialogConfigData>,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private store: Store\n  ) {\n    this.createRoomForm = this.fb.group<CreateRoomForm>({\n      type: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      basePrice: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      taxes: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      roomNumber: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      capacity: this.fb.control(1, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      description: this.fb.control(''),\n    });\n  }\n\n  async createRoom() {\n    if (this.createRoomForm.invalid) {\n      this.createRoomForm.markAllAsTouched();\n      return;\n    }\n\n    try {\n      const newRoom = await this.createRoomUseCaseService.execute({\n        type: (\n          this.createRoomForm.value.type as unknown as {\n            id: string;\n            value: string;\n          }\n        ).value,\n        basePrice: this.createRoomForm.value.basePrice!,\n        taxes: this.createRoomForm.value.taxes!,\n        roomNumber: this.createRoomForm.value.roomNumber!,\n        capacity: this.createRoomForm.value.capacity!,\n        description: this.createRoomForm.value.description ?? '',\n        hotel: this.dialogConfigService.data?.hotel.id,\n      });\n\n      this.store.dispatch(new AddRoom(newRoom));\n\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Crear nueva habitaci√≥n',\n        detail: 'Se ha creado la habitaci√≥n exitosamente',\n        closable: true,\n      });\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof RoomOperationError) {\n        console.error(\n          'Ha ocurrido un error al crear la habitaci√≥n',\n          error.message\n        );\n      }\n    }\n  }\n}\n",
      "styleUrl": "./create-room-dialog.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createRoomUseCaseService",
            "type": "CreateRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogConfigService",
            "type": "DynamicDialogConfig<CreateRoomModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 49,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createRoomUseCaseService",
            "type": "CreateRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogConfigService",
            "type": "DynamicDialogConfig<CreateRoomModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"create-room-container\">\n  <form class=\"create-room-container__form\" (ngSubmit)=\"createRoom()\">\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <p-dropdown\n          [formControl]=\"createRoomForm.controls.type\"\n          pAutoFocus\n          [options]=\"roomHotelTypesList\"\n          id=\"typeRoom\"\n          styleClass=\"w-full\"\n          optionLabel=\"value\"\n          placeholder=\"Select a City\" />\n        <label for=\"typeRoom\">Tipo de Habitaci√≥n</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"createRoomForm.controls.type\"\n        displayName=\"El tipo de habitaci√≥n\"></app-errors-form-messages>\n    </div>\n\n    <div class=\"w-full flex gap-4\">\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"basePrice\"\n            type=\"number\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"createRoomForm.controls.basePrice\" />\n          <label for=\"basePrice\">Precio Base</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createRoomForm.controls.basePrice\"\n          displayName=\"El precio base\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"taxes\"\n            type=\"number\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"createRoomForm.controls.taxes\" />\n          <label for=\"taxes\">Impuestos</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"createRoomForm.controls.taxes\"\n          displayName=\"Los impuestos\"></app-errors-form-messages>\n      </div>\n    </div>\n\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"roomNumber\"\n          type=\"text\"\n          pInputText\n          class=\"w-full\"\n          [formControl]=\"createRoomForm.controls.roomNumber\" />\n        <label for=\"roomNumber\">N√∫mero de Habitaci√≥n</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"createRoomForm.controls.roomNumber\"\n        displayName=\"El n√∫mero de habitaci√≥n\"></app-errors-form-messages>\n    </div>\n\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"capacity\"\n          type=\"number\"\n          pInputText\n          class=\"w-full\"\n          [formControl]=\"createRoomForm.controls.capacity\" />\n        <label for=\"capacity\">Capacidad de personas</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"createRoomForm.controls.capacity\"\n        displayName=\"La capacidad\"></app-errors-form-messages>\n    </div>\n\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <textarea\n          id=\"description\"\n          pInputTextarea\n          class=\"w-full\"\n          [formControl]=\"createRoomForm.controls.description\"></textarea>\n        <label for=\"description\">Descripci√≥n</label>\n      </p-floatLabel>\n    </div>\n\n    <app-button\n      text=\"Crear Nueva Habitaci√≥n\"\n      classStyles=\"font-bold\"\n      size=\"small\"\n      type=\"submit\">\n    </app-button>\n  </form>\n</div>\n"
    },
    {
      "name": "EditHotelModalComponent",
      "id": "component-EditHotelModalComponent-9a85e595cbff4ad435a8db67179b245ece67983d90d7150451ff84418858c50f7a4b4babb1ab12bf048de79f4135c0eb78496efe17ca2c65c1d12a334731bd3e",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/edit-new-hotel-modal/edit-hotel-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-edit-hotel-modal",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./edit-hotel-modal.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualHotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "cities",
          "defaultValue": "cities",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 157,
          "modifierKind": [124, 148]
        },
        {
          "name": "countries",
          "defaultValue": "countries",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 158,
          "modifierKind": [124, 148]
        },
        {
          "name": "editHotelForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<EditHotelForm>",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "loadingDataToEdit",
          "defaultValue": "StatusProcessAction.IDLE",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StatusProcessAction",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "StatusProcessAction",
          "defaultValue": "StatusProcessAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 156,
          "modifierKind": [124, 148]
        }
      ],
      "methodsClass": [
        {
          "name": "editHotel",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 118,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "getHotelToEdit",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 94,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "InputTextareaModule",
          "type": "module"
        },
        {
          "name": "PaginatorModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "InputSwitchModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  AddressHotelForm,\n  EditHotelForm,\n} from '@/app/presenter/models/form/hotel.model';\nimport { EditHotelUseCaseService } from '@/app/domain/usecases/hotel/edit-hotel-use-case.service';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { HotelOperationError } from '@/app/core/validations/hotels/hotel-operation.error';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { GetHotelByIdUseCaseService } from '@/app/domain/usecases/hotel/get-hotel-by-id-use-case.service';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditHotel } from '@/app/presenter/state/hotels/actions';\nimport { Store } from '@ngxs/store';\nimport { cities } from '@/app/presenter/views/shared/constants/cities';\nimport { countries } from '@/app/presenter/views/shared/constants/countries';\n\ninterface EditHotelModalDynamicDialogConfigData {\n  id: string;\n}\n\n@Component({\n  selector: 'app-edit-hotel-modal',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    InputSwitchModule,\n  ],\n  templateUrl: './edit-hotel-modal.component.html',\n  styleUrl: './edit-hotel-modal.component.scss',\n})\nexport class EditHotelModalComponent implements OnInit {\n  editHotelForm!: FormGroup<EditHotelForm>;\n  actualHotel!: HotelEntity;\n\n  loadingDataToEdit: StatusProcessAction = StatusProcessAction.IDLE;\n\n  constructor(\n    private fb: FormBuilder,\n    private editHotelUseCaseService: EditHotelUseCaseService,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private getHotelUseCaseService: GetHotelByIdUseCaseService,\n    private dynamicDialogConfig: DynamicDialogConfig<EditHotelModalDynamicDialogConfigData>,\n    private store: Store\n  ) {\n    this.editHotelForm = this.fb.group<EditHotelForm>({\n      name: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      description: this.fb.control(''),\n      address: this.fb.group<AddressHotelForm>({\n        country: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        city: this.fb.control('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        additionalInfo: this.fb.control(''),\n      }),\n\n      isActive: this.fb.control(false),\n    });\n  }\n\n  ngOnInit() {\n    void this.getHotelToEdit();\n  }\n\n  async getHotelToEdit() {\n    this.loadingDataToEdit = StatusProcessAction.LOADING;\n\n    try {\n      this.actualHotel = await this.getHotelUseCaseService.execute(\n        this.dynamicDialogConfig.data?.id ?? ''\n      );\n      this.loadingDataToEdit = StatusProcessAction.SUCCESS;\n\n      this.editHotelForm.patchValue({\n        name: this.actualHotel.name,\n        description: this.actualHotel.description,\n        address: {\n          country: this.actualHotel.country,\n          city: this.actualHotel.city,\n          additionalInfo: this.actualHotel.additionalAdressInfo,\n        },\n        isActive: this.actualHotel.isActive,\n      });\n    } catch {\n      this.loadingDataToEdit = StatusProcessAction.ERROR;\n    }\n  }\n\n  async editHotel() {\n    if (this.editHotelForm.invalid) {\n      this.editHotelForm.markAllAsTouched();\n      return;\n    }\n\n    try {\n      const editedHotel = await this.editHotelUseCaseService.execute({\n        hotelId: this.dynamicDialogConfig.data?.id ?? '',\n        hotelData: {\n          id: this.dynamicDialogConfig.data?.id ?? '',\n          name: this.editHotelForm.value.name!,\n          description: this.editHotelForm.value.description!,\n          country: this.editHotelForm.value?.address?.country ?? '',\n          city: this.editHotelForm.value?.address?.city ?? '',\n          additionalAdressInfo:\n            this.editHotelForm.value?.address?.additionalInfo ?? '',\n          isActive:\n            this.editHotelForm.value.isActive ?? this.actualHotel.isActive,\n        },\n      });\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Editar hotel',\n        detail: 'Se ha editado el hotel exitosamente',\n        closable: true,\n      });\n\n      this.store.dispatch(new EditHotel(editedHotel));\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof HotelOperationError) {\n        console.error('Ha ocurrido un error al editar el hotel', error.message);\n      }\n    }\n  }\n\n  protected readonly StatusProcessAction = StatusProcessAction;\n  protected readonly cities = cities;\n  protected readonly countries = countries;\n}\n",
      "styleUrl": "./edit-hotel-modal.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "editHotelUseCaseService",
            "type": "EditHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getHotelUseCaseService",
            "type": "GetHotelByIdUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dynamicDialogConfig",
            "type": "DynamicDialogConfig<EditHotelModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 57,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "editHotelUseCaseService",
            "type": "EditHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getHotelUseCaseService",
            "type": "GetHotelByIdUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dynamicDialogConfig",
            "type": "DynamicDialogConfig<EditHotelModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"edit-hotel-container\">\n  @if (loadingDataToEdit === StatusProcessAction.LOADING) {\n    <p>Loading...</p>\n  } @else if (loadingDataToEdit === StatusProcessAction.ERROR) {\n    <p>Ha ocurrido un error</p>\n  } @else {\n    <form class=\"edit-hotel-container__form\">\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"editHotelForm.controls.name\" />\n          <label for=\"name\">Nombre del Hotel</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"editHotelForm.controls.name\"\n          displayName=\"El nombre del hotel\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <textarea\n            id=\"description\"\n            pInputTextarea\n            class=\"w-full\"\n            [formControl]=\"editHotelForm.controls.description\"></textarea>\n          <label for=\"description\">Descripci√≥n</label>\n        </p-floatLabel>\n      </div>\n\n      <div class=\"w-full flex gap-4\">\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <p-dropdown\n              styleClass=\"w-full\"\n              class=\"city-dropdown\"\n              [options]=\"countries\"\n              optionLabel=\"name\"\n              optionValue=\"name\"\n              [filter]=\"true\"\n              filterBy=\"name\"\n              appendTo=\"body\"\n              [showClear]=\"true\"\n              id=\"countries\"\n              [formControl]=\"editHotelForm.controls.address.controls.country\"\n              placeholder=\"Pa√≠s\" />\n            <label for=\"countries\">Pa√≠s</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"editHotelForm.controls.address.controls.country\"\n            displayName=\"El pa√≠s\"></app-errors-form-messages>\n        </div>\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <p-dropdown\n              styleClass=\"w-full\"\n              class=\"city-dropdown\"\n              [options]=\"cities\"\n              optionLabel=\"name\"\n              optionValue=\"name\"\n              appendTo=\"body\"\n              [filter]=\"true\"\n              id=\"address_city\"\n              filterBy=\"name\"\n              [showClear]=\"true\"\n              [formControl]=\"editHotelForm.controls.address.controls.city\"\n              placeholder=\"Ciudad\" />\n            <label for=\"address_city\">Ciudad/Provincia</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"editHotelForm.controls.address.controls.city\"\n            displayName=\"La ciudad\"></app-errors-form-messages>\n        </div>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"additional_address_info\"\n            type=\"text\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"\n              editHotelForm.controls.address.controls.additionalInfo\n            \" />\n          <label for=\"additional_address_info\">Direcci√≥n</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"editHotelForm.controls.address.controls.additionalInfo\"\n          displayName=\"La ciudad\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full flex items-start\">\n        <p-inputSwitch\n          [formControl]=\"editHotelForm.controls.isActive\"\n          inputId=\"isActiveHotel\" />\n        <label for=\"isActiveHotel\" class=\"ml-2 hover:cursor-pointer\">{{\n          editHotelForm.controls.isActive.value\n            ? 'Hotel Activado'\n            : 'Hotel Desactivado'\n        }}</label>\n      </div>\n\n      <app-button\n        text=\"Editar Hotel\"\n        classStyles=\"font-bold\"\n        size=\"small\"\n        type=\"submit\"\n        (click)=\"editHotel()\"></app-button>\n    </form>\n  }\n</div>\n"
    },
    {
      "name": "EditRoomDialogComponent",
      "id": "component-EditRoomDialogComponent-7e14cf1f02b22af49594c0cb4c760f4d83f49b83d4074643006e619dd98125fcfe54dc5819f62662be5083e1c65de7c8f00d5ebcef4c4f28269c14927070d7ea",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/edit-room-dialog/edit-room-dialog.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-edit-room-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./edit-room-dialog.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualRoom",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "editRoomForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<EditRoomForm>",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "loadingDataRoomToEdit",
          "defaultValue": "StatusProcessAction.IDLE",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StatusProcessAction",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "roomHotelTypesList",
          "defaultValue": "roomHotelTypes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "StatusProcessAction",
          "defaultValue": "StatusProcessAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 170,
          "modifierKind": [124, 148]
        }
      ],
      "methodsClass": [
        {
          "name": "editRoom",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 124,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "getRoomToEdit",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 100,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "AutoFocus"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "DropdownModule",
          "type": "module"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "InputTextareaModule",
          "type": "module"
        },
        {
          "name": "PaginatorModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "InputSwitchModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { EditRoomForm } from '@/app/presenter/models/form/room.model';\nimport { roomHotelTypes } from '@/app/presenter/views/shared/constants/room';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\nimport { RoomOperationError } from '@/app/core/validations/rooms/room-operation.error';\nimport { EditRoomUseCaseService } from '@/app/domain/usecases/room/edit-room-use-case.service';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { GetRoomByIdUseCaseService } from '@/app/domain/usecases/room/get-room-by-id-use-case.service';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditRoom } from '@/app/presenter/state/rooms/actions';\nimport { Store } from '@ngxs/store';\n\ninterface EditRoomModalDynamicDialogConfigData {\n  room: RoomEntity;\n}\n@Component({\n  selector: 'app-edit-room-dialog',\n  standalone: true,\n  imports: [\n    AutoFocus,\n    ButtonComponent,\n    DropdownModule,\n    ErrorsFormMessagesComponent,\n    FloatLabelModule,\n    FormsModule,\n    InputTextModule,\n    InputTextareaModule,\n    PaginatorModule,\n    ReactiveFormsModule,\n    InputSwitchModule,\n  ],\n  templateUrl: './edit-room-dialog.component.html',\n  styleUrl: './edit-room-dialog.component.scss',\n})\nexport class EditRoomDialogComponent implements OnInit {\n  editRoomForm!: FormGroup<EditRoomForm>;\n  roomHotelTypesList = roomHotelTypes;\n  actualRoom!: RoomEntity;\n  loadingDataRoomToEdit: StatusProcessAction = StatusProcessAction.IDLE;\n\n  constructor(\n    private fb: FormBuilder,\n    private editRoomUseCaseService: EditRoomUseCaseService,\n    private getRoomUseCaseService: GetRoomByIdUseCaseService,\n    private dialogConfigService: DynamicDialogConfig<EditRoomModalDynamicDialogConfigData>,\n    private messageService: MessageService,\n    private dialogRef: DynamicDialogRef,\n    private store: Store\n  ) {\n    this.editRoomForm = this.fb.group<EditRoomForm>({\n      type: this.fb.control(null, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      basePrice: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      taxes: this.fb.control(0, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      roomNumber: this.fb.control('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      capacity: this.fb.control(1, {\n        nonNullable: true,\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      description: this.fb.control(''),\n      isAvailable: this.fb.control(false, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    });\n  }\n\n  ngOnInit() {\n    void this.getRoomToEdit();\n  }\n\n  async getRoomToEdit() {\n    this.loadingDataRoomToEdit = StatusProcessAction.LOADING;\n\n    try {\n      this.actualRoom = await this.getRoomUseCaseService.execute(\n        this.dialogConfigService.data?.room.id ?? ''\n      );\n      this.loadingDataRoomToEdit = StatusProcessAction.SUCCESS;\n\n      this.editRoomForm.patchValue({\n        type: roomHotelTypes.find(type => type.value === this.actualRoom.type),\n        basePrice: this.actualRoom.basePrice,\n        taxes: this.actualRoom.taxes,\n        roomNumber: this.actualRoom.roomNumber,\n        capacity: this.actualRoom.capacity,\n        description: this.actualRoom.description ?? '',\n        isAvailable: this.actualRoom.isAvailable,\n      });\n    } catch (error) {\n      console.error(error);\n      this.loadingDataRoomToEdit = StatusProcessAction.ERROR;\n    }\n  }\n\n  async editRoom() {\n    if (this.editRoomForm.invalid) {\n      this.editRoomForm.markAllAsTouched();\n      return;\n    }\n    try {\n      const editedRoom = await this.editRoomUseCaseService.execute({\n        roomId: this.dialogConfigService.data?.room.id ?? '',\n        roomData: {\n          id: this.dialogConfigService.data?.room.id ?? '',\n          type: (\n            this.editRoomForm.value.type as unknown as {\n              id: string;\n              value: string;\n            }\n          ).value,\n          basePrice: this.editRoomForm.value.basePrice!,\n          taxes: this.editRoomForm.value.taxes!,\n          roomNumber: this.editRoomForm.value.roomNumber!,\n          capacity: this.editRoomForm.value.capacity!,\n          description: this.editRoomForm.value.description ?? '',\n          isAvailable:\n            this.editRoomForm.value.isAvailable ?? this.actualRoom.isAvailable,\n        },\n      });\n\n      this.store.dispatch(new EditRoom(editedRoom));\n\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Editar habitaci√≥n',\n        detail: 'Se ha editado la habitaci√≥n exitosamente',\n        closable: true,\n      });\n\n      this.dialogRef.close();\n    } catch (error) {\n      if (error instanceof RoomOperationError) {\n        console.error(\n          'Ha ocurrido un error al editar la habitaci√≥n',\n          error.message\n        );\n      }\n    }\n  }\n\n  protected readonly StatusProcessAction = StatusProcessAction;\n}\n",
      "styleUrl": "./edit-room-dialog.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "editRoomUseCaseService",
            "type": "EditRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getRoomUseCaseService",
            "type": "GetRoomByIdUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogConfigService",
            "type": "DynamicDialogConfig<EditRoomModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 56,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "editRoomUseCaseService",
            "type": "EditRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getRoomUseCaseService",
            "type": "GetRoomByIdUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogConfigService",
            "type": "DynamicDialogConfig<EditRoomModalDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"edit-room-container\">\n  @if (loadingDataRoomToEdit === StatusProcessAction.LOADING) {\n    <p>Loading...</p>\n  } @else if (loadingDataRoomToEdit === StatusProcessAction.ERROR) {\n    <p>Ha ocurrido un error</p>\n  } @else {\n    <form class=\"edit-room-container__form\" (ngSubmit)=\"editRoom()\">\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <p-dropdown\n            [formControl]=\"editRoomForm.controls.type\"\n            pAutoFocus\n            [options]=\"roomHotelTypesList\"\n            id=\"typeRoom\"\n            styleClass=\"w-full\"\n            optionLabel=\"value\"\n            placeholder=\"Select a City\" />\n          <label for=\"typeRoom\">Tipo de Habitaci√≥n</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"editRoomForm.controls.type\"\n          displayName=\"El tipo de habitaci√≥n\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full flex gap-4\">\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"basePrice\"\n              type=\"number\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"editRoomForm.controls.basePrice\" />\n            <label for=\"basePrice\">Precio Base</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"editRoomForm.controls.basePrice\"\n            displayName=\"El precio base\"></app-errors-form-messages>\n        </div>\n\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"taxes\"\n              type=\"number\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"editRoomForm.controls.taxes\" />\n            <label for=\"taxes\">Impuestos</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"editRoomForm.controls.taxes\"\n            displayName=\"Los impuestos\"></app-errors-form-messages>\n        </div>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"roomNumber\"\n            type=\"text\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"editRoomForm.controls.roomNumber\" />\n          <label for=\"roomNumber\">N√∫mero de Habitaci√≥n</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"editRoomForm.controls.roomNumber\"\n          displayName=\"El n√∫mero de habitaci√≥n\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <input\n            id=\"capacity\"\n            type=\"number\"\n            pInputText\n            class=\"w-full\"\n            [formControl]=\"editRoomForm.controls.capacity\" />\n          <label for=\"capacity\">Capacidad de personas</label>\n        </p-floatLabel>\n        <app-errors-form-messages\n          [control]=\"editRoomForm.controls.capacity\"\n          displayName=\"La capacidad\"></app-errors-form-messages>\n      </div>\n\n      <div class=\"w-full\">\n        <p-floatLabel class=\"w-full\">\n          <textarea\n            id=\"description\"\n            pInputTextarea\n            class=\"w-full\"\n            [formControl]=\"editRoomForm.controls.description\"></textarea>\n          <label for=\"description\">Descripci√≥n</label>\n        </p-floatLabel>\n      </div>\n\n      <div class=\"w-full flex items-start\">\n        <p-inputSwitch\n          [formControl]=\"editRoomForm.controls.isAvailable\"\n          inputId=\"isActiveRoom\" />\n        <label for=\"isActiveRoom\" class=\"ml-2 hover:cursor-pointer\">{{\n          editRoomForm.controls.isAvailable.value\n            ? 'Habitaci√≥n habilitada'\n            : 'Habitaci√≥n deshabilitada'\n        }}</label>\n      </div>\n\n      <app-button\n        text=\"Editar Habitaci√≥n\"\n        classStyles=\"font-bold\"\n        size=\"small\"\n        type=\"submit\">\n      </app-button>\n    </form>\n  }\n</div>\n"
    },
    {
      "name": "ErrorsFormMessagesComponent",
      "id": "component-ErrorsFormMessagesComponent-5c493f62cc4d49e3739b31607ddd658f1761010a7d23ff0c1ce3c4841c53e955fbb0e70eb914bf3e60c127fbcce29e7bf0b7757a683e23a3b5da24793e75dc55",
      "file": "src/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-errors-form-messages",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./errors-form-messages.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "control",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "FormControl",
          "decorators": []
        },
        {
          "name": "displayName",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getErrorProperty",
          "args": [
            {
              "name": "errorCode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "property",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "errorCode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "property",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hasErrorWhenDirty",
          "args": [
            {
              "name": "errorCode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "errorCode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MessageModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MessageModule } from 'primeng/message';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-errors-form-messages',\n  standalone: true,\n  imports: [MessageModule],\n  templateUrl: './errors-form-messages.component.html',\n  styleUrl: './errors-form-messages.component.scss',\n})\nexport class ErrorsFormMessagesComponent {\n  @Input() control!: FormControl;\n  @Input() displayName = '';\n\n  hasErrorWhenDirty(errorCode: string): boolean {\n    return (\n      (this.control?.dirty || this.control?.touched) &&\n      this.control.hasError(errorCode)\n    );\n  }\n\n  getErrorProperty(errorCode: string, property: string): string {\n    const errors = this.control.errors as Record<\n      string,\n      Record<string, string>\n    > | null;\n    return errors?.[errorCode]?.[property] ?? '';\n  }\n}\n",
      "styleUrl": "./errors-form-messages.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "@if (hasErrorWhenDirty('min')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe ser como m√≠nimo {{\n        getErrorProperty('min', 'min')\n      }}\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('max')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe ser como m√°ximo {{\n        getErrorProperty('max', 'max')\n      }}\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('required')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} es requerido\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('email')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe ser un correo v√°lido\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('minlength')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe tener al menos {{\n        getErrorProperty('minlength', 'requiredLength')\n      }} caracteres\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('maxlength')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe tener como m√°ximo {{\n        getErrorProperty('maxlength', 'requiredLength')\n      }} caracteres\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('passwordsMismatch')) {\n  <div class=\"mt-2\">\n    <p-message severity=\"error\" text=\"Las contrase√±as no coinciden\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('pattern')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe seguir el patr√≥n {{\n        getErrorProperty('pattern', 'requiredPattern')\n      }}\"></p-message>\n  </div>\n} @else if (hasErrorWhenDirty('null')) {\n  <div class=\"mt-2\">\n    <p-message\n      severity=\"error\"\n      text=\"{{ displayName }} debe tener un valor\"></p-message>\n  </div>\n}\n"
    },
    {
      "name": "FilterHotelsComponent",
      "id": "component-FilterHotelsComponent-adf794e1d28fa5bd91eb9e6571388529cf6ef2efa3014508533038aeb890d4f03aa626f1fbf6ae74e6f144b89c37fde0b345ffc57331293ff6e1a263aa77b9ab",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/filter-hotels.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-filter-hotels",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./filter-hotels.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "SearchFilterHotelComponentComponent",
          "type": "component"
        },
        {
          "name": "ListFilterHotelsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { SearchFilterHotelComponentComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/search-filter-hotel-component/search-filter-hotel-component.component';\nimport { ListFilterHotelsComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-hotels/list-filter-hotels.component';\n\n@Component({\n  selector: 'app-filter-hotels',\n  standalone: true,\n  imports: [SearchFilterHotelComponentComponent, ListFilterHotelsComponent],\n  templateUrl: './filter-hotels.component.html',\n  styleUrl: './filter-hotels.component.scss',\n})\nexport class FilterHotelsComponent {}\n",
      "styleUrl": "./filter-hotels.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section class=\"filter-section\">\n  <div>\n    <app-search-filter-hotel-component></app-search-filter-hotel-component>\n  </div>\n  <div class=\"mt-5\">\n    <app-list-filter-hotels></app-list-filter-hotels>\n  </div>\n</section>\n"
    },
    {
      "name": "GenerateReservationComponent",
      "id": "component-GenerateReservationComponent-48e03c047ec7b64a5d536a8fcbd039876f65983cf6cc08f6a07147b1346816b301fbcd5eedde550e3ce41b2709eeebd7d5ab08a53cc25fe5e0435f1eb140d461",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/generate-reservation.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-generate-reservation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./generate-reservation.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dynamicDialogRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [125]
        },
        {
          "name": "responsiveOptions",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "rooms",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CarouselModule",
          "type": "module"
        },
        {
          "name": "Button"
        },
        {
          "name": "RoomsListToReverseComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CarouselModule } from 'primeng/carousel';\nimport { Button } from 'primeng/button';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { RoomsListToReverseComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/rooms-list-to-reverse/rooms-list-to-reverse.component';\n\ninterface GenerateReservationDynamicDialogConfig {\n  hotel: HotelEntity;\n}\n\n@Component({\n  selector: 'app-generate-reservation',\n  standalone: true,\n  imports: [CarouselModule, Button, RoomsListToReverseComponent],\n  templateUrl: './generate-reservation.component.html',\n  styleUrl: './generate-reservation.component.scss',\n})\nexport class GenerateReservationComponent implements OnInit {\n  rooms: RoomEntity[] = [];\n\n  responsiveOptions: {\n    breakpoint: string;\n    numVisible: number;\n    numScroll: number;\n  }[] = [];\n\n  constructor(\n    public dynamicDialogRef: DynamicDialogRef,\n    private dynamicDialogConfig: DynamicDialogConfig<GenerateReservationDynamicDialogConfig>\n  ) {}\n\n  ngOnInit() {\n    this.responsiveOptions = [\n      {\n        breakpoint: '1199px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n      {\n        breakpoint: '991px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n      {\n        breakpoint: '767px',\n        numVisible: 2,\n        numScroll: 1,\n      },\n    ];\n    this.rooms = this.dynamicDialogConfig.data?.hotel.rooms ?? [];\n  }\n}\n",
      "styleUrl": "./generate-reservation.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dynamicDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dynamicDialogConfig",
            "type": "DynamicDialogConfig<GenerateReservationDynamicDialogConfig>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "dynamicDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dynamicDialogConfig",
            "type": "DynamicDialogConfig<GenerateReservationDynamicDialogConfig>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"card\">\n  <p-carousel\n    [value]=\"rooms\"\n    [numVisible]=\"2\"\n    [numScroll]=\"3\"\n    [circular]=\"true\"\n    styleClass=\"generate-reservation-dialog\"\n    [responsiveOptions]=\"responsiveOptions\">\n    <ng-template let-room pTemplate=\"item\" class=\"flex gap-4\">\n      <app-rooms-list-to-reverse\n        [room]=\"room\"\n        [dynamicGenerateReservationDialogRef]=\"\n          dynamicDialogRef\n        \"></app-rooms-list-to-reverse>\n    </ng-template>\n  </p-carousel>\n</div>\n"
    },
    {
      "name": "GoogleAuthButtonComponent",
      "id": "component-GoogleAuthButtonComponent-2480a3df1a5423a2d8b63510bf47c7a872d49eeca0f69a707526f8dee371b9a67323e44f71a9e200a7a41f08d40d3394339aaef7473c3eb0132502f6bc13d74f",
      "file": "src/app/presenter/views/shared/components/common/atoms/google-auth-button/google-auth-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-google-auth-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./google-auth-button.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 11,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "clickButton",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClickButton",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-google-auth-button',\n  standalone: true,\n  imports: [],\n  templateUrl: './google-auth-button.component.html',\n  styleUrl: './google-auth-button.component.scss',\n})\nexport class GoogleAuthButtonComponent {\n  @Input({ required: true }) description = '';\n  @Output() clickButton = new EventEmitter<void>();\n\n  onClickButton() {\n    this.clickButton.emit();\n  }\n}\n",
      "styleUrl": "./google-auth-button.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<button type=\"button\" class=\"google-auth-button\" (click)=\"onClickButton()\">\n  <div class=\"google-auth-button__icon\"></div>\n  <span class=\"google-auth-button__description\">{{ description }}</span>\n</button>\n"
    },
    {
      "name": "GuestReservationItemComponent",
      "id": "component-GuestReservationItemComponent-0411cb7fb93190099fbfcd739dc405900d95690d6b70d3067a45ab122002b09d330f5a79b8e134d6d51a42934d028a69b77260e7f4590201a7afda1da002daeb",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guest-reservation-item/guest-reservation-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-guest-reservation-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./guest-reservation-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "guest",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 16,
          "type": "GuestEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "Button"
        },
        {
          "name": "CardModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "PrimeTemplate"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { Button } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { PrimeTemplate } from 'primeng/api';\n\n@Component({\n  selector: 'app-guest-reservation-item',\n  standalone: true,\n  imports: [Button, CardModule, IconComponent, PrimeTemplate],\n  templateUrl: './guest-reservation-item.component.html',\n  styleUrl: './guest-reservation-item.component.scss',\n})\nexport class GuestReservationItemComponent {\n  @Input({ required: true }) guest!: GuestEntity;\n}\n",
      "styleUrl": "./guest-reservation-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p-card [style]=\"{ width: '220px' }\" class=\"guest-item\">\n  <div class=\"guest-item-body\">\n    <h3 class=\"guest-item-body__title-guest text-subheadline-lg\">\n      {{ guest.fullName }}\n    </h3>\n    <hr class=\"my-2\" />\n\n    <div class=\"mt-5 flex flex-col gap-2\">\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matPhoneRound\"\n          size=\"1.2rem\"\n          class=\"type-info-icon\"></app-icon>\n        T√©lefono : {{ guest.phoneNumber }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matEmailRound\"\n          size=\"1.2rem\"\n          class=\"type-info-icon\"></app-icon>\n        Email : {{ guest.email }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matWoman2Round\"\n          size=\"1.2rem\"\n          class=\"type-info-icon\"></app-icon>\n        Genero : {{ guest.gender }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matChildFriendlyRound\"\n          size=\"1.2rem\"\n          class=\"type-info-icon\"></app-icon>\n        Nacimiento : {{ guest.birthDate }}\n      </span>\n\n      <p class=\"text-body-sm\">\n        <span>\n          <app-icon\n            name=\"matPermContactCalendarRound\"\n            size=\"1.2rem\"\n            class=\"type-info-icon\"></app-icon>\n          {{ guest.documentType }} : {{ guest.documentNumber }}\n        </span>\n      </p>\n    </div>\n  </div>\n</p-card>\n"
    },
    {
      "name": "GuestsReservationListComponent",
      "id": "component-GuestsReservationListComponent-faf3933edd5164f94ac0ae6392b266066391a8630b7c2575a876d45229725fc96a4e313e6cec91da8205cff5d287e8ffdee1acbf5d04a4091920ebc530ef967b",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guests-reservation-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-guests-reservation-list",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./guests-reservation-list.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "listOfGuests",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "GuestEntity[]",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "reservation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "BookingEntity",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ReservationItemComponent",
          "type": "component"
        },
        {
          "name": "GuestReservationItemComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ReservationItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/reservation-item/reservation-item.component';\nimport { GuestEntity } from '@/app/domain/entities/guest.entity';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { GuestReservationItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guest-reservation-item/guest-reservation-item.component';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\n\ninterface GuestsDynamicDialogConfigData {\n  guests: GuestEntity[];\n  reservation: BookingEntity;\n}\n\n@Component({\n  selector: 'app-guests-reservation-list',\n  standalone: true,\n  imports: [\n    ReservationItemComponent,\n    GuestReservationItemComponent,\n    IconComponent,\n  ],\n  templateUrl: './guests-reservation-list.component.html',\n  styleUrl: './guests-reservation-list.component.scss',\n})\nexport class GuestsReservationListComponent {\n  listOfGuests: GuestEntity[] = [];\n  reservation!: BookingEntity;\n\n  constructor(\n    private guestsDataDynamicDialog: DynamicDialogConfig<GuestsDynamicDialogConfigData>\n  ) {\n    this.listOfGuests = this.guestsDataDynamicDialog.data!.guests;\n    this.reservation = this.guestsDataDynamicDialog.data!.reservation;\n  }\n}\n",
      "styleUrl": "./guests-reservation-list.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "guestsDataDynamicDialog",
            "type": "DynamicDialogConfig<GuestsDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "guestsDataDynamicDialog",
            "type": "DynamicDialogConfig<GuestsDynamicDialogConfigData>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<section class=\"guests-booking-list\">\n  <div class=\"guests_info__emergency_contact\">\n    <h3 class=\"guests_info__emergency_contact__title\">\n      <app-icon name=\"matWarningRound\" color=\"red\"></app-icon> Contacto de\n      emergencia\n    </h3>\n    <div class=\"guests_info__emergency_contact__info\">\n      <p class=\"guests_info__emergency_contact__info__name\">\n        Nombre: {{ reservation.emergencyContactFullName }}\n      </p>\n      <p class=\"guests_info__emergency_contact__info__phone\">\n        Tel√©fono: {{ reservation.emergencyPhone }}\n      </p>\n    </div>\n  </div>\n  <div class=\"guests_information\">\n    <h3 class=\"guests_information__title text-body-lg\">\n      <span class=\"text-primary-500\">\n        <app-icon name=\"matPeopleRound\" class=\"mr-2\"></app-icon>\n      </span>\n      Huespedes\n    </h3>\n    <div class=\"guests_information__list\">\n      @for (guest of listOfGuests; track guest.id) {\n        <app-guest-reservation-item\n          [guest]=\"guest\"></app-guest-reservation-item>\n      }\n    </div>\n  </div>\n</section>\n"
    },
    {
      "name": "HotelConfigurationComponent",
      "id": "component-HotelConfigurationComponent-6f6d19d5cad5fd2b24bc294d1f92c889d251ef284cbe37ce0e41396c671e6ac872b7ca15a7467936753c57bdb0c9b1732615f0e28625a8c7214b2cba44fdfb28",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ConfirmationService",
          "type": "injectable"
        }
      ],
      "selector": "app-hotel-configuration",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./hotel-configuration.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 38,
          "type": "HotelEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [125]
        },
        {
          "name": "refCreateHotelModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [
        {
          "name": "handleDeleteHotel",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "openEditHotelModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "viewRooms",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 87,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "Button"
        },
        {
          "name": "MenuModule",
          "type": "module"
        },
        {
          "name": "NgIcon"
        },
        {
          "name": "OverlayPanelModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ButtonDirective",
          "type": "directive"
        },
        {
          "name": "ConfirmDialogModule",
          "type": "module"
        },
        {
          "name": "SidebarModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Button, ButtonDirective } from 'primeng/button';\nimport { MenuModule } from 'primeng/menu';\nimport { NgIcon } from '@ng-icons/core';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { EditHotelModalComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/edit-new-hotel-modal/edit-hotel-modal.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DeleteHotelUseCaseService } from '@/app/domain/usecases/hotel/delete-hotel-use-case.service';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { Store } from '@ngxs/store';\nimport {\n  AddActualHotel,\n  RemoveHotel,\n} from '@/app/presenter/state/hotels/actions';\n\n@Component({\n  selector: 'app-hotel-configuration',\n  standalone: true,\n  imports: [\n    Button,\n    MenuModule,\n    NgIcon,\n    OverlayPanelModule,\n    IconComponent,\n    ButtonDirective,\n    ConfirmDialogModule,\n    SidebarModule,\n  ],\n  templateUrl: './hotel-configuration.component.html',\n  styleUrl: './hotel-configuration.component.scss',\n  providers: [ConfirmationService],\n})\nexport class HotelConfigurationComponent {\n  @Input({ required: true }) hotel!: HotelEntity;\n\n  refCreateHotelModal: DynamicDialogRef | undefined;\n\n  constructor(\n    public dialogService: DialogService,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private deleteHotelUseCase: DeleteHotelUseCaseService,\n    private store: Store\n  ) {}\n\n  openEditHotelModal() {\n    this.refCreateHotelModal = this.dialogService.open(\n      EditHotelModalComponent,\n      {\n        header: 'Editar hotel',\n        width: '50rem',\n        data: {\n          id: this.hotel.id,\n        },\n      }\n    );\n  }\n\n  handleDeleteHotel(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target!,\n      message: '¬øEstas seguro de que quieres eliminar este hotel?',\n      header: 'Confirmation',\n      acceptLabel: 'Si, Eliminar Hotel',\n      rejectLabel: 'No, Cancelar',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n      rejectButtonStyleClass: 'p-button-text',\n      acceptButtonStyleClass:\n        'p-button-text p-button-danger bg-error text-white',\n      accept: async () => {\n        await this.deleteHotelUseCase.execute(this.hotel.id ?? '');\n        this.store.dispatch(new RemoveHotel(this.hotel.id ?? ''));\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Eliminar Hotel',\n          detail: 'Se ha eliminado el hotel exitosamente',\n        });\n      },\n    });\n  }\n\n  viewRooms() {\n    this.store.dispatch(new AddActualHotel(this.hotel));\n  }\n}\n",
      "styleUrl": "./hotel-configuration.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "deleteHotelUseCase",
            "type": "DeleteHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 40,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "deleteHotelUseCase",
            "type": "DeleteHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"card hotel-settings\">\n  <button class=\"hotel-settings__button\" (click)=\"config.toggle($event)\">\n    <app-icon name=\"matPendingRound\"></app-icon>\n  </button>\n  <p-overlayPanel #config class=\"hotel-settings__overlay\">\n    <div class=\"flex flex-col gap-3 items-start\">\n      <button class=\"hover:bg-primary-50 p-2 w-full\" (click)=\"viewRooms()\">\n        <span class=\"text-primary-900\">\n          <app-icon name=\"matBedroomParentRound\"></app-icon>\n        </span>\n        Ver habitaci√≥nes\n      </button>\n      <button\n        class=\"hover:bg-primary-50 p-2 w-full\"\n        (click)=\"openEditHotelModal()\">\n        <span class=\"text-primary-900\">\n          <app-icon name=\"matEditNoteRound\"></app-icon>\n        </span>\n        Editar hotel\n      </button>\n      <button\n        class=\"hover:bg-primary-50 p-2 w-full\"\n        (click)=\"handleDeleteHotel($event)\">\n        <span class=\"text-error\">\n          <app-icon name=\"matDeleteRound\"></app-icon>\n        </span>\n        Eliminar hotel\n      </button>\n    </div>\n  </p-overlayPanel>\n</div>\n<p-confirmDialog></p-confirmDialog>\n"
    },
    {
      "name": "HotelItemComponent",
      "id": "component-HotelItemComponent-b7304dcf82ef45ba09b44d9a58cfe29ee5b5086ec3aac9c3ec886eea9871f2c17d0402b21fb18c1f414c938cf07df4a294f4d2945dffbdb128a8b38110ea2b8f",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-item/hotel-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-hotel-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./hotel-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "HotelEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "matHourglassEmpty",
          "defaultValue": "matHourglassEmpty",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [124, 148]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CardModule",
          "type": "module"
        },
        {
          "name": "Button"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "TagModule",
          "type": "module"
        },
        {
          "name": "MenuModule",
          "type": "module"
        },
        {
          "name": "HotelConfigurationComponent",
          "type": "component"
        },
        {
          "name": "NgIcon"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CardModule } from 'primeng/card';\nimport { Button } from 'primeng/button';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { TagModule } from 'primeng/tag';\nimport { MenuModule } from 'primeng/menu';\nimport { HotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component';\nimport { NgIcon } from '@ng-icons/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { matHourglassEmpty } from '@ng-icons/material-icons/baseline';\n\n@Component({\n  selector: 'app-hotel-item',\n  standalone: true,\n  imports: [\n    CardModule,\n    Button,\n    ButtonComponent,\n    TagModule,\n    MenuModule,\n    HotelConfigurationComponent,\n    NgIcon,\n    IconComponent,\n  ],\n  templateUrl: './hotel-item.component.html',\n  styleUrl: './hotel-item.component.scss',\n})\nexport class HotelItemComponent {\n  @Input() hotel!: HotelEntity;\n\n  protected readonly matHourglassEmpty = matHourglassEmpty;\n}\n",
      "styleUrl": "./hotel-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p-card [style]=\"{ width: '260px' }\" class=\"hotel-item\">\n  <ng-template pTemplate=\"header\" class=\"hotel-item-header\">\n    <img\n      alt=\"Hotel Alto\"\n      class=\"hotel-item-header__image\"\n      src=\"/assets/img/hote-template.jpg\" />\n  </ng-template>\n  <div class=\"hotel-item-body\">\n    <p-tag\n      [severity]=\"hotel.isActive ? 'success' : 'secondary'\"\n      [value]=\"hotel.isActive ? 'Activo' : 'Desactivado'\" />\n    <h3 class=\"hotel-item-body__title-hotel\">\n      {{ hotel?.name }}\n    </h3>\n    <p class=\"hotel-item-body__description-hotel text-body-sm\">\n      {{ hotel?.description }}\n    </p>\n    <div class=\"mt-2 flex flex-col\">\n      <span class=\"text-caption-lg\">\n        <app-icon\n          name=\"matEditLocationAltRound\"\n          size=\"1.2rem\"\n          class=\"mr-2\"></app-icon>\n        {{ hotel?.additionalAdressInfo }}\n      </span>\n    </div>\n  </div>\n  <ng-template pTemplate=\"footer\" class=\"hotel-item-footer\">\n    <div class=\"hotel-item-footer__settings\">\n      <div>\n        <p class=\"text-caption-lg\">\n          <span class=\"text-primary-500\">\n            <app-icon name=\"matLocationOnRound\" size=\"1.5rem\"></app-icon>\n          </span>\n          {{ hotel?.country }}, {{ hotel?.city }}\n        </p>\n      </div>\n      <app-hotel-configuration [hotel]=\"hotel\"></app-hotel-configuration>\n    </div>\n  </ng-template>\n</p-card>\n"
    },
    {
      "name": "HotelsBookingByAgentViewComponent",
      "id": "component-HotelsBookingByAgentViewComponent-2b2c5a9e599ad2ee38bdd6326df19286289c91dd39a6fae39f48110d1471caa410df3053cf17746d9010167bfb7414b5d27a27dfc98b5b8bd7fcc9933349dca6",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/hotels-booking-by-agent-view.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-hotel-booking-by-agent-view",
      "styleUrls": ["./hotels-booking-by-agent-view.component.scss"],
      "styles": [],
      "templateUrl": ["./hotels-booking-by-agent-view.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualSession",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Session | null",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "listOfReservations",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "BookingEntity[]",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "subscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getAllBookingsByAgent",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 134]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HotelItemComponent",
          "type": "component"
        },
        {
          "name": "SidebarRoomsHotelComponent",
          "type": "component"
        },
        {
          "name": "ReservationItemComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { GetAllBookingReservationByAgentIdService } from '@/app/domain/usecases/booking/get-all-booking-reservation-by-agent-id.service';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { Session } from '@supabase/supabase-js';\nimport { Subscription } from 'rxjs';\nimport { HotelItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-item/hotel-item.component';\nimport { SidebarRoomsHotelComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/sidebar-rooms-hotel/sidebar-rooms-hotel.component';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { ReservationItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/reservation-item/reservation-item.component';\n\n@Component({\n  selector: 'app-hotel-booking-by-agent-view',\n  standalone: true,\n  imports: [\n    HotelItemComponent,\n    SidebarRoomsHotelComponent,\n    ReservationItemComponent,\n  ],\n  templateUrl: './hotels-booking-by-agent-view.component.html',\n  styleUrls: ['./hotels-booking-by-agent-view.component.scss'],\n})\nexport class HotelsBookingByAgentViewComponent implements OnInit, OnDestroy {\n  listOfReservations: BookingEntity[] = [];\n\n  actualSession: Session | null = null;\n  private subscription!: Subscription;\n\n  constructor(\n    private getAllBookingsHotelsByAgent: GetAllBookingReservationByAgentIdService,\n    private userSessionService: SessionUserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.userSessionService.session$.subscribe({\n      next: (session: Session | null) => {\n        this.actualSession = session;\n        this.getAllBookingsByAgent().catch(err =>\n          console.error('Error fetching bookings:', err)\n        );\n      },\n      error: err => {\n        console.error('Error fetching session:', err);\n      },\n    });\n  }\n\n  private async getAllBookingsByAgent() {\n    const userId = this.userSessionService.getUserSession()?.user.id;\n    if (userId) {\n      try {\n        this.listOfReservations =\n          await this.getAllBookingsHotelsByAgent.execute(userId);\n      } catch (err) {\n        console.error('Error fetching bookings:', err);\n      }\n    } else {\n      console.warn('User ID not found in session');\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".list-reservations-by-agent {\n  @apply flex flex-wrap gap-4;\n}\n",
          "styleUrl": "./hotels-booking-by-agent-view.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "getAllBookingsHotelsByAgent",
            "type": "GetAllBookingReservationByAgentIdService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "getAllBookingsHotelsByAgent",
            "type": "GetAllBookingReservationByAgentIdService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<section class=\"list-reservations-by-agent\">\n  @for (reservation of listOfReservations; track reservation.id) {\n    <app-reservation-item [reservation]=\"reservation\"></app-reservation-item>\n  } @empty {\n    <p>Cargando reservaciones...</p>\n  }\n</section>\n"
    },
    {
      "name": "IconComponent",
      "id": "component-IconComponent-50fe20dfa66380e580707c0cb0a00a6da4273b93decd73f8bafff97869d3bead9f51a5bfb8c8936c024c89db959968468cf5dc92dda0b97a59b995e4b3a6cf2b",
      "file": "src/app/presenter/views/shared/components/design-system/atoms/icon/icon.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./icon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "color",
          "defaultValue": "'currentColor'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        },
        {
          "required": true,
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 12,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'1.5rem'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgIcon"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { NgIcon } from '@ng-icons/core';\n\n@Component({\n  selector: 'app-icon',\n  standalone: true,\n  imports: [NgIcon],\n  templateUrl: './icon.component.html',\n  styleUrl: './icon.component.scss',\n})\nexport class IconComponent {\n  @Input({ required: true }) name!: string;\n  @Input() color = 'currentColor';\n  @Input() size = '1.5rem';\n}\n",
      "styleUrl": "./icon.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ng-icon class=\"app-icon\" [name]=\"name\" [color]=\"color\" [size]=\"size\"></ng-icon>\n"
    },
    {
      "name": "IncrementDecrementValueComponent",
      "id": "component-IncrementDecrementValueComponent-7208bcde736877017962df083b99ac08534004500b39c267097176679fa2633390b63a100bd78545e415a34e3933e125a0c1cf10517db25a560ed400520edc5c",
      "file": "src/app/presenter/views/shared/components/common/atoms/increment-decrement-value/increment-decrement-value.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-increment-decrement",
      "styleUrls": ["./increment-decrement-value.component.scss"],
      "styles": [],
      "templateUrl": ["./increment-decrement-value.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "control",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 13,
          "type": "FormControl",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "'Items'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        },
        {
          "name": "max",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "number | null",
          "decorators": []
        },
        {
          "name": "min",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "number",
          "decorators": []
        },
        {
          "name": "steps",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "decreaseValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "increaseValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\n\n@Component({\n  selector: 'app-increment-decrement',\n  templateUrl: './increment-decrement-value.component.html',\n  styleUrls: ['./increment-decrement-value.component.scss'],\n  standalone: true,\n  imports: [IconComponent],\n})\nexport class IncrementDecrementValueComponent {\n  @Input({ required: true }) control!: FormControl;\n  @Input() label = 'Items';\n  @Input() max: number | null = null;\n  @Input() min = 0;\n  @Input() steps = 1;\n\n  increaseValue() {\n    const currentValue = this.control.value as number;\n\n    if (this.max && currentValue >= this.max) return;\n    this.control.setValue(currentValue + this.steps);\n  }\n\n  decreaseValue() {\n    const currentValue = this.control.value as number;\n    if (currentValue > this.min) {\n      this.control.setValue(currentValue - this.steps);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".counter {\n  @apply flex gap-4 items-center;\n  border: 1px solid rgb(var(--ds-gray-color-200));\n  @apply px-4 py-2;\n  @apply rounded-full;\n}\n\n.counter .counter__buttons {\n  @apply flex items-center gap-4;\n  flex: 1;\n}\n\n.counter__buttons .counter__minus,\n.counter__buttons .counter__plus {\n  @apply px-2 py-1;\n  @apply flex items-center;\n  @apply rounded-full;\n  @apply text-gray-300;\n  border: 1px solid rgb(var(--ds-gray-color-300));\n}\n\n.counter__buttons .counter__minus:hover,\n.counter__buttons .counter__plus:hover {\n  @apply text-gray-500;\n  border: 1px solid rgb(var(--ds-gray-color-500));\n}\n\n.counter__buttons .counter__minus.min-reached,\n.counter__buttons .counter__plus.max-reached {\n  @apply text-gray-100;\n  border: 1px solid rgb(var(--ds-gray-color-100));\n}\n",
          "styleUrl": "./increment-decrement-value.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"counter\">\n  <div class=\"counter__buttons\">\n    <button\n      [class]=\"[\n        'counter__minus',\n        control.value === this.min ? 'min-reached' : '',\n      ]\"\n      (click)=\"decreaseValue()\">\n      <app-icon name=\"matMinusRound\" size=\"1.2rem\"></app-icon>\n    </button>\n    <span class=\"text-center text-[0.8rem]\">\n      {{ control.value }} {{ label }}\n    </span>\n    <button\n      [class]=\"[\n        'counter__plus',\n        control.value === this.max ? 'max-reached' : '',\n      ]\"\n      (click)=\"increaseValue()\">\n      <app-icon name=\"matAddRound\" size=\"1.2rem\"></app-icon>\n    </button>\n  </div>\n</div>\n"
    },
    {
      "name": "ListFilterHotelsComponent",
      "id": "component-ListFilterHotelsComponent-d41c98c84ef99ded721d50d1ba773c4eb9c0b3159560afc53087100f9d1ffe069aaaa20b8a0cf568273b6911aa35b0654075749113d44501aef1dadd5f84c490",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-hotels/list-filter-hotels.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-list-filter-hotels",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./list-filter-hotels.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualSearchFilterHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "actualSearchFilterHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelFilterModel | null>",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "listOfHotelsFilter",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[]",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "stateLoading",
          "defaultValue": "StatusProcessAction.IDLE",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StatusProcessAction",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "StatusProcessAction",
          "defaultValue": "StatusProcessAction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70,
          "modifierKind": [124, 148]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "searchHotelsByFilters",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HotelItemComponent",
          "type": "component"
        },
        {
          "name": "SidebarRoomsHotelComponent",
          "type": "component"
        },
        {
          "name": "ListFilterItemComponent",
          "type": "component"
        },
        {
          "name": "ProgressSpinnerModule",
          "type": "module"
        },
        {
          "name": "ToastModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HotelItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-item/hotel-item.component';\nimport { SidebarRoomsHotelComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/sidebar-rooms-hotel/sidebar-rooms-hotel.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { ListFilterItemComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-item/list-filter-item.component';\nimport { Observable } from 'rxjs';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { Store } from '@ngxs/store';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { GetAllHotelsByFilterUseCaseService } from '@/app/domain/usecases/hotel/get-all-hotels-by-filter-use-case.service';\nimport { HotelOperationError } from '@/app/core/validations/hotels/hotel-operation.error';\nimport { SetHotel } from '@/app/presenter/state/hotels/actions';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { StatusProcessAction } from '@/app/presenter/models/state/statusProcessAction';\nimport { ToastModule } from 'primeng/toast';\n\n@Component({\n  selector: 'app-list-filter-hotels',\n  standalone: true,\n  imports: [\n    HotelItemComponent,\n    SidebarRoomsHotelComponent,\n    ListFilterItemComponent,\n    ProgressSpinnerModule,\n    ToastModule,\n  ],\n  templateUrl: './list-filter-hotels.component.html',\n  styleUrl: './list-filter-hotels.component.scss',\n})\nexport class ListFilterHotelsComponent implements OnInit {\n  listOfHotelsFilter: HotelEntity[] = [];\n\n  stateLoading: StatusProcessAction = StatusProcessAction.IDLE;\n\n  actualSearchFilterHotel: HotelFilterModel | null = null;\n  actualSearchFilterHotel$: Observable<HotelFilterModel | null>;\n\n  constructor(\n    private store: Store,\n    private getAllHotelsByFilterUseCase: GetAllHotelsByFilterUseCaseService\n  ) {\n    this.actualSearchFilterHotel$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n  }\n\n  ngOnInit() {\n    this.actualSearchFilterHotel$.subscribe(filterSearch => {\n      this.actualSearchFilterHotel = filterSearch;\n      void this.searchHotelsByFilters();\n    });\n  }\n\n  async searchHotelsByFilters() {\n    this.stateLoading = StatusProcessAction.LOADING;\n    try {\n      this.listOfHotelsFilter = await this.getAllHotelsByFilterUseCase.execute(\n        this.actualSearchFilterHotel!\n      );\n      this.store.dispatch(new SetHotel(this.listOfHotelsFilter));\n      this.stateLoading = StatusProcessAction.SUCCESS;\n    } catch (error) {\n      this.stateLoading = StatusProcessAction.ERROR;\n      if (error instanceof HotelOperationError) {\n        console.error('Error al buscar hoteles por filtro');\n      }\n    }\n  }\n\n  protected readonly StatusProcessAction = StatusProcessAction;\n}\n",
      "styleUrl": "./list-filter-hotels.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getAllHotelsByFilterUseCase",
            "type": "GetAllHotelsByFilterUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 36,
        "jsdoctags": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getAllHotelsByFilterUseCase",
            "type": "GetAllHotelsByFilterUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"flex flex-col\">\n  @if (stateLoading === StatusProcessAction.LOADING) {\n    <div class=\"flex flex-col items-center\">\n      <p-progressSpinner ariaLabel=\"loading\" />\n      <p>Buscando coincidencias....</p>\n    </div>\n  } @else if (stateLoading === StatusProcessAction.ERROR) {\n    <div class=\"flex flex-col items-center\">\n      <p>Ha ocurrido un error al filtrar los hoteles, intente de nuevo....</p>\n    </div>\n  } @else {\n    <section class=\"list-hotels\">\n      @for (hotel of listOfHotelsFilter; track hotel.id) {\n        <app-list-filter-item [hotel]=\"hotel\"></app-list-filter-item>\n      } @empty {\n        <p>\n          No se encontraron hoteles disponibles en esa fecha, escoja diferente\n        </p>\n      }\n    </section>\n  }\n</div>\n"
    },
    {
      "name": "ListFilterItemComponent",
      "id": "component-ListFilterItemComponent-d361a9d40d0397c02c92fcd2edbec2a826830c707d7fea4b25dc2ece0457571ded83c40260971de128ae23059c22e1c15bdc82ab6380fb434e60d6e4749681e9",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-item/list-filter-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-list-filter-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./list-filter-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "hotel",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 36,
          "type": "HotelEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualSearchHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "actualSearchHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelFilterModel | null>",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "actualUserSession",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Session | null",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [125]
        },
        {
          "name": "refGenerateReservationModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openReservationModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CardModule",
          "type": "module"
        },
        {
          "name": "HotelConfigurationComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "PrimeTemplate"
        },
        {
          "name": "TagModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ToastModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { CardModule } from 'primeng/card';\nimport { HotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { MessageService, PrimeTemplate } from 'primeng/api';\nimport { TagModule } from 'primeng/tag';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { GenerateReservationComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/generate-reservation.component';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { Observable } from 'rxjs';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { Store } from '@ngxs/store';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { Session } from '@supabase/supabase-js';\nimport { AddActualSearchHotel } from '@/app/presenter/state/searchHotelsFilter/actions';\nimport { ToastModule } from 'primeng/toast';\n\n@Component({\n  selector: 'app-list-filter-item',\n  standalone: true,\n  imports: [\n    CardModule,\n    HotelConfigurationComponent,\n    IconComponent,\n    PrimeTemplate,\n    TagModule,\n    ButtonComponent,\n    ToastModule,\n  ],\n  templateUrl: './list-filter-item.component.html',\n  styleUrl: './list-filter-item.component.scss',\n})\nexport class ListFilterItemComponent implements OnInit {\n  @Input({ required: true }) hotel!: HotelEntity;\n\n  refGenerateReservationModal: DynamicDialogRef | undefined;\n\n  actualSearchHotel: HotelFilterModel | null = null;\n  actualSearchHotel$: Observable<HotelFilterModel | null>;\n  actualUserSession: Session | null = null;\n\n  constructor(\n    public dialogService: DialogService,\n    private store: Store,\n    private mesaageService: MessageService,\n    private userSessionService: SessionUserService\n  ) {\n    this.userSessionService.session$.subscribe(session => {\n      this.actualUserSession = session;\n    });\n\n    this.actualSearchHotel$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n  }\n\n  ngOnInit() {\n    this.actualSearchHotel$.subscribe(actualSearchFilterHotel => {\n      this.actualSearchHotel = actualSearchFilterHotel;\n    });\n  }\n\n  openReservationModal() {\n    this.refGenerateReservationModal = this.dialogService.open(\n      GenerateReservationComponent,\n      {\n        header: 'Habitaci√≥nes disponibles para reservar',\n        width: '50rem',\n        breakpoints: {\n          '769px': '90%',\n        },\n        data: {\n          hotel: this.hotel,\n        },\n      }\n    );\n    this.refGenerateReservationModal.onClose.subscribe(\n      (data: { success: boolean }) => {\n        if (data?.success) {\n          console.log('xxaaa');\n          this.mesaageService.add({\n            severity: 'success',\n            summary: 'Reservaci√≥n completada',\n            detail: 'La reservaci√≥n se ha completado con √©xito',\n          });\n          this.store.dispatch(\n            new AddActualSearchHotel({\n              city: '',\n              dateArrive: '',\n              dateCheckout: '',\n              numGuests: 1,\n            })\n          );\n        }\n      }\n    );\n  }\n}\n",
      "styleUrl": "./list-filter-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "mesaageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 42,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "mesaageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<p-card\n  [style]=\"{ width: '260px', height: '350px', padding: 0 }\"\n  class=\"hotel-to-users-item\">\n  <ng-template pTemplate=\"header\" class=\"hotel-item-header\">\n    <img\n      alt=\"Hotel Alto\"\n      class=\"hotel-item-header__image\"\n      src=\"/assets/img/hote-template.jpg\" />\n  </ng-template>\n  <div class=\"hotel-item-body\">\n    <h3 class=\"hotel-item-body__title-hotel text-headline-md\">\n      {{ hotel.name }}\n    </h3>\n    <p class=\"hotel-item-body__description-hotel text-body-sm\">\n      {{ hotel?.description || 'Sin descripci√≥n' }}\n    </p>\n    <div class=\"mt-2 flex flex-col\">\n      <span class=\"text-caption-lg\">\n        <app-icon name=\"matBedRound\" size=\"1.5rem\" class=\"mr-2\"> </app-icon>\n        {{\n          hotel?.rooms?.length === 1\n            ? '1 habitaci√≥n disponible'\n            : hotel.rooms?.length + ' habitaciones disponibles'\n        }}\n      </span>\n      <span class=\"text-caption-lg\">\n        <app-icon\n          name=\"matLocationOnRound\"\n          size=\"1.5rem\"\n          class=\"mr-2\"></app-icon>\n        {{ hotel.country }}, {{ hotel.city }}\n      </span>\n    </div>\n  </div>\n  <ng-template pTemplate=\"footer\" class=\"hotel-item-footer\">\n    <app-button size=\"small\" (click)=\"openReservationModal()\">\n      <app-icon name=\"matBedRound\" size=\"1.2rem\" class=\"mr-2\"></app-icon>\n      Ver habitaciones</app-button\n    >\n  </ng-template>\n</p-card>\n<p-toast />\n"
    },
    {
      "name": "ListHotelsComponent",
      "id": "component-ListHotelsComponent-1fc8b9d002a95d3c6d76041804724f4d620e7cef09436cd92495e90054df9661ef13c26aa4624397df032baca31941de0fd01a11937464d77c3a3aa90f82c09b",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/list-hotels.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-list-hotels",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./list-hotels.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "listOfHotelByAgent$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelEntity[]>",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "listOfHotelsByAgent",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[]",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [
        {
          "name": "loadAllHotelsByAgent",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HotelItemComponent",
          "type": "component"
        },
        {
          "name": "SidebarModule",
          "type": "module"
        },
        {
          "name": "DialogModule",
          "type": "module"
        },
        {
          "name": "SidebarRoomsHotelComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HotelItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-item/hotel-item.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { GetAllHotelsByAgentUseCaseService } from '@/app/domain/usecases/hotel/get-all-hotels-by-agent-use-case.service';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { DialogModule } from 'primeng/dialog';\nimport { SidebarRoomsHotelComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/sidebar-rooms-hotel/sidebar-rooms-hotel.component';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { HotelState } from '@/app/presenter/state/hotels';\nimport { SetHotel } from '@/app/presenter/state/hotels/actions';\n\n@Component({\n  selector: 'app-list-hotels',\n  standalone: true,\n  imports: [\n    HotelItemComponent,\n    SidebarModule,\n    DialogModule,\n    SidebarRoomsHotelComponent,\n  ],\n  templateUrl: './list-hotels.component.html',\n  styleUrl: './list-hotels.component.scss',\n})\nexport class ListHotelsComponent implements OnInit {\n  listOfHotelsByAgent: HotelEntity[] = [];\n  listOfHotelByAgent$: Observable<HotelEntity[]>;\n\n  constructor(\n    private userSessionService: SessionUserService,\n    private getAllHotelsByAgentUseCaseService: GetAllHotelsByAgentUseCaseService,\n    private store: Store\n  ) {\n    this.listOfHotelByAgent$ = this.store.select(HotelState.getHotels);\n  }\n\n  ngOnInit() {\n    this.listOfHotelByAgent$.subscribe(listHotels => {\n      this.listOfHotelsByAgent = listHotels;\n    });\n    void this.loadAllHotelsByAgent();\n  }\n\n  async loadAllHotelsByAgent() {\n    try {\n      this.listOfHotelsByAgent =\n        await this.getAllHotelsByAgentUseCaseService.execute(\n          this.userSessionService.getUserSession()?.user.id ?? ''\n        );\n      this.store.dispatch(new SetHotel(this.listOfHotelsByAgent));\n    } catch (error) {\n      console.error('error al traer la lista de hoteles', error);\n    }\n  }\n}\n",
      "styleUrl": "./list-hotels.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "getAllHotelsByAgentUseCaseService",
            "type": "GetAllHotelsByAgentUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "userSessionService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "getAllHotelsByAgentUseCaseService",
            "type": "GetAllHotelsByAgentUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<section class=\"list-hotels-by-agent\">\n  @for (hotel of listOfHotelsByAgent; track hotel.id) {\n    <app-hotel-item [hotel]=\"hotel\"></app-hotel-item>\n  } @empty {\n    <p>Cargando hoteles...</p>\n  }\n</section>\n<app-sidebar-rooms-hotel></app-sidebar-rooms-hotel>\n"
    },
    {
      "name": "ListRoomsComponent",
      "id": "component-ListRoomsComponent-57ca33bbe39e18b91704be795c59e1cec8c1241d67ca17555936ea9c77eed1acc94356af105b854f61afa5a2eb7cc9e5d336077af7dbbba256cf0ae60c346764",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/list-rooms.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-list-rooms",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./list-rooms.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity | null",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "actualHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelEntity | null>",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "actualHotelSubcriber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "listRooms",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RoomEntity[]",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "listRooms$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<[] | null>",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "listRoomsSubcriber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [
        {
          "name": "loadAllRoomsByHotel",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RoomItemComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RoomItemComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-item/room-item.component';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { GetAllRoomsByHotelUseCaseService } from '@/app/domain/usecases/room/get-all-rooms-by-hotel-use-case.service';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Observable, Subscription } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { HotelState } from '@/app/presenter/state/hotels';\nimport { RoomState } from '@/app/presenter/state/rooms';\nimport { SetRooms } from '@/app/presenter/state/rooms/actions';\nimport { AddActualHotel } from '@/app/presenter/state/hotels/actions';\n\n@Component({\n  selector: 'app-list-rooms',\n  standalone: true,\n  imports: [RoomItemComponent],\n  templateUrl: './list-rooms.component.html',\n  styleUrl: './list-rooms.component.scss',\n})\nexport class ListRoomsComponent implements OnInit, OnDestroy {\n  listRooms: RoomEntity[] = [];\n  listRooms$: Observable<RoomEntity[] | null>;\n\n  actualHotel: HotelEntity | null = null;\n  actualHotel$: Observable<HotelEntity | null>;\n  actualHotelSubcriber!: Subscription;\n  listRoomsSubcriber!: Subscription;\n\n  constructor(\n    private getAllRoomsByHotelUseCaseService: GetAllRoomsByHotelUseCaseService,\n    private store: Store\n  ) {\n    this.listRooms$ = this.store.select(RoomState.getRooms);\n    this.actualHotel$ = this.store.select(HotelState.getActualHotel);\n  }\n\n  ngOnInit() {\n    this.listRoomsSubcriber = this.listRooms$.subscribe(listRooms => {\n      this.listRooms = listRooms ?? [];\n    });\n    this.actualHotelSubcriber = this.actualHotel$.subscribe(actualHotel => {\n      this.actualHotel = actualHotel;\n      if (actualHotel) {\n        void this.loadAllRoomsByHotel();\n      }\n    });\n  }\n\n  async loadAllRoomsByHotel() {\n    try {\n      this.listRooms = await this.getAllRoomsByHotelUseCaseService.execute(\n        this.actualHotel?.id ?? ''\n      );\n      this.store.dispatch(new SetRooms(this.listRooms));\n    } catch (error) {\n      console.error('error al traer la lista de hoteles', error);\n    }\n  }\n\n  ngOnDestroy() {\n    this.listRooms = [];\n    this.store.dispatch(new AddActualHotel(null));\n    this.store.dispatch(new SetRooms([]));\n    this.actualHotelSubcriber?.unsubscribe();\n    this.listRoomsSubcriber?.unsubscribe();\n  }\n}\n",
      "styleUrl": "./list-rooms.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "getAllRoomsByHotelUseCaseService",
            "type": "GetAllRoomsByHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "getAllRoomsByHotelUseCaseService",
            "type": "GetAllRoomsByHotelUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div class=\"list-rooms-hotel\">\n  @for (room of listRooms; track room.id) {\n    <app-room-item [room]=\"room\"></app-room-item>\n  } @empty {\n    <p>No se han encontrado habitaciones asociadas</p>\n  }\n</div>\n"
    },
    {
      "name": "MainFooterComponent",
      "id": "component-MainFooterComponent-fb2268220064626a913c68190617744af830a0d712ee77add91068d4763fa2c5bfef7cc0e148a57486ef589d315f8f33eaf73108523cabfbb4b85e1248cd858f",
      "file": "src/app/presenter/views/shared/components/common/organisms/layout/main-footer/main-footer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-main-footer",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./main-footer.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualYear",
          "defaultValue": "new Date().getFullYear()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './main-footer.component.html',\n  styleUrl: './main-footer.component.scss',\n})\nexport class MainFooterComponent {\n  actualYear = new Date().getFullYear();\n}\n",
      "styleUrl": "./main-footer.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<footer class=\"main-footer\">\n  <p>&copy; {{ actualYear }} UltraHotels - UltraGroup üíô</p>\n</footer>\n"
    },
    {
      "name": "MainHeaderComponent",
      "id": "component-MainHeaderComponent-f5ebcacd2407a415e6b5c870b96d224a65d2116563ef735b09d050b90a4118c4fe424ada102c5e46f123978d3181880ac174b64777061b453f7b4c68411216d5",
      "file": "src/app/presenter/views/shared/components/common/organisms/layout/main-header/main-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "DialogService",
          "type": "injectable"
        }
      ],
      "selector": "app-main-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./main-header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [125]
        },
        {
          "name": "refAuthenticationModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "sessionUser",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Session | null",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "sessionUserServiceService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SessionUserService",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [125]
        },
        {
          "name": "subscriptionAuthSessionService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getSessionUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openAuthenticationModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgOptimizedImage"
        },
        {
          "name": "DynamicDialogModule",
          "type": "module"
        },
        {
          "name": "Button"
        },
        {
          "name": "NgIcon"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "UserLoggedPanelComponent",
          "type": "component"
        },
        {
          "name": "OverlayPanelModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgOptimizedImage } from '@angular/common';\nimport { Button } from 'primeng/button';\nimport { NgIcon } from '@ng-icons/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport {\n  DialogService,\n  DynamicDialogModule,\n  DynamicDialogRef,\n} from 'primeng/dynamicdialog';\nimport { AuthenticationFormModalComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/authentication-form-modal/authentication-form-modal.component';\nimport { Session } from '@supabase/supabase-js';\nimport { UserLoggedPanelComponent } from '@/app/presenter/views/shared/components/common/molecules/user-logged-panel/user-logged-panel.component';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-main-header',\n  standalone: true,\n  imports: [\n    NgOptimizedImage,\n    DynamicDialogModule,\n    Button,\n    NgIcon,\n    IconComponent,\n    ButtonComponent,\n    UserLoggedPanelComponent,\n    OverlayPanelModule,\n  ],\n  templateUrl: './main-header.component.html',\n  styleUrl: './main-header.component.scss',\n  providers: [DialogService],\n})\nexport class MainHeaderComponent implements OnInit, OnDestroy {\n  sessionUser: Session | null = null;\n  private subscriptionAuthSessionService!: Subscription;\n\n  constructor(\n    public dialogService: DialogService,\n    public sessionUserServiceService: SessionUserService\n  ) {}\n\n  ngOnInit() {\n    void this.getSessionUser();\n  }\n\n  getSessionUser() {\n    this.sessionUserServiceService.session$.subscribe(session => {\n      this.sessionUser = session;\n    });\n  }\n\n  refAuthenticationModal: DynamicDialogRef | undefined;\n\n  openAuthenticationModal() {\n    this.refAuthenticationModal = this.dialogService.open(\n      AuthenticationFormModalComponent,\n      {\n        width: 'auto',\n        modal: true,\n        closable: true,\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.refAuthenticationModal) {\n      this.refAuthenticationModal.close();\n      this.refAuthenticationModal = undefined; // Reset ref on destroy\n    }\n    if (this.subscriptionAuthSessionService) {\n      this.subscriptionAuthSessionService.unsubscribe();\n    }\n  }\n}\n",
      "styleUrl": "./main-header.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "sessionUserServiceService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 38,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "sessionUserServiceService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<header class=\"main-header-container\">\n  <div class=\"main-header\">\n    <div class=\"main-brand\">\n      <img\n        class=\"main-brand__logo\"\n        src=\"/assets/img/main-logo-ultra-hotels-transparent.png\"\n        width=\"60px\"\n        height=\"60px\"\n        alt=\"Ultra Hotels logo\" />\n      <h1 class=\"main-brand__name_app text-display-sm\">UltraHotels</h1>\n    </div>\n    <div>\n      @if (!sessionUser) {\n        <app-button\n          text=\"Ingresar\"\n          size=\"small\"\n          classStyles=\"font-bold\"\n          (click)=\"openAuthenticationModal()\">\n          <span class=\"mr-4\">\n            <app-icon name=\"matLoginRound\" size=\"1.5rem\"></app-icon>\n          </span>\n        </app-button>\n      } @else {\n        <app-user-logged-panel></app-user-logged-panel>\n      }\n    </div>\n  </div>\n</header>\n"
    },
    {
      "name": "MainLayoutComponent",
      "id": "component-MainLayoutComponent-fae9332cec8773e3dcda6f34522c0bf2e941c95579a8658bc134ea34c336b168ade7903080125d43dece0b3deb63856a0d87e3d9519c2079cbef3262db7be6a4",
      "file": "src/app/presenter/views/shared/layouts/main-layout/main-layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-main-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./main-layout.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MainHeaderComponent",
          "type": "component"
        },
        {
          "name": "MainFooterComponent",
          "type": "component"
        },
        {
          "name": "RouterOutlet"
        },
        {
          "name": "ToastModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { MainHeaderComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-header/main-header.component';\nimport { MainFooterComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-footer/main-footer.component';\nimport { RouterOutlet } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\n\n@Component({\n  selector: 'app-main-layout',\n  standalone: true,\n  imports: [\n    MainHeaderComponent,\n    MainFooterComponent,\n    RouterOutlet,\n    ToastModule,\n  ],\n  templateUrl: './main-layout.component.html',\n  styleUrl: './main-layout.component.scss',\n})\nexport class MainLayoutComponent {}\n",
      "styleUrl": "./main-layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div>\n  <app-main-header></app-main-header>\n</div>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<p-toast position=\"top-center\" />\n"
    },
    {
      "name": "ManageHotelsViewComponent",
      "id": "component-ManageHotelsViewComponent-4f7999c93631c8daaff44a1cdbef8fb305ed71395d3c1a6d5e388a1d27fe4e34b3d568a8c6789cb7b5f3fac24ceada15a825f3f73026a60929e988190f54b3de",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/manage-hotels-view.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-manage-hotels-view",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./manage-hotels-view.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [125]
        },
        {
          "name": "refCreateHotelModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [
        {
          "name": "openCreateHotelModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "NgIcon"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ListHotelsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { NgIcon } from '@ng-icons/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ListHotelsComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/list-hotels.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CreateNewHotelModalComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/create-new-hotel-modal/create-new-hotel-modal.component';\n\n@Component({\n  selector: 'app-manage-hotels-view',\n  standalone: true,\n  imports: [ButtonComponent, NgIcon, IconComponent, ListHotelsComponent],\n  templateUrl: './manage-hotels-view.component.html',\n  styleUrl: './manage-hotels-view.component.scss',\n})\nexport class ManageHotelsViewComponent {\n  refCreateHotelModal: DynamicDialogRef | undefined;\n  constructor(public dialogService: DialogService) {}\n\n  openCreateHotelModal() {\n    this.refCreateHotelModal = this.dialogService.open(\n      CreateNewHotelModalComponent,\n      {\n        header: 'Crear nuevo hotel',\n        width: '50rem',\n      }\n    );\n  }\n}\n",
      "styleUrl": "./manage-hotels-view.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div>\n  <app-button\n    text=\"Crear nuevo hotel\"\n    size=\"small\"\n    class=\"inline-block\"\n    classStyles=\"font-bold\"\n    (click)=\"openCreateHotelModal()\">\n    <app-icon name=\"matAddHomeRound\" class=\"mr-2\"></app-icon>\n  </app-button>\n  <div class=\"list-hotels\">\n    <app-list-hotels></app-list-hotels>\n  </div>\n</div>\n"
    },
    {
      "name": "MapHotelsComponent",
      "id": "component-MapHotelsComponent-01b87a4891c9fd98fcc8036646fb1c1f8b7d2eddd1246879cffc07db1abcc5059ea4beeba04128cbe8836836cd0138b5d5897c053f80cea9ed91c9ce552e7d33",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/map-hotels/map-hotels.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-map-hotels",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./map-hotels.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualHotels",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity[] | null",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "actualHotels$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<[] | null>",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "actualHotelsSubscription",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription | null",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "map",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Map",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "markersLayer",
          "defaultValue": "new LayerGroup()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "LayerGroup",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "options",
          "defaultValue": "{\n    layers: [\n      tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 9,\n        minZoom: 3,\n      }),\n    ],\n    zoom: 5,\n    center: latLng(4.5709, -74.2973),\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "points",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MapPoint[]",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [
        {
          "name": "addPoints",
          "args": [
            {
              "name": "points",
              "type": "MapPoint[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "points",
              "type": "MapPoint[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "addRandomPoints",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 84,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onMapReady",
          "args": [
            {
              "name": "map",
              "type": "Map",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "map",
              "type": "Map",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "LeafletModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport {\n  latLng,\n  LayerGroup,\n  tileLayer,\n  Map,\n  LatLng,\n  Marker,\n  icon,\n} from 'leaflet';\n\ninterface MapPoint {\n  coords: LatLng;\n  message: string;\n}\n\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotelState } from '@/app/presenter/state/hotels';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'app-map-hotels',\n  standalone: true,\n  imports: [LeafletModule],\n  templateUrl: './map-hotels.component.html',\n  styleUrl: './map-hotels.component.scss',\n})\nexport class MapHotelsComponent implements OnInit, OnDestroy {\n  map!: Map;\n  markersLayer: LayerGroup = new LayerGroup();\n  actualHotels: HotelEntity[] | null = null;\n  actualHotels$!: Observable<HotelEntity[] | null>;\n\n  actualHotelsSubscription: Subscription | null = null;\n  points: MapPoint[] = [];\n\n  options = {\n    layers: [\n      tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 9,\n        minZoom: 3,\n      }),\n    ],\n    zoom: 5,\n    center: latLng(4.5709, -74.2973),\n  };\n\n  constructor(private store: Store) {\n    this.actualHotels$ = this.store.select(HotelState.getHotels);\n  }\n\n  ngOnInit() {\n    this.actualHotelsSubscription = this.actualHotels$.subscribe(listHotels => {\n      this.actualHotels = listHotels;\n      this.addRandomPoints();\n    });\n  }\n\n  onMapReady(map: Map) {\n    this.map = map;\n    this.markersLayer.addTo(this.map);\n  }\n\n  addPoints(points: MapPoint[]) {\n    this.markersLayer.clearLayers();\n\n    points.forEach(point => {\n      const marker = new Marker(point.coords, {\n        icon: icon({\n          iconSize: [40, 40],\n          iconAnchor: [40, 40],\n          iconUrl: '/assets/img/pinner.png',\n          shadowUrl: 'assets/marker-shadow.png',\n        }),\n      })\n        .bindPopup(point.message)\n        .openPopup();\n      this.markersLayer.addLayer(marker);\n    });\n  }\n\n  addRandomPoints() {\n    this.points = (this.actualHotels ?? []).map(hotel => {\n      return {\n        coords: latLng(hotel?.latitude ?? 0, hotel?.longitude ?? 0),\n        message: hotel?.name ?? '',\n      };\n    });\n    this.addPoints(this.points);\n  }\n\n  ngOnDestroy() {\n    this.actualHotelsSubscription?.unsubscribe();\n  }\n}\n",
      "styleUrl": "./map-hotels.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 48,
        "jsdoctags": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div class=\"w-full h-full\">\n  <div\n    class=\"section-map__map\"\n    leaflet\n    [leafletOptions]=\"options\"\n    (leafletMapReady)=\"onMapReady($event)\"></div>\n</div>\n"
    },
    {
      "name": "MapModalComponent",
      "id": "component-MapModalComponent-00d1e13370147e8afbb387601f7c2742e23265e57ecac0b9e480db74b3ab65b5cb95a7660f8f378588b8815639b309540b8cb4a4856267e7eb87e490c01332ad",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/map-modal/map-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-map-modal",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./map-modal.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "latitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "longitude",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "map",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Map",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "marker",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Marker",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "options",
          "defaultValue": "{\n    layers: [\n      tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 18,\n        attribution: '¬© OpenStreetMap contributors',\n      }),\n    ],\n    zoom: 15,\n    center: latLng(4.5709, -74.2973), // Coordenadas iniciales\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [
        {
          "name": "onMapReady",
          "args": [
            {
              "name": "map",
              "type": "Map",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "map",
              "type": "Map",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "placeMarker",
          "args": [
            {
              "name": "coords",
              "type": "L.LatLng",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "coords",
              "type": "L.LatLng",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectMapLocation",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "LeafletModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "Button"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport {\n  icon,\n  latLng,\n  Marker,\n  tileLayer,\n  Map,\n  LeafletMouseEvent,\n} from 'leaflet';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { Button } from 'primeng/button';\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\n\n@Component({\n  selector: 'app-map-modal',\n  standalone: true,\n  imports: [LeafletModule, ButtonComponent, Button, IconComponent],\n  templateUrl: './map-modal.component.html',\n  styleUrl: './map-modal.component.scss',\n})\nexport class MapModalComponent {\n  map!: Map;\n  marker!: Marker;\n  latitude!: number;\n  longitude!: number;\n\n  constructor(private mapDialogRef: DynamicDialogRef) {}\n\n  options = {\n    layers: [\n      tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 18,\n        attribution: '¬© OpenStreetMap contributors',\n      }),\n    ],\n    zoom: 15,\n    center: latLng(4.5709, -74.2973), // Coordenadas iniciales\n  };\n\n  onMapReady(map: Map) {\n    this.map = map;\n\n    this.map.on('click', (e: LeafletMouseEvent) => {\n      const coords = e.latlng;\n      this.placeMarker(coords);\n    });\n  }\n\n  // eslint-disable-next-line no-undef\n  placeMarker(coords: L.LatLng) {\n    this.latitude = coords.lat;\n    this.longitude = coords.lng;\n\n    if (this.marker) {\n      this.marker.setLatLng(coords);\n    } else {\n      this.marker = new Marker(coords, {\n        icon: icon({\n          iconSize: [40, 40],\n          iconAnchor: [40, 40],\n          iconUrl: '/assets/img/pinner.png',\n          shadowUrl: 'assets/marker-shadow.png',\n        }),\n      }).addTo(this.map);\n    }\n  }\n\n  selectMapLocation() {\n    this.mapDialogRef.close({\n      latitude: this.latitude,\n      longitude: this.longitude,\n    });\n  }\n}\n",
      "styleUrl": "./map-modal.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "mapDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "mapDialogRef",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"leaflet-container\">\n  <div\n    leaflet\n    [leafletOptions]=\"options\"\n    (leafletMapReady)=\"onMapReady($event)\"></div>\n</div>\n<div class=\"p-dialog-footer mt-5 flex justify-end\">\n  <app-button\n    text=\"Seleccionar ubicaci√≥n\"\n    (click)=\"selectMapLocation()\"></app-button>\n</div>\n"
    },
    {
      "name": "OAuthCallbackComponent",
      "id": "component-OAuthCallbackComponent-46bf254400f7aeacef2225d0db877db8fea6d78310a5268510cc85a0d78d7f4957039fd17f3cc752c70dab4524e0eaa6825dfadf795968747b2d66234f5b0ef8",
      "file": "src/app/presenter/views/pages/auth/oauth-callback/oauth-callback.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-oauth-callback",
      "styleUrls": ["./oauth-callback.component.scss"],
      "styles": [],
      "templateUrl": ["./oauth-callback.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SupabaseService } from '@/app/core/services/supabase/supabase.service';\nimport { CompleteDataUserOAuthUseCaseService } from '@/app/domain/usecases/user/complete-data-user-oauth-use-case.service';\nimport { OAuthUserMetadata } from '@/app/core/models/auth';\nimport { fromEventPattern, take } from 'rxjs';\nimport { Session } from '@supabase/supabase-js';\n\n@Component({\n  selector: 'app-oauth-callback',\n  standalone: true,\n  imports: [],\n  templateUrl: './oauth-callback.component.html',\n  styleUrls: ['./oauth-callback.component.scss'],\n})\nexport class OAuthCallbackComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private supabase: SupabaseService,\n    private completeDataUserOAuthUseCase: CompleteDataUserOAuthUseCaseService\n  ) {}\n\n  ngOnInit() {\n    fromEventPattern<[string, Session | null]>(handler => {\n      const { data } = this.supabase.supabase.auth.onAuthStateChange(handler);\n      return data.subscription?.unsubscribe.bind(data.subscription);\n    })\n      .pipe(take(1))\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      .subscribe(async ([, session]) => {\n        if (session) {\n          const user = session.user;\n          const userMetadata = user.user_metadata as OAuthUserMetadata;\n\n          await this.completeDataUserOAuthUseCase.execute({\n            id: user.id,\n            email: userMetadata.email,\n            full_name: userMetadata.full_name,\n          });\n\n          await this.router.navigate(['']);\n        } else {\n          console.error('No session found, staying on callback page');\n        }\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./oauth-callback.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "supabase",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "completeDataUserOAuthUseCase",
            "type": "CompleteDataUserOAuthUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "supabase",
            "type": "SupabaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "completeDataUserOAuthUseCase",
            "type": "CompleteDataUserOAuthUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<p>oauth-callback works!</p>\n"
    },
    {
      "name": "ReservationItemComponent",
      "id": "component-ReservationItemComponent-aee4d2274bf1555fd3b925d8cfe06ccb3c77372121c3396fa39772e20739e1a604afd7f1cc669fe7d83b6cac7d1c52b80b4ce345911ccf8d45626b87e0a23667",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/reservation-item/reservation-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-reservation-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./reservation-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "reservation",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 27,
          "type": "BookingEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [125]
        },
        {
          "name": "refGuestsModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [
        {
          "name": "viewGuestsReservation",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CardModule",
          "type": "module"
        },
        {
          "name": "HotelConfigurationComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "PrimeTemplate"
        },
        {
          "name": "TagModule",
          "type": "module"
        },
        {
          "name": "Button"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { BookingEntity } from '@/app/domain/entities/booking.entity';\nimport { CardModule } from 'primeng/card';\nimport { HotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { PrimeTemplate } from 'primeng/api';\nimport { TagModule } from 'primeng/tag';\nimport { Button } from 'primeng/button';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { GuestsReservationListComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guests-reservation-list.component';\n\n@Component({\n  selector: 'app-reservation-item',\n  standalone: true,\n  imports: [\n    CardModule,\n    HotelConfigurationComponent,\n    IconComponent,\n    PrimeTemplate,\n    TagModule,\n    Button,\n  ],\n  templateUrl: './reservation-item.component.html',\n  styleUrl: './reservation-item.component.scss',\n})\nexport class ReservationItemComponent {\n  @Input({ required: true }) reservation!: BookingEntity;\n\n  refGuestsModal: DynamicDialogRef | undefined;\n\n  constructor(public dialogService: DialogService) {}\n\n  viewGuestsReservation() {\n    this.refGuestsModal = this.dialogService.open(\n      GuestsReservationListComponent,\n      {\n        header: `Huespedes del ${this.reservation.rooms?.hotels?.name}`,\n        width: '50rem',\n        data: {\n          guests: this.reservation.guests,\n          reservation: this.reservation,\n        },\n      }\n    );\n  }\n}\n",
      "styleUrl": "./reservation-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<p-card [style]=\"{ width: '260px' }\" class=\"reservation-item\">\n  <div class=\"reservation-item-body\">\n    <h3 class=\"reservation-item-body__title-reservation text-subheadline-sm\">\n      Hotel {{ reservation.rooms?.hotels?.name }}\n    </h3>\n    <div class=\"mt-2\">\n      <p class=\"reservation-item-body__description-reservation text-body-md\">\n        Habitaci√≥n : {{ reservation.rooms?.type }}\n      </p>\n      <p class=\"reservation-item-body__description-reservation text-body-md\">\n        Ubicaci√≥n : {{ reservation?.rooms?.roomNumber }}\n      </p>\n    </div>\n\n    <hr class=\"my-2\" />\n\n    <div class=\"mt-5 flex flex-col gap-2\">\n      <span class=\"text-body-sm\">\n        <app-icon name=\"matBackpackRound\" size=\"1.2rem\" class=\"mr-2\"></app-icon>\n        Llegada -> {{ reservation?.dateArrive }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matLeaveBagsAtHomeRound\"\n          size=\"1.2rem\"\n          class=\"mr-2\"></app-icon>\n        Regreso <- {{ reservation.dateCheckout }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon name=\"matPeopleRound\" size=\"1.2rem\" class=\"mr-2\"></app-icon>\n        {{ reservation.guests?.length }}\n        {{\n          reservation.guests?.length === 1\n            ? 'Persona hospedada'\n            : 'Personas hospedadas'\n        }}\n      </span>\n      <span class=\"text-body-sm\">\n        <app-icon\n          name=\"matAttachMoneyRound\"\n          size=\"1.2rem\"\n          class=\"mr-2\"></app-icon>\n        {{ reservation.totalPrice }} COP\n      </span>\n      <p class=\"text-body-sm\">\n        <span>\n          <app-icon name=\"matLocationOnRound\" size=\"1.2rem\"></app-icon>\n        </span>\n        {{ reservation?.rooms?.hotels?.country }},\n        {{ reservation.rooms?.hotels?.city }}\n      </p>\n    </div>\n  </div>\n  <ng-template pTemplate=\"footer\" class=\"reservation-item-footer\">\n    <p-button\n      size=\"small\"\n      label=\"Ver huespedes\"\n      (click)=\"viewGuestsReservation()\"></p-button>\n  </ng-template>\n</p-card>\n"
    },
    {
      "name": "RoomHotelConfigurationComponent",
      "id": "component-RoomHotelConfigurationComponent-1a9559a6c381ea02b780192cf52576313b735d0a1e413e1e3b06e097ccdd741a9e8720d923a651605026d2bb8d5463411ad1130b35b46055c28f7735bf93f578",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-hotel-configuration/room-hotel-configuration.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ConfirmationService",
          "type": "injectable"
        }
      ],
      "selector": "app-room-hotel-configuration",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./room-hotel-configuration.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "actualHotel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "HotelEntity | null",
          "decorators": []
        },
        {
          "name": "room",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "RoomEntity | null",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [125]
        },
        {
          "name": "refEditRoomModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [
        {
          "name": "handleDeleteRoom",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "openEditRoomModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "OverlayPanelModule",
          "type": "module"
        },
        {
          "name": "ConfirmDialogModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { EditRoomDialogComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/edit-room-dialog/edit-room-dialog.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DeleteRoomUseCaseService } from '@/app/domain/usecases/room/delete-room-use-case.service';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { Store } from '@ngxs/store';\nimport { RemoveRoom } from '@/app/presenter/state/rooms/actions';\n\n@Component({\n  selector: 'app-room-hotel-configuration',\n  standalone: true,\n  imports: [IconComponent, OverlayPanelModule, ConfirmDialogModule],\n  templateUrl: './room-hotel-configuration.component.html',\n  styleUrl: './room-hotel-configuration.component.scss',\n  providers: [ConfirmationService],\n})\nexport class RoomHotelConfigurationComponent {\n  @Input() actualHotel!: HotelEntity | null;\n  @Input() room!: RoomEntity | null;\n\n  constructor(\n    public dialogService: DialogService,\n    private confirmationService: ConfirmationService,\n    private deleteRoomUseCaseService: DeleteRoomUseCaseService,\n    private messageService: MessageService,\n    private store: Store\n  ) {}\n  refEditRoomModal: DynamicDialogRef | undefined;\n\n  handleDeleteRoom(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target!,\n      message: '¬øEstas seguro de que quieres eliminar esta habitaci√≥n?',\n      header: 'Confirmation',\n      acceptLabel: 'Si, Eliminar habitaci√≥n',\n      rejectLabel: 'No, Cancelar',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n      rejectButtonStyleClass: 'p-button-text',\n      acceptButtonStyleClass:\n        'p-button-text p-button-danger bg-error text-white',\n      accept: async () => {\n        await this.deleteRoomUseCaseService.execute(this.room?.id ?? '');\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Eliminar habitaci√≥n',\n          detail: 'Se ha eliminado la habitaci√≥n exitosamente',\n        });\n      },\n    });\n    this.store.dispatch(new RemoveRoom(this.room?.id ?? ''));\n  }\n\n  openEditRoomModal() {\n    this.refEditRoomModal = this.dialogService.open(EditRoomDialogComponent, {\n      header: 'Editar hotel',\n      width: '50rem',\n      data: {\n        room: this.room,\n      },\n    });\n  }\n}\n",
      "styleUrl": "./room-hotel-configuration.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "deleteRoomUseCaseService",
            "type": "DeleteRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "deleteRoomUseCaseService",
            "type": "DeleteRoomUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"card hotel-settings\">\n  <button class=\"hotel-settings__button\" (click)=\"roomConfig.toggle($event)\">\n    <app-icon name=\"matPendingRound\"></app-icon>\n  </button>\n  <p-overlayPanel #roomConfig class=\"hotel-settings__overlay\">\n    <div class=\"flex flex-col gap-3 items-start\">\n      <button\n        class=\"hover:bg-primary-50 p-2 w-full\"\n        (click)=\"openEditRoomModal()\">\n        <span class=\"text-primary-900\">\n          <app-icon name=\"matEditNoteRound\"></app-icon>\n        </span>\n        Editar habitaci√≥n\n      </button>\n      <button\n        class=\"hover:bg-primary-50 p-2 w-full\"\n        (click)=\"handleDeleteRoom($event)\">\n        <span class=\"text-error\">\n          <app-icon name=\"matDeleteRound\"></app-icon>\n        </span>\n        Eliminar habitaci√≥n\n      </button>\n    </div>\n  </p-overlayPanel>\n</div>\n<p-confirmDialog></p-confirmDialog>\n"
    },
    {
      "name": "RoomItemComponent",
      "id": "component-RoomItemComponent-f4c2e55173845e1a1cae484ef5c08aa4a791a062b4e3c312abbc491868493b8ca3922ef8f05056533bb8897f61a1f7d7ef84716ba68ee1d11f5d3f69d7bcc92d",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-item/room-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-room-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./room-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "room",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "RoomEntity | null",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity | null",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "actualHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelEntity | null>",
          "optional": false,
          "description": "",
          "line": 32
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CardModule",
          "type": "module"
        },
        {
          "name": "HotelConfigurationComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "PrimeTemplate"
        },
        {
          "name": "TagModule",
          "type": "module"
        },
        {
          "name": "RoomHotelConfigurationComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { CardModule } from 'primeng/card';\nimport { HotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { PrimeTemplate } from 'primeng/api';\nimport { TagModule } from 'primeng/tag';\nimport { RoomHotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-hotel-configuration/room-hotel-configuration.component';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { HotelState } from '@/app/presenter/state/hotels';\n\n@Component({\n  selector: 'app-room-item',\n  standalone: true,\n  imports: [\n    CardModule,\n    HotelConfigurationComponent,\n    IconComponent,\n    PrimeTemplate,\n    TagModule,\n    RoomHotelConfigurationComponent,\n  ],\n  templateUrl: './room-item.component.html',\n  styleUrl: './room-item.component.scss',\n})\nexport class RoomItemComponent implements OnInit {\n  @Input() room: RoomEntity | null = null;\n\n  actualHotel: HotelEntity | null = null;\n  actualHotel$: Observable<HotelEntity | null>;\n\n  constructor(private store: Store) {\n    this.actualHotel$ = this.store.select(HotelState.getActualHotel);\n  }\n\n  ngOnInit() {\n    this.actualHotel$.subscribe(actualHotel => {\n      this.actualHotel = actualHotel;\n    });\n  }\n}\n",
      "styleUrl": "./room-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 32,
        "jsdoctags": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"room-hotel-item\">\n  <div class=\"room-item-body\">\n    <img\n      alt=\"Hotel Alto\"\n      class=\"room-item__image\"\n      src=\"https://static01.nyt.com/images/2019/03/24/travel/24trending-shophotels1/24trending-shophotels1-superJumbo.jpg\" />\n\n    <div class=\"room-item-body__info\">\n      <div class=\"room-item-body__pre-header\">\n        <p-tag\n          [severity]=\"room?.isAvailable ? 'success' : 'secondary'\"\n          [value]=\"room?.isAvailable ? 'Disponible' : 'No disponible'\" />\n        <div class=\"room-item-body__pre-header__settings\">\n          <app-room-hotel-configuration\n            [actualHotel]=\"actualHotel\"\n            [room]=\"room\"></app-room-hotel-configuration>\n        </div>\n      </div>\n\n      <h3 class=\"hotel-item-body__title-room\">\n        {{ room?.type }}\n      </h3>\n      <p class=\"hotel-item-body__description-room text-body-sm\">\n        {{ room?.description }}\n      </p>\n      <div class=\"mt-2 flex flex-col\">\n        <span class=\"text-caption-lg\">\n          <app-icon\n            name=\"matPeopleOutlineRound\"\n            size=\"1.2rem\"\n            class=\"mr-2\"></app-icon>\n          {{ room?.capacity }}\n        </span>\n        <span class=\"text-caption-lg\">\n          <app-icon\n            name=\"matLocationOnRound\"\n            size=\"1.2rem\"\n            class=\"mr-2\"></app-icon>\n          {{ room?.roomNumber }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "RoomsListToReverseComponent",
      "id": "component-RoomsListToReverseComponent-511e04cd8b567089743273c3602a13d0a74f5a60314d23444e571efe0a9a88bad3b57d51477668ba0f187f477615254d283497b66e772b534e33611ec0821acb",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/rooms-list-to-reverse/rooms-list-to-reverse.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MessageService",
          "type": "injectable"
        }
      ],
      "selector": "app-rooms-list-to-reverse",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./rooms-list-to-reverse.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "dynamicGenerateReservationDialogRef",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 37,
          "type": "DynamicDialogRef",
          "decorators": []
        },
        {
          "required": true,
          "name": "room",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 35,
          "type": "RoomEntity",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualSearchHotelsFilter",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "actualSearchHotelsFilter$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelFilterModel | null>",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "actualUserSession",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Session | null",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [125]
        },
        {
          "name": "refAddGuestToRoomReservation",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openAddGuestsToRoomReservationModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "RoomHotelConfigurationComponent",
          "type": "component"
        },
        {
          "name": "TagModule",
          "type": "module"
        },
        {
          "name": "ButtonDirective",
          "type": "directive"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ToastModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { RoomHotelConfigurationComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-hotel-configuration/room-hotel-configuration.component';\nimport { TagModule } from 'primeng/tag';\nimport { RoomEntity } from '@/app/domain/entities/room.entity';\nimport { ButtonDirective } from 'primeng/button';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { AddGuestsToRoomReservationComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/add-guests-to-room-reservation/add-guests-to-room-reservation.component';\nimport { MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { Store } from '@ngxs/store';\nimport { HotelFilterModel } from '@/app/presenter/models/form/hotel-filter.model';\nimport { Observable } from 'rxjs';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { Session } from '@supabase/supabase-js';\n\n@Component({\n  selector: 'app-rooms-list-to-reverse',\n  standalone: true,\n  imports: [\n    IconComponent,\n    RoomHotelConfigurationComponent,\n    TagModule,\n    ButtonDirective,\n    ButtonComponent,\n    ToastModule,\n  ],\n  templateUrl: './rooms-list-to-reverse.component.html',\n  styleUrl: './rooms-list-to-reverse.component.scss',\n  providers: [MessageService],\n})\nexport class RoomsListToReverseComponent implements OnInit {\n  @Input({ required: true }) room!: RoomEntity;\n  @Input({ required: true })\n  dynamicGenerateReservationDialogRef!: DynamicDialogRef;\n  actualUserSession: Session | null;\n\n  refAddGuestToRoomReservation: DynamicDialogRef | undefined;\n\n  actualSearchHotelsFilter$!: Observable<HotelFilterModel | null>;\n  actualSearchHotelsFilter!: HotelFilterModel | null;\n\n  constructor(\n    public dialogService: DialogService,\n    private messageService: MessageService,\n    private store: Store,\n    private userSession: SessionUserService\n  ) {\n    this.actualUserSession = this.userSession.getUserSession();\n    this.actualSearchHotelsFilter$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n  }\n\n  ngOnInit() {\n    this.actualSearchHotelsFilter$.subscribe(dataSearchHotel => {\n      this.actualSearchHotelsFilter = dataSearchHotel;\n    });\n  }\n\n  openAddGuestsToRoomReservationModal() {\n    this.refAddGuestToRoomReservation = this.dialogService.open(\n      AddGuestsToRoomReservationComponent,\n      {\n        header: 'Completar reservaci√≥n',\n        width: '50rem',\n        data: {\n          room: this.room,\n        },\n      }\n    );\n    this.refAddGuestToRoomReservation.onClose.subscribe(\n      (data: { success: boolean }) => {\n        if (data?.success) {\n          console.log('xxaaa2');\n          this.dynamicGenerateReservationDialogRef.close({\n            success: true,\n          });\n        } else {\n          this.dynamicGenerateReservationDialogRef.close({});\n        }\n      }\n    );\n  }\n}\n",
      "styleUrl": "./rooms-list-to-reverse.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "userSession",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 43,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "userSession",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"room-to-reserve-item\">\n  <div class=\"room-to-reserve-item-body\">\n    <img\n      alt=\"Hotel Alto\"\n      class=\"room-to-reserve-item__image\"\n      src=\"https://static01.nyt.com/images/2019/03/24/travel/24trending-shophotels1/24trending-shophotels1-superJumbo.jpg\" />\n\n    <div class=\"room-to-reserve-item-body__info\">\n      <h3 class=\"room-to-reserve-item-body__title-room\">\n        {{ room?.type }}\n      </h3>\n      <div class=\"mt-2 flex flex-col gap-2\">\n        <span class=\"text-caption-lg\">\n          <app-icon\n            name=\"matPeopleOutlineRound\"\n            size=\"1.2rem\"\n            class=\"mr-2\"></app-icon>\n          {{ room?.capacity }}\n          {{ room.capacity === 1 ? 'persona' : 'personas' }}\n        </span>\n        <span class=\"text-caption-lg\">\n          <app-icon\n            name=\"matLocationOnRound\"\n            size=\"1.2rem\"\n            class=\"mr-2\"></app-icon>\n          {{ room?.roomNumber }}\n        </span>\n        <span class=\"text-caption-lg\">\n          <app-icon\n            name=\"matAttachMoneyRound\"\n            size=\"1.2rem\"\n            class=\"mr-2\"></app-icon>\n          {{ (room?.basePrice ?? 0) + (room?.taxes ?? 0) }} COP\n        </span>\n      </div>\n      <div class=\"mt-4\">\n        @if (\n          actualUserSession &&\n          actualSearchHotelsFilter?.dateArrive &&\n          actualSearchHotelsFilter?.dateCheckout\n        ) {\n          <app-button\n            class=\"generate_reservation__button\"\n            size=\"small\"\n            (click)=\"openAddGuestsToRoomReservationModal()\"\n            >Elegir habitaci√≥n\n          </app-button>\n        }\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "SearchFilterHotelComponentComponent",
      "id": "component-SearchFilterHotelComponentComponent-45b3611f067cb5f1396226b3cd55439266119f12b4942884993a333edeb91ca6e945f932614d9eef652c01adc6699ebf23f714d24f198d4bd85851304639bdda",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/search-filter-hotel-component/search-filter-hotel-component.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-search-filter-hotel-component",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./search-filter-hotel-component.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualSearchHotel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelFilterModel | null",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "actualSearchHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelFilterModel | null>",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "actualSearchHotelSubscribe",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "cities",
          "defaultValue": "cities",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 125,
          "modifierKind": [124, 148]
        },
        {
          "name": "minDateCalendar",
          "defaultValue": "new Date()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "searchHotelsForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<HotelFilterForm>",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "searchHotelsByFilters",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ButtonDirective",
          "type": "directive"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "DropdownModule",
          "type": "module"
        },
        {
          "name": "CalendarModule",
          "type": "module"
        },
        {
          "name": "InputNumberModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "IncrementDecrementValueComponent",
          "type": "component"
        },
        {
          "name": "MessageModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { ButtonDirective } from 'primeng/button';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { CalendarModule } from 'primeng/calendar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport {\n  HotelFilterForm,\n  HotelFilterModel,\n} from '@/app/presenter/models/form/hotel-filter.model';\nimport { cities } from '@/app/presenter/views/shared/constants/cities';\nimport { IncrementDecrementValueComponent } from '@/app/presenter/views/shared/components/common/atoms/increment-decrement-value/increment-decrement-value.component';\nimport { Store } from '@ngxs/store';\nimport { AddActualSearchHotel } from '@/app/presenter/state/searchHotelsFilter/actions';\nimport { convertEuropeFormatDateToISO8601 } from '@/app/presenter/views/shared/helpers/convertEuropeFormatDateToISO8601';\nimport { MessageModule } from 'primeng/message';\nimport { SearchHotelsFilterState } from '@/app/presenter/state/searchHotelsFilter';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-search-filter-hotel-component',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    ButtonDirective,\n    IconComponent,\n    DropdownModule,\n    CalendarModule,\n    InputNumberModule,\n    ReactiveFormsModule,\n    IncrementDecrementValueComponent,\n    MessageModule,\n  ],\n  templateUrl: './search-filter-hotel-component.component.html',\n  styleUrl: './search-filter-hotel-component.component.scss',\n})\nexport class SearchFilterHotelComponentComponent implements OnInit, OnDestroy {\n  searchHotelsForm: FormGroup<HotelFilterForm>;\n\n  actualSearchHotel$!: Observable<HotelFilterModel | null>;\n  actualSearchHotel!: HotelFilterModel | null;\n  actualSearchHotelSubscribe!: Subscription;\n\n  minDateCalendar = new Date();\n\n  constructor(private store: Store) {\n    this.searchHotelsForm = new FormGroup<HotelFilterForm>({\n      city: new FormControl(null, []),\n      dateArrive: new FormControl(null, []),\n      dateCheckout: new FormControl(null, []),\n      numGuests: new FormControl(1, []),\n    });\n    this.actualSearchHotel$ = this.store.select(\n      SearchHotelsFilterState.getActualSearchHotelFilter\n    );\n  }\n\n  ngOnInit() {\n    this.actualSearchHotelSubscribe = this.actualSearchHotel$.subscribe(\n      actualSearchHotel => {\n        this.actualSearchHotel = actualSearchHotel;\n      }\n    );\n    this.store.dispatch(\n      new AddActualSearchHotel({\n        city: null,\n        dateArrive: null,\n        dateCheckout: null,\n        numGuests: 0,\n      })\n    );\n  }\n\n  searchHotelsByFilters() {\n    const valuesSearchHotelsForm = this.searchHotelsForm\n      .value as HotelFilterModel;\n\n    /** If date of arrival exist and date of checkout doesnt exit, then date of checkout is equal to date of arrival plus 1 day */\n    if (\n      this.searchHotelsForm.controls.dateArrive.value &&\n      !this.searchHotelsForm.controls.dateCheckout.value\n    ) {\n      let dataCheckout = new Date(\n        this.searchHotelsForm.controls.dateArrive.value\n      );\n      dataCheckout.setDate(dataCheckout.getDate() + 1);\n      this.searchHotelsForm.controls.dateCheckout.setValue(dataCheckout);\n    }\n\n    /** If date of arrival doesnt exit and date of checkout exist, then date of arrival is equal to date of checkout minus 1 day */\n    if (\n      this.searchHotelsForm.controls.dateCheckout.value &&\n      !this.searchHotelsForm.controls.dateArrive.value\n    ) {\n      let dataArrive = new Date(\n        this.searchHotelsForm.controls.dateCheckout.value\n      );\n      dataArrive.setDate(dataArrive.getDate() - 1);\n      this.searchHotelsForm.controls.dateArrive.setValue(dataArrive);\n    }\n\n    this.store.dispatch(\n      new AddActualSearchHotel({\n        ...valuesSearchHotelsForm,\n        city: this.searchHotelsForm.controls.city.value?.name ?? null,\n        dateArrive: this.searchHotelsForm.controls.dateArrive.value\n          ? convertEuropeFormatDateToISO8601(\n              this.searchHotelsForm.controls.dateArrive.value\n            )\n          : null,\n        dateCheckout: this.searchHotelsForm.controls.dateCheckout.value\n          ? convertEuropeFormatDateToISO8601(\n              this.searchHotelsForm.controls.dateCheckout.value\n            )\n          : null,\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.actualSearchHotelSubscribe?.unsubscribe();\n  }\n  protected readonly cities = cities;\n}\n",
      "styleUrl": "./search-filter-hotel-component.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 46,
        "jsdoctags": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div>\n  <div class=\"search-filter-container\">\n    <div class=\"flex-1 w-full\">\n      <p-dropdown\n        class=\"city-dropdown\"\n        [options]=\"cities\"\n        optionLabel=\"name\"\n        [filter]=\"true\"\n        filterBy=\"name\"\n        [showClear]=\"true\"\n        [formControl]=\"searchHotelsForm.controls.city\"\n        placeholder=\"Ciudad\" />\n    </div>\n    <div class=\"flex-1 w-full min-w-[8rem]\">\n      <p-calendar\n        clear=\"sss\"\n        [showButtonBar]=\"true\"\n        class=\"date-arrive\"\n        [minDate]=\"minDateCalendar\"\n        placeholder=\"Fecha de llegada\"\n        [formControl]=\"searchHotelsForm.controls.dateArrive\" />\n    </div>\n    <div class=\"flex-1 w-full min-w-[8rem]\">\n      <p-calendar\n        [showButtonBar]=\"true\"\n        class=\"date-checkout\"\n        [minDate]=\"minDateCalendar\"\n        placeholder=\"Fecha de partida\"\n        [formControl]=\"searchHotelsForm.controls.dateCheckout\" />\n    </div>\n    <div class=\"flex-1 w-full min-w-[8rem]\">\n      <app-increment-decrement\n        [label]=\"\n          (searchHotelsForm.controls.numGuests.value || 0) === 1\n            ? 'Huesped'\n            : 'Huespedes'\n        \"\n        [min]=\"1\"\n        [max]=\"12\"\n        [control]=\"\n          searchHotelsForm.controls.numGuests\n        \"></app-increment-decrement>\n    </div>\n    <button\n      pButton\n      class=\"search-filter__button\"\n      type=\"submit\"\n      (click)=\"searchHotelsByFilters()\">\n      <app-icon name=\"matSearchRound\"></app-icon>\n      Buscar\n    </button>\n  </div>\n  <div class=\"mt-2\">\n    @if (\n      !searchHotelsForm.controls.dateArrive.value &&\n      !searchHotelsForm.controls.dateCheckout.value\n    ) {\n      <p-message\n        severity=\"info\"\n        text=\"Debe escoger una fecha de llegada y salida para poder reservar una habitaci√≥n\"></p-message>\n    }\n  </div>\n</div>\n"
    },
    {
      "name": "SidebarRoomsHotelComponent",
      "id": "component-SidebarRoomsHotelComponent-69c3f4b7a9235a56197a0393c42930fd0d8083ea9d60ffa68fee34dd4dee4da2ba37df2c41a0d59b93b2a16fdd7deda2775c631698c2525444eacce116fb3cf9",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/sidebar-rooms-hotel/sidebar-rooms-hotel.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-sidebar-rooms-hotel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./sidebar-rooms-hotel.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualHotel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HotelEntity | null",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "actualHotel$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<HotelEntity | null>",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "actualHotelSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [125]
        },
        {
          "name": "isVisible",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "refCreateRoomModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [
        {
          "name": "hideRoomSidebar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openCreateRoomModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "NgIcon"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "SidebarModule",
          "type": "module"
        },
        {
          "name": "ListRoomsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { NgIcon } from '@ng-icons/core';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { RemoveActualHotel } from '@/app/presenter/state/hotels/actions';\nimport { Store } from '@ngxs/store';\nimport { HotelState } from '@/app/presenter/state/hotels';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotelEntity } from '@/app/domain/entities/hotel.entity';\nimport { ListRoomsComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/list-rooms.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CreateRoomDialogComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/create-room-dialog/create-room-dialog.component';\n\n@Component({\n  selector: 'app-sidebar-rooms-hotel',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    NgIcon,\n    IconComponent,\n    SidebarModule,\n    ListRoomsComponent,\n  ],\n  templateUrl: './sidebar-rooms-hotel.component.html',\n  styleUrl: './sidebar-rooms-hotel.component.scss',\n})\nexport class SidebarRoomsHotelComponent implements OnInit, OnDestroy {\n  actualHotel: HotelEntity | null = null;\n  actualHotel$: Observable<HotelEntity | null>;\n  actualHotelSubscription!: Subscription;\n\n  refCreateRoomModal: DynamicDialogRef | undefined;\n  isVisible = false;\n\n  constructor(\n    private store: Store,\n    public dialogService: DialogService\n  ) {\n    this.actualHotel$ = this.store.select(HotelState.getActualHotel);\n  }\n\n  ngOnInit() {\n    this.actualHotel$.subscribe(actualHotel => {\n      if (actualHotel) {\n        this.actualHotel = actualHotel;\n        this.isVisible = true;\n      } else {\n        this.isVisible = false;\n      }\n    });\n  }\n  hideRoomSidebar() {\n    this.store.dispatch(new RemoveActualHotel());\n  }\n\n  ngOnDestroy() {\n    this.actualHotelSubscription?.unsubscribe();\n  }\n\n  openCreateRoomModal() {\n    this.refCreateRoomModal = this.dialogService.open(\n      CreateRoomDialogComponent,\n      {\n        header: 'Crear habitaci√≥n',\n        width: '50rem',\n        focusOnShow: false,\n        data: {\n          hotel: this.actualHotel,\n        },\n      }\n    );\n  }\n}\n",
      "styleUrl": "./sidebar-rooms-hotel.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 34,
        "jsdoctags": [
          {
            "name": "store",
            "type": "Store",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "@if (isVisible) {\n  <p-sidebar\n    [(visible)]=\"isVisible\"\n    position=\"right\"\n    styleClass=\"w-[90%] md:w-[40rem]\"\n    (onHide)=\"hideRoomSidebar()\">\n    <ng-template pTemplate=\"header\">\n      <h3 class=\"text-headline-md font-bold\">\n        Habitaciones del hotel {{ actualHotel?.name }}\n      </h3>\n    </ng-template>\n    <div class=\"rooms-sidebar-container\">\n      <div>\n        <app-button\n          text=\"Crear nueva habitaci√≥n\"\n          size=\"small\"\n          (click)=\"openCreateRoomModal()\">\n          <app-icon name=\"matAddHomeWorkRound\" class=\"mr-2\"></app-icon>\n        </app-button>\n      </div>\n      <app-list-rooms></app-list-rooms>\n    </div>\n  </p-sidebar>\n}\n"
    },
    {
      "name": "TravelAgenterAuthenticationFormComponent",
      "id": "component-TravelAgenterAuthenticationFormComponent-73b8b45d3f1ad10302e9816ace9aa8651ea0fa4a5e76ac30b1df36cfd04c6e46b0347c6d833385177ca92d19c4a74d3fb8c9133b4469304c9d6bcd57312ebad7",
      "file": "src/app/presenter/views/shared/components/common/organisms/auth/travel-agenter-authentication-form/travel-agenter-authentication-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-travel-agenter-authentication-form",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./travel-agenter-authentication-form.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "closeAuthenticationDialog",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 37,
          "type": "function",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actualUser",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "UserProfileResponse | null",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "authSupabaseService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "IAuthUserSession",
          "optional": false,
          "description": "",
          "line": 47,
          "modifierKind": [125]
        },
        {
          "name": "messageErrorAuthTravelAgent",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "travelAgentAuthForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<LoginUserForm>",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [
        {
          "name": "getProfile",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "loginUserWithEmailAndPassword",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "Button"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        },
        {
          "name": "MessageModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { LoginUserForm } from '@/app/presenter/models/form/auth-users.model';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { Button } from 'primeng/button';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { LoginUserRequestDTO } from '@/app/core/models/dtos/auth';\nimport { SimpleUserLoginUseCaseService } from '@/app/domain/usecases/user/simple-user-login-use-case-service';\nimport { MessageModule } from 'primeng/message';\nimport { Router } from '@angular/router';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport { UserProfileResponse } from '@/app/core/models/auth';\n\n@Component({\n  selector: 'app-travel-agenter-authentication-form',\n  standalone: true,\n  imports: [\n    FloatLabelModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    ButtonComponent,\n    Button,\n    ErrorsFormMessagesComponent,\n    MessageModule,\n  ],\n  templateUrl: './travel-agenter-authentication-form.component.html',\n  styleUrl: './travel-agenter-authentication-form.component.scss',\n})\nexport class TravelAgenterAuthenticationFormComponent implements OnInit {\n  @Input({ required: true }) closeAuthenticationDialog!: () => void;\n\n  travelAgentAuthForm: FormGroup<LoginUserForm>;\n  actualUser: UserProfileResponse | null = null;\n\n  messageErrorAuthTravelAgent: string | null = null;\n\n  constructor(\n    private loginSimpleAccountUserUseCaseService: SimpleUserLoginUseCaseService,\n    private router: Router,\n    public authSupabaseService: IAuthUserSession\n  ) {\n    this.travelAgentAuthForm = new FormGroup<LoginUserForm>({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    void this.getProfile();\n  }\n\n  async getProfile() {\n    try {\n      this.actualUser = await this.authSupabaseService.getUser();\n    } catch {\n      this.actualUser = null;\n    }\n  }\n\n  async loginUserWithEmailAndPassword() {\n    if (this.travelAgentAuthForm.invalid) {\n      this.travelAgentAuthForm.markAllAsTouched();\n      return;\n    }\n    try {\n      const userDataLogin = this.travelAgentAuthForm.value;\n\n      const userTravelAgentDataLoginDTO: LoginUserRequestDTO = {\n        email: userDataLogin.email!,\n        password: userDataLogin.password!,\n      };\n\n      const { data, error } =\n        await this.loginSimpleAccountUserUseCaseService.execute(\n          userTravelAgentDataLoginDTO\n        );\n\n      if (error) {\n        this.messageErrorAuthTravelAgent =\n          'Credenciales incorrectas, intenta de nuevo';\n      }\n\n      if (data.user) {\n        this.closeAuthenticationDialog();\n        await this.router.navigate(['/travel-agent']);\n      }\n    } catch {\n      this.messageErrorAuthTravelAgent =\n        'Ha ocurrido un error al iniciar sesi√≥n, intenta de nuevo';\n    }\n  }\n}\n",
      "styleUrl": "./travel-agenter-authentication-form.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "loginSimpleAccountUserUseCaseService",
            "type": "SimpleUserLoginUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "authSupabaseService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 42,
        "jsdoctags": [
          {
            "name": "loginSimpleAccountUserUseCaseService",
            "type": "SimpleUserLoginUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authSupabaseService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<form class=\"travel-agent-authentication-form\">\n  <div class=\"w-full\">\n    <p-floatLabel class=\"w-full\">\n      <input\n        id=\"email\"\n        type=\"email\"\n        pInputText\n        class=\"w-full\"\n        [formControl]=\"travelAgentAuthForm.controls.email\" />\n      <label for=\"email\">Correo</label>\n    </p-floatLabel>\n    <app-errors-form-messages\n      [control]=\"travelAgentAuthForm.controls.email\"\n      displayName=\"El correo\"></app-errors-form-messages>\n  </div>\n  <div class=\"w-full\">\n    <p-floatLabel class=\"w-full\">\n      <input\n        id=\"password\"\n        type=\"password\"\n        pInputText\n        class=\"w-full\"\n        autocomplete=\"current-password\"\n        [formControl]=\"travelAgentAuthForm.controls.password\" />\n      <label for=\"password\">Contrase√±a</label>\n    </p-floatLabel>\n    <app-errors-form-messages\n      [control]=\"travelAgentAuthForm.controls.password\"\n      displayName=\"La contrase√±a\"></app-errors-form-messages>\n  </div>\n\n  @if (messageErrorAuthTravelAgent) {\n    <p-message\n      severity=\"error\"\n      [text]=\"messageErrorAuthTravelAgent\"></p-message>\n  }\n\n  <app-button\n    text=\"Ingresar a mi cuenta\"\n    (click)=\"loginUserWithEmailAndPassword()\"></app-button>\n</form>\n"
    },
    {
      "name": "TravelAgentLayoutComponent",
      "id": "component-TravelAgentLayoutComponent-3060affb6abe73dd0a5ead14eb3a1ab7ab2c47264932b8ff069d8144dfed8747c845e2fadc17a04eb60199e3d0e62b1882e02066ee13a107822e7f8fb13d7e91",
      "file": "src/app/presenter/views/shared/layouts/travel-agent-layout/travel-agent-layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-travel-agent-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./travel-agent-layout.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterOutlet"
        },
        {
          "name": "MainFooterComponent",
          "type": "component"
        },
        {
          "name": "MainHeaderComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MainFooterComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-footer/main-footer.component';\nimport { MainHeaderComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-header/main-header.component';\n\n@Component({\n  selector: 'app-travel-agent-layout',\n  standalone: true,\n  imports: [RouterOutlet, MainFooterComponent, MainHeaderComponent],\n  templateUrl: './travel-agent-layout.component.html',\n  styleUrl: './travel-agent-layout.component.scss',\n})\nexport class TravelAgentLayoutComponent {}\n",
      "styleUrl": "./travel-agent-layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"travel-agent-layout\">\n  <div class=\"travel-agent-workspace\">\n    <router-outlet></router-outlet>\n  </div>\n  <div>\n    <app-main-footer class=\"main-footer-container\"></app-main-footer>\n  </div>\n</div>\n"
    },
    {
      "name": "TravelAgentPageComponent",
      "id": "component-TravelAgentPageComponent-3546b4ef0c78da2a4ba23d8053475baefde09d4c3cf56146e467aa70e3645cd95e8cd006a180c1aaa09e0519785a4a82d8143459b70b339a4a92a6701d2989bb",
      "file": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/travel-agent-page.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-travel-agent-home-page",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./travel-agent-page.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "TabViewModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ManageHotelsViewComponent",
          "type": "component"
        },
        {
          "name": "HotelsBookingByAgentViewComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { TabViewModule } from 'primeng/tabview';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ManageHotelsViewComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/manage-hotels-view.component';\nimport { HotelsBookingByAgentViewComponent } from '@/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/hotels-booking-by-agent-view.component';\n\n@Component({\n  selector: 'app-travel-agent-home-page',\n  standalone: true,\n  imports: [\n    TabViewModule,\n    IconComponent,\n    ManageHotelsViewComponent,\n    HotelsBookingByAgentViewComponent,\n  ],\n  templateUrl: './travel-agent-page.component.html',\n  styleUrl: './travel-agent-page.component.scss',\n})\nexport class TravelAgentPageComponent {}\n",
      "styleUrl": "./travel-agent-page.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"w-full\">\n  <p-tabView styleClass=\"tabview-custom\">\n    <p-tabPanel>\n      <ng-template pTemplate=\"header\">\n        <div class=\"flex align-items-center gap-2\">\n          <app-icon name=\"matBorderColorRound\"></app-icon>\n          <span class=\"font-bold white-space-nowrap m-0\">\n            Gestionar hoteles\n          </span>\n        </div>\n      </ng-template>\n      <app-manage-hotels-view></app-manage-hotels-view>\n    </p-tabPanel>\n    <p-tabPanel header=\"Header II\">\n      <ng-template pTemplate=\"header\">\n        <div class=\"flex align-items-center gap-2\">\n          <app-icon name=\"matFormatListBulletedRound\"></app-icon>\n          <span class=\"font-bold white-space-nowrap m-0\"> Reservaciones </span>\n        </div>\n      </ng-template>\n      <app-hotel-booking-by-agent-view></app-hotel-booking-by-agent-view>\n    </p-tabPanel>\n  </p-tabView>\n</div>\n"
    },
    {
      "name": "TravellerAuthenticationFormComponent",
      "id": "component-TravellerAuthenticationFormComponent-0abaeeede7966f3402cda0a3109e3bcdbfe4f27b026c34b8df87aeff3361d052c7b5a10601ba94e367767f05621e92b71b803e27158e34f558bf15d51be64df3",
      "file": "src/app/presenter/views/shared/components/common/organisms/auth/traveller-authentication-form/traveller-authentication-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "DialogService",
          "type": "injectable"
        }
      ],
      "selector": "app-traveller-authentication-form",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./traveller-authentication-form.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "closeAuthenticationDialog",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 39,
          "type": "function",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dialogService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DialogService",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [125]
        },
        {
          "name": "messageErrorAuthUser",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | null",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "refAuthenticationModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "travellerAuthForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<LoginUserForm>",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [
        {
          "name": "loginUserWithEmailAndPassword",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 62,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "loginUserWithGoogle",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "openRegisterModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "GoogleAuthButtonComponent",
          "type": "component"
        },
        {
          "name": "MessageModule",
          "type": "module"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { LoginUserForm } from '@/app/presenter/models/form/auth-users.model';\nimport { GoogleAuthButtonComponent } from '@/app/presenter/views/shared/components/common/atoms/google-auth-button/google-auth-button.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { TravellerRegisterFormComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/traveller-register-form/traveller-register-form.component';\nimport { OauthProviders } from '@/app/core/constants/OauthProviders';\nimport { LoginUserRequestDTO } from '@/app/core/models/dtos/auth';\nimport { SimpleUserLoginUseCaseService } from '@/app/domain/usecases/user/simple-user-login-use-case-service';\nimport { AuthenticateUserOAuthService } from '@/app/domain/usecases/user/authenticate-user-oauth.service';\nimport { MessageModule } from 'primeng/message';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\n\n@Component({\n  selector: 'app-traveller-authentication-form',\n  standalone: true,\n  imports: [\n    FloatLabelModule,\n    InputTextModule,\n    ButtonComponent,\n    ReactiveFormsModule,\n    GoogleAuthButtonComponent,\n    MessageModule,\n    ErrorsFormMessagesComponent,\n  ],\n  templateUrl: './traveller-authentication-form.component.html',\n  styleUrl: './traveller-authentication-form.component.scss',\n  providers: [DialogService],\n})\nexport class TravellerAuthenticationFormComponent {\n  @Input({ required: true }) closeAuthenticationDialog!: () => void;\n\n  travellerAuthForm: FormGroup<LoginUserForm>;\n  refAuthenticationModal: DynamicDialogRef | undefined;\n  messageErrorAuthUser: string | null = null;\n\n  constructor(\n    public dialogService: DialogService,\n    private oAuthUserUseCaseService: AuthenticateUserOAuthService,\n    private loginSimpleAccountUserUseCaseService: SimpleUserLoginUseCaseService\n  ) {\n    this.travellerAuthForm = new FormGroup<LoginUserForm>({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  async loginUserWithGoogle() {\n    await this.oAuthUserUseCaseService.execute({\n      provider: OauthProviders.GOOGLE,\n    });\n  }\n\n  async loginUserWithEmailAndPassword() {\n    if (this.travellerAuthForm.invalid) {\n      this.travellerAuthForm.markAllAsTouched();\n      return;\n    }\n    try {\n      const userDataLogin = this.travellerAuthForm.value;\n\n      const userTravellerDataLoginDTO: LoginUserRequestDTO = {\n        email: userDataLogin.email ?? '',\n        password: userDataLogin.password ?? '',\n      };\n\n      const { data, error } =\n        await this.loginSimpleAccountUserUseCaseService.execute(\n          userTravellerDataLoginDTO\n        );\n\n      if (error) {\n        this.messageErrorAuthUser =\n          'Credenciales incorrectas, intenta de nuevo';\n      }\n\n      if (data.user) {\n        this.closeAuthenticationDialog();\n      }\n    } catch {\n      this.messageErrorAuthUser =\n        'Ha ocurrido un error al iniciar sesi√≥n, intenta de nuevo';\n    }\n  }\n\n  openRegisterModal() {\n    this.closeAuthenticationDialog();\n\n    this.refAuthenticationModal = this.dialogService.open(\n      TravellerRegisterFormComponent,\n      {\n        width: 'auto',\n        modal: true,\n        closable: true,\n      }\n    );\n  }\n}\n",
      "styleUrl": "./traveller-authentication-form.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "oAuthUserUseCaseService",
            "type": "AuthenticateUserOAuthService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "loginSimpleAccountUserUseCaseService",
            "type": "SimpleUserLoginUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 43,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "oAuthUserUseCaseService",
            "type": "AuthenticateUserOAuthService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "loginSimpleAccountUserUseCaseService",
            "type": "SimpleUserLoginUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div>\n  <div class=\"oauth-container\">\n    <div class=\"w-full\">\n      <app-google-auth-button\n        (clickButton)=\"loginUserWithGoogle()\"\n        description=\"Ingresar con tu cuenta de Google\"></app-google-auth-button>\n    </div>\n    <div class=\"w-full flex items-center gap-2\">\n      <div class=\"separator-oauth\"></div>\n      <span class=\"inline-block w-[5%] text-center\"><i>o</i></span>\n      <div class=\"separator-oauth\"></div>\n    </div>\n  </div>\n  <form class=\"traveller-authentication-form\">\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"email\"\n          type=\"email\"\n          pInputText\n          class=\"w-full\"\n          [formControl]=\"travellerAuthForm.controls.email\" />\n        <label for=\"email\">Correo</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"travellerAuthForm.controls.email\"\n        displayName=\"El correo\"></app-errors-form-messages>\n    </div>\n    <div class=\"w-full\">\n      <p-floatLabel class=\"w-full\">\n        <input\n          id=\"password\"\n          type=\"password\"\n          pInputText\n          class=\"w-full\"\n          autocomplete=\"current-password\"\n          [formControl]=\"travellerAuthForm.controls.password\" />\n        <label for=\"password\">Contrase√±a</label>\n      </p-floatLabel>\n      <app-errors-form-messages\n        [control]=\"travellerAuthForm.controls.password\"\n        displayName=\"La contrase√±a\"></app-errors-form-messages>\n    </div>\n\n    @if (messageErrorAuthUser) {\n      <p-message severity=\"error\" [text]=\"messageErrorAuthUser\"></p-message>\n    }\n\n    <app-button\n      text=\"Ingresar a mi cuenta\"\n      (click)=\"loginUserWithEmailAndPassword()\"></app-button>\n\n    <p>\n      No tengo cuenta.\n      <button\n        type=\"button\"\n        class=\"register-redirect-button\"\n        (click)=\"openRegisterModal()\">\n        Registrarme\n      </button>\n    </p>\n  </form>\n</div>\n"
    },
    {
      "name": "TravellerHomePageComponent",
      "id": "component-TravellerHomePageComponent-41ac9eaeb19b559fd085b4814e9b6289791f740c04abcffcd9fc3059acdd8353be8c62d2bd2af5c2af5a432032925ffdc22395fb594570e9e231c64cea4c676f",
      "file": "src/app/presenter/views/pages/traveller/traveller-home-page/traveller-home-page.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-traveller-home-page",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./traveller-home-page.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FilterHotelsComponent",
          "type": "component"
        },
        {
          "name": "MapHotelsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { FilterHotelsComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/filter-hotels.component';\nimport { MapHotelsComponent } from '@/app/presenter/views/pages/traveller/traveller-home-page/components/map-hotels/map-hotels.component';\n\n@Component({\n  selector: 'app-traveller-home-page',\n  standalone: true,\n  imports: [FilterHotelsComponent, MapHotelsComponent],\n  templateUrl: './traveller-home-page.component.html',\n  styleUrl: './traveller-home-page.component.scss',\n})\nexport class TravellerHomePageComponent {}\n",
      "styleUrl": "./traveller-home-page.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"traveller-homepage\">\n  <div class=\"filter-hotels-section\">\n    <app-filter-hotels></app-filter-hotels>\n  </div>\n  <div class=\"map-section-container\">\n    <app-map-hotels></app-map-hotels>\n  </div>\n</div>\n"
    },
    {
      "name": "TravellerLayoutComponent",
      "id": "component-TravellerLayoutComponent-861b17dda2ab513fffe9abcc09dc92d0e59470324860c5da0ae8b757b91b4040dcd513583e65d16129a258b2735b55d384f79ddfa820c4ef1535c9e45d15443f",
      "file": "src/app/presenter/views/shared/layouts/traveller-layout/traveller-layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-traveller-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./traveller-layout.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterOutlet"
        },
        {
          "name": "MainFooterComponent",
          "type": "component"
        },
        {
          "name": "MainHeaderComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MainFooterComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-footer/main-footer.component';\nimport { MainHeaderComponent } from '@/app/presenter/views/shared/components/common/organisms/layout/main-header/main-header.component';\n\n@Component({\n  selector: 'app-traveller-layout',\n  standalone: true,\n  imports: [RouterOutlet, MainFooterComponent, MainHeaderComponent],\n  templateUrl: './traveller-layout.component.html',\n  styleUrl: './traveller-layout.component.scss',\n})\nexport class TravellerLayoutComponent {}\n",
      "styleUrl": "./traveller-layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"traveller-layout\">\n  <div>\n    <router-outlet></router-outlet>\n  </div>\n  <div>\n    <app-main-footer class=\"main-footer-container\"></app-main-footer>\n  </div>\n</div>\n"
    },
    {
      "name": "TravellerRegisterFormComponent",
      "id": "component-TravellerRegisterFormComponent-8e54a7244e30fb327523a642f66e5eb9738cfb03df6ecf7b072bcdc417ee65cef8aac940769aeb739596b47fcc25f0e400444d537cbde1066d94618fbe9a6303",
      "file": "src/app/presenter/views/shared/components/common/organisms/auth/traveller-register-form/traveller-register-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "DialogService",
          "type": "injectable"
        }
      ],
      "selector": "app-traveller-register-form",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./traveller-register-form.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "refAuthenticationModal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DynamicDialogRef | undefined",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "travellerRegisterForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup<RegisterTravellerForm>",
          "optional": false,
          "description": "",
          "line": 51
        }
      ],
      "methodsClass": [
        {
          "name": "openLoginModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerUserEmailAndPassword",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "registerUserWithGoogle",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "FloatLabelModule",
          "type": "module"
        },
        {
          "name": "GoogleAuthButtonComponent",
          "type": "component"
        },
        {
          "name": "InputTextModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "ToggleButtonModule",
          "type": "module"
        },
        {
          "name": "TravelAgenterAuthenticationFormComponent",
          "type": "component"
        },
        {
          "name": "TravellerAuthenticationFormComponent",
          "type": "component"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "ErrorsFormMessagesComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\n\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { GoogleAuthButtonComponent } from '@/app/presenter/views/shared/components/common/atoms/google-auth-button/google-auth-button.component';\nimport { InputTextModule } from 'primeng/inputtext';\n\nimport { RegisterTravellerForm } from '@/app/presenter/models/form/auth-users.model';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { TravelAgenterAuthenticationFormComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/travel-agenter-authentication-form/travel-agenter-authentication-form.component';\nimport { TravellerAuthenticationFormComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/traveller-authentication-form/traveller-authentication-form.component';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { AuthenticationFormModalComponent } from '@/app/presenter/views/shared/components/common/organisms/auth/authentication-form-modal/authentication-form-modal.component';\nimport { AuthenticateUserOAuthService } from '@/app/domain/usecases/user/authenticate-user-oauth.service';\nimport { OauthProviders } from '@/app/core/constants/OauthProviders';\nimport { CreateSimpleAccountUserUseCaseService } from '@/app/domain/usecases/user/create-simple-account-user-use-case.service';\nimport { RegisterUserRequestDTO } from '@/app/core/models/dtos/auth';\nimport { ErrorsFormMessagesComponent } from '@/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component';\nimport { matchPasswords } from '@/app/presenter/views/shared/validators/matchPasswords';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-traveller-register-form',\n  standalone: true,\n  imports: [\n    ButtonComponent,\n    FloatLabelModule,\n    GoogleAuthButtonComponent,\n    InputTextModule,\n    ReactiveFormsModule,\n    IconComponent,\n    ToggleButtonModule,\n    TravelAgenterAuthenticationFormComponent,\n    TravellerAuthenticationFormComponent,\n    FormsModule,\n    ErrorsFormMessagesComponent,\n  ],\n  templateUrl: './traveller-register-form.component.html',\n  styleUrl: './traveller-register-form.component.scss',\n  providers: [DialogService],\n})\nexport class TravellerRegisterFormComponent {\n  travellerRegisterForm: FormGroup<RegisterTravellerForm>;\n\n  refAuthenticationModal: DynamicDialogRef | undefined;\n\n  constructor(\n    private dialogService: DialogService,\n    private refRegisterTraveller: DynamicDialogRef,\n    private oauthUserUseCaseService: AuthenticateUserOAuthService,\n    private createSimpleAccountUserUseCaseService: CreateSimpleAccountUserUseCaseService,\n    private messageToastService: MessageService\n  ) {\n    this.travellerRegisterForm = new FormGroup<RegisterTravellerForm>(\n      {\n        full_name: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n        email: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.email],\n        }),\n        password: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.minLength(6)],\n        }),\n        repeatPassword: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required],\n        }),\n      },\n      { validators: [matchPasswords('password', 'repeatPassword')] }\n    );\n  }\n\n  async registerUserWithGoogle() {\n    await this.oauthUserUseCaseService.execute({\n      provider: OauthProviders.GOOGLE,\n    });\n  }\n\n  async registerUserEmailAndPassword() {\n    if (this.travellerRegisterForm.invalid) {\n      this.travellerRegisterForm.markAllAsTouched();\n      return;\n    }\n    try {\n      const userDataRegister = this.travellerRegisterForm.value;\n\n      const userDataRegisterDTO: RegisterUserRequestDTO = {\n        email: userDataRegister.email ?? '',\n        password: userDataRegister.password ?? '',\n        full_name: userDataRegister.full_name ?? '',\n      };\n\n      const { data } =\n        await this.createSimpleAccountUserUseCaseService.execute(\n          userDataRegisterDTO\n        );\n\n      if (data.user) {\n        this.refRegisterTraveller.close();\n\n        this.messageToastService.add({\n          severity: 'success',\n          summary: 'Registro de usuario',\n          detail: 'Usuario registrado correctamente',\n        });\n      }\n    } catch (error) {\n      console.error('Ha ocurrido un error al registrar el usuario', error);\n    }\n  }\n\n  openLoginModal() {\n    this.refRegisterTraveller.close();\n\n    this.refAuthenticationModal = this.dialogService.open(\n      AuthenticationFormModalComponent,\n      {\n        width: 'auto',\n        modal: true,\n        closable: true,\n      }\n    );\n  }\n}\n",
      "styleUrl": "./traveller-register-form.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "refRegisterTraveller",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "oauthUserUseCaseService",
            "type": "AuthenticateUserOAuthService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "createSimpleAccountUserUseCaseService",
            "type": "CreateSimpleAccountUserUseCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "messageToastService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "dialogService",
            "type": "DialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "refRegisterTraveller",
            "type": "DynamicDialogRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "oauthUserUseCaseService",
            "type": "AuthenticateUserOAuthService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "createSimpleAccountUserUseCaseService",
            "type": "CreateSimpleAccountUserUseCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "messageToastService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div>\n  <section class=\"register-user\">\n    <div class=\"register-user__header\">\n      <img\n        class=\"main-brand__logo\"\n        src=\"/assets/img/main-logo-ultra-hotels-transparent.png\"\n        width=\"60px\"\n        height=\"60px\"\n        alt=\"Ultra Hotels logo\" />\n      <h2 class=\"register-user__header__title text-headline-lg\">\n        Crear Cuenta\n      </h2>\n    </div>\n    <div class=\"register-user__body\">\n      <div class=\"oauth-container\">\n        <div class=\"w-full\">\n          <app-google-auth-button\n            (clickButton)=\"registerUserWithGoogle()\"\n            description=\"Registrate con tu cuenta de Google\"></app-google-auth-button>\n        </div>\n        <div class=\"w-full flex items-center gap-2\">\n          <div class=\"separator-oauth\"></div>\n          <span class=\"inline-block w-[5%] text-center\"><i>o</i></span>\n          <div class=\"separator-oauth\"></div>\n        </div>\n      </div>\n      <form class=\"traveller-authentication-form\">\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"name\"\n              type=\"text\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"travellerRegisterForm.controls.full_name\" />\n            <label for=\"name\">Nombre completo</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"travellerRegisterForm.controls.full_name\"\n            displayName=\"La contrase√±a\"></app-errors-form-messages>\n        </div>\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"email\"\n              type=\"email\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"travellerRegisterForm.controls.email\" />\n            <label for=\"email\">Correo</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"travellerRegisterForm.controls.email\"\n            displayName=\"El correo\"></app-errors-form-messages>\n        </div>\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"password\"\n              type=\"password\"\n              pInputText\n              class=\"w-full\"\n              autocomplete=\"current-password\"\n              [formControl]=\"travellerRegisterForm.controls.password\" />\n            <label for=\"password\">Contrase√±a</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"travellerRegisterForm.controls.password\"\n            displayName=\"La contrase√±a\"></app-errors-form-messages>\n        </div>\n        <div class=\"w-full\">\n          <p-floatLabel class=\"w-full\">\n            <input\n              id=\"repeat-password\"\n              type=\"password\"\n              pInputText\n              class=\"w-full\"\n              [formControl]=\"travellerRegisterForm.controls.repeatPassword\" />\n            <label for=\"repeat-password\">Repetir Contrase√±a</label>\n          </p-floatLabel>\n          <app-errors-form-messages\n            [control]=\"travellerRegisterForm.controls.repeatPassword\"\n            displayName=\"La contrase√±a repetida\"></app-errors-form-messages>\n        </div>\n\n        <app-button\n          text=\"Crear mi cuenta\"\n          type=\"submit\"\n          (click)=\"registerUserEmailAndPassword()\"></app-button>\n\n        <p>\n          Ya tengo cuenta.\n          <button\n            type=\"button\"\n            class=\"register-redirect-button\"\n            (click)=\"openLoginModal()\">\n            Ingresar\n          </button>\n        </p>\n      </form>\n    </div>\n  </section>\n</div>\n"
    },
    {
      "name": "UserLoggedPanelComponent",
      "id": "component-UserLoggedPanelComponent-7a342d104926c29c6abf1eb5f5f1f495896378c0ea181ba0c828cd86678291a1ad8ab4b1c7466fb4428d14aced4e35fd95b888e3e650dc3b48fd09924f5021dd",
      "file": "src/app/presenter/views/shared/components/common/molecules/user-logged-panel/user-logged-panel.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-user-logged-panel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./user-logged-panel.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "authSupabaseService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "IAuthUserSession",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [125]
        },
        {
          "name": "sessionUser",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Session | null",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "sessionUserServiceService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SessionUserService",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [125]
        },
        {
          "name": "userData",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "UserProfileResponse | null",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [
        {
          "name": "getProfile",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "getSessionUser",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "logOut",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "OverlayPanelModule",
          "type": "module"
        },
        {
          "name": "AvatarModule",
          "type": "module"
        },
        {
          "name": "Button"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { Session } from '@supabase/supabase-js';\nimport { SessionUserService } from '@/app/presenter/views/shared/services/session-user.service';\nimport { AvatarModule } from 'primeng/avatar';\nimport { Button } from 'primeng/button';\nimport { ButtonComponent } from '@/app/presenter/views/shared/components/design-system/atoms/button/button.component';\nimport { IconComponent } from '@/app/presenter/views/shared/components/design-system/atoms/icon/icon.component';\nimport { LogOutUserCaseService } from '@/app/domain/usecases/user/log-out-user-case.service';\nimport { IAuthUserSession } from '@/app/core/interfaces/auth/Iauth-user-session';\nimport { UserProfileResponse } from '@/app/core/models/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-logged-panel',\n  standalone: true,\n  imports: [\n    OverlayPanelModule,\n    AvatarModule,\n    Button,\n    ButtonComponent,\n    IconComponent,\n  ],\n  templateUrl: './user-logged-panel.component.html',\n  styleUrl: './user-logged-panel.component.scss',\n})\nexport class UserLoggedPanelComponent implements OnInit {\n  sessionUser: Session | null = null;\n  userData: UserProfileResponse | null = null;\n\n  constructor(\n    public sessionUserServiceService: SessionUserService,\n    private logOutUserCaseService: LogOutUserCaseService,\n    public authSupabaseService: IAuthUserSession,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    void this.getSessionUser();\n  }\n\n  async getSessionUser() {\n    this.sessionUser = this.sessionUserServiceService.getUserSession();\n    if (this.sessionUser?.user) {\n      await this.getProfile();\n    }\n  }\n\n  async getProfile() {\n    try {\n      this.userData = await this.authSupabaseService.getUser();\n    } catch {\n      this.userData = null;\n    }\n  }\n\n  async logOut() {\n    await this.logOutUserCaseService.execute();\n    await this.router.navigate(['/']);\n  }\n}\n",
      "styleUrl": "./user-logged-panel.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "sessionUserServiceService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "logOutUserCaseService",
            "type": "LogOutUserCaseService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "authSupabaseService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "sessionUserServiceService",
            "type": "SessionUserService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "logOutUserCaseService",
            "type": "LogOutUserCaseService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authSupabaseService",
            "type": "IAuthUserSession",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<button (click)=\"this.op.toggle($event)\">\n  <p-avatar\n    [label]=\"sessionUser?.user?.email?.at(0)?.toUpperCase()\"\n    styleClass=\"mr-2\"\n    size=\"large\"\n    shape=\"circle\">\n    <p-overlayPanel #op>\n      <div class=\"flex flex-col justify-center\">\n        <span\n          ><app-icon name=\"matPersonRound\" class=\"mr-2\"></app-icon\n          >{{ userData?.profile?.full_name }}</span\n        >\n        <span\n          ><app-icon name=\"matEmailRound\" class=\"mr-2\"></app-icon\n          >{{ sessionUser?.user?.email }}</span\n        >\n      </div>\n      <hr class=\"mt-3\" />\n      <div class=\"mt-5\">\n        <app-button text=\"Cerrar Sesi√≥n\" size=\"small\" (click)=\"logOut()\">\n          <app-icon name=\"matLogOutRound\" class=\"mr-2\"></app-icon>\n        </app-button>\n      </div>\n    </p-overlayPanel>\n  </p-avatar>\n</button>\n"
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "appConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ApplicationConfig",
        "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n    provideNgIconsConfig({\n      size: '2rem',\n    }),\n    provideAnimationsAsync(),\n    ...getAllProviders,\n    importProvidersFrom(\n      NgxsModule.forRoot(stateProviders, {\n        developmentMode: !environment.production,\n      })\n    ),\n    importProvidersFrom(\n      NgxsReduxDevtoolsPluginModule.forRoot({\n        disabled: environment.production,\n      })\n    ),\n    LeafletModule,\n  ],\n}"
      },
      {
        "name": "appRoutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/routing/index.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\n  ...travelAgentRoutes,\n  ...travellerRoutes,\n  ...authRoutes,\n]"
      },
      {
        "name": "authRoutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/routing/auth.routes.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Route[]",
        "defaultValue": "[\n  {\n    path: 'oauth/callback',\n    component: OAuthCallbackComponent,\n  },\n]"
      },
      {
        "name": "cities",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/views/shared/constants/cities.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\n  // Ciudades de Colombia\n  { id: 1, name: 'Bogot√°', countryId: 1 },\n  { id: 2, name: 'Medell√≠n', countryId: 1 },\n  { id: 3, name: 'Cali', countryId: 1 },\n  { id: 4, name: 'Barranquilla', countryId: 1 },\n  { id: 5, name: 'Cartagena', countryId: 1 },\n  { id: 6, name: 'Bucaramanga', countryId: 1 },\n  { id: 7, name: 'Pereira', countryId: 1 },\n  { id: 8, name: 'Manizales', countryId: 1 },\n  { id: 9, name: 'C√∫cuta', countryId: 1 },\n  { id: 10, name: 'Santa Marta', countryId: 1 },\n\n  // Ciudades de otros pa√≠ses de Latinoam√©rica\n  { id: 11, name: 'Buenos Aires', countryId: 2 },\n  { id: 12, name: 'Santiago', countryId: 3 },\n  { id: 13, name: 'Lima', countryId: 4 },\n  { id: 14, name: 'Ciudad de M√©xico', countryId: 5 },\n  { id: 15, name: 'Montevideo', countryId: 6 },\n  { id: 16, name: 'Quito', countryId: 7 },\n  { id: 17, name: 'La Paz', countryId: 8 },\n  { id: 18, name: 'Asunci√≥n', countryId: 9 },\n  { id: 19, name: 'San Jos√©', countryId: 10 },\n\n  // Ciudades de Europa\n  { id: 20, name: 'Madrid', countryId: 11 },\n  { id: 21, name: 'Londres', countryId: 12 },\n  { id: 22, name: 'Par√≠s', countryId: 13 },\n  { id: 23, name: 'Roma', countryId: 14 },\n  { id: 24, name: 'Berl√≠n', countryId: 15 },\n  { id: 25, name: '√Åmsterdam', countryId: 16 },\n  { id: 26, name: 'Viena', countryId: 17 },\n  { id: 27, name: 'Atenas', countryId: 18 },\n  { id: 28, name: 'Lisboa', countryId: 19 },\n\n  // Ciudades de Asia\n  { id: 29, name: 'Tokio', countryId: 20 },\n  { id: 30, name: 'Pek√≠n', countryId: 21 },\n  { id: 31, name: 'Se√∫l', countryId: 22 },\n  { id: 32, name: 'Bangkok', countryId: 23 },\n  { id: 33, name: 'Nueva Delhi', countryId: 24 },\n  { id: 34, name: 'Singapur', countryId: 25 },\n  { id: 35, name: 'Kuala Lumpur', countryId: 26 },\n  { id: 36, name: 'Dub√°i', countryId: 27 },\n  { id: 37, name: 'Hong Kong', countryId: 28 },\n\n  // Ciudades de Estados Unidos\n  { id: 38, name: 'Nueva York', countryId: 29 },\n  { id: 39, name: 'Los √Ångeles', countryId: 29 },\n  { id: 40, name: 'Chicago', countryId: 29 },\n  { id: 41, name: 'Miami', countryId: 29 },\n  { id: 42, name: 'San Francisco', countryId: 29 },\n  { id: 43, name: 'Houston', countryId: 29 },\n  { id: 44, name: 'Las Vegas', countryId: 29 },\n  { id: 45, name: 'Boston', countryId: 29 },\n  { id: 46, name: 'Washington, D.C.', countryId: 29 },\n]"
      },
      {
        "name": "convertEuropeFormatDateToISO8601",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/views/shared/helpers/convertEuropeFormatDateToISO8601.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(date: Date): string => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n\n  return `${year}/${month}/${day}`;\n}"
      },
      {
        "name": "countries",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/views/shared/constants/countries.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\n  { id: 1, name: 'Colombia' },\n  { id: 2, name: 'Argentina' },\n  { id: 3, name: 'Chile' },\n  { id: 4, name: 'Per√∫' },\n  { id: 5, name: 'M√©xico' },\n  { id: 6, name: 'Uruguay' },\n  { id: 7, name: 'Ecuador' },\n  { id: 8, name: 'Bolivia' },\n  { id: 9, name: 'Paraguay' },\n  { id: 10, name: 'Costa Rica' },\n  { id: 11, name: 'Espa√±a' },\n  { id: 12, name: 'Reino Unido' },\n  { id: 13, name: 'Francia' },\n  { id: 14, name: 'Italia' },\n  { id: 15, name: 'Alemania' },\n  { id: 16, name: 'Pa√≠ses Bajos' },\n  { id: 17, name: 'Austria' },\n  { id: 18, name: 'Grecia' },\n  { id: 19, name: 'Portugal' },\n  { id: 20, name: 'Jap√≥n' },\n  { id: 21, name: 'China' },\n  { id: 22, name: 'Corea del Sur' },\n  { id: 23, name: 'Tailandia' },\n  { id: 24, name: 'India' },\n  { id: 25, name: 'Singapur' },\n  { id: 26, name: 'Malasia' },\n  { id: 27, name: 'Emiratos √Årabes Unidos' },\n  { id: 28, name: 'Hong Kong' },\n  { id: 29, name: 'Estados Unidos' },\n]"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.development.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  apiUrl: '',\n  supabaseUrl: 'https://waqqrsuhxfrpriotshcu.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndhcXFyc3VoeGZycHJpb3RzaGN1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjM5NTE2MTYsImV4cCI6MjAzOTUyNzYxNn0.GJ6OIoRO4UiHi3aZs4Cd49FqYVG3KRRphAwaa2GiN8k',\n  redirectOAuthUrl: 'oauth/callback',\n  production: false,\n  apiEmailSender:\n    'https://send-mails-service.onrender.com/send-email-reservation',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  apiUrl: '',\n  supabaseUrl: 'https://waqqrsuhxfrpriotshcu.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndhcXFyc3VoeGZycHJpb3RzaGN1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjM5NTE2MTYsImV4cCI6MjAzOTUyNzYxNn0.GJ6OIoRO4UiHi3aZs4Cd49FqYVG3KRRphAwaa2GiN8k',\n  redirectOAuthUrl: 'oauth/callback',\n  production: false,\n  apiEmailSender:\n    'https://send-mails-service.onrender.com/send-email-reservation',\n}"
      },
      {
        "name": "environmentVariables",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/config/variables/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  supabaseUrl: environment.supabaseUrl,\n  supabaseKey: environment.supabaseKey,\n  redirectOAuthUrl: environment.redirectOAuthUrl,\n  apiEmailSender: environment.apiEmailSender,\n}"
      },
      {
        "name": "getAllProviders",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/factories/providers/index.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Provider[]",
        "defaultValue": "[\n  ...new AuthInjectionFactory().createProviders(),\n  ...new HotelInjectionFactory().createProviders(),\n  ...new RoomInjectionFactory().createProviders(),\n  ...new BookingInjectionFactory().createProviders(),\n  ...new GuestInjectionFactory().createProviders(),\n  ...new UserInjectionFactory().createProviders(),\n  ...new AuthUserSessionInjectionFactory().createProviders(),\n]",
        "rawdescription": "Group all providers to inject in the application, to reduce complexity in the main module.",
        "description": "<p>Group all providers to inject in the application, to reduce complexity in the main module.</p>\n"
      },
      {
        "name": "materialUIIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/icons/providerIcons.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  ...roundMaterialIcons,\n}"
      },
      {
        "name": "roomHotelTypes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/views/shared/constants/room.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\n  { id: '1', value: 'Single Room' },\n  { id: '2', value: 'Double Room' },\n  { id: '3', value: 'Twin Room' },\n  { id: '4', value: 'Suite' },\n  { id: '5', value: 'Junior Suite' },\n  { id: '6', value: 'Deluxe Room' },\n  { id: '7', value: 'Family Room' },\n  { id: '8', value: 'Penthouse Suite' },\n  { id: '9', value: 'Luxury Room' },\n  { id: '10', value: 'Studio Room' },\n]"
      },
      {
        "name": "stateProviders",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/state/index.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[HotelState, SearchHotelsFilterState, RoomState]"
      },
      {
        "name": "travelAgentRoutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/routing/travel-agent.routes.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Route[]",
        "defaultValue": "[\n  {\n    path: 'travel-agent',\n    component: TravelAgentLayoutComponent,\n    canActivate: [AuthGuardTravelAgent],\n    children: [\n      {\n        path: '',\n        component: TravelAgentPageComponent,\n      },\n    ],\n  },\n]"
      },
      {
        "name": "travellerRoutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/presenter/routing/traveller.routes.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Route[]",
        "defaultValue": "[\n  {\n    path: '',\n    component: TravellerLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: TravellerHomePageComponent,\n      },\n    ],\n  },\n]"
      },
      {
        "name": "variablesConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/config/variables/index.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  ...environmentVariables,\n}"
      }
    ],
    "functions": [
      {
        "name": "matchPasswords",
        "file": "src/app/presenter/views/shared/validators/matchPasswords.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "passwordKey",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "confirmPasswordKey",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "ValidatorFn",
        "jsdoctags": [
          {
            "name": "passwordKey",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "confirmPasswordKey",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [
      {
        "name": "ActorRoles",
        "childs": [
          {
            "name": "TRAVELLER",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "traveller"
          },
          {
            "name": "TRAVEL_AGENT",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "travel_agent"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/core/constants/ActorRoles.ts"
      },
      {
        "name": "OauthProviders",
        "childs": [
          {
            "name": "GOOGLE",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "google"
          },
          {
            "name": "FACEBOOK",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "facebook"
          },
          {
            "name": "TWITTER",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "twitter"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/core/constants/OauthProviders.ts"
      },
      {
        "name": "StatusProcessAction",
        "childs": [
          {
            "name": "IDLE",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "idle"
          },
          {
            "name": "LOADING",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "loading"
          },
          {
            "name": "SUCCESS",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "success"
          },
          {
            "name": "ERROR",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "error"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/presenter/models/state/statusProcessAction.ts"
      }
    ],
    "groupedVariables": {
      "src/app/app.config.ts": [
        {
          "name": "appConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ApplicationConfig",
          "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n    provideNgIconsConfig({\n      size: '2rem',\n    }),\n    provideAnimationsAsync(),\n    ...getAllProviders,\n    importProvidersFrom(\n      NgxsModule.forRoot(stateProviders, {\n        developmentMode: !environment.production,\n      })\n    ),\n    importProvidersFrom(\n      NgxsReduxDevtoolsPluginModule.forRoot({\n        disabled: environment.production,\n      })\n    ),\n    LeafletModule,\n  ],\n}"
        }
      ],
      "src/app/presenter/routing/index.ts": [
        {
          "name": "appRoutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/routing/index.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\n  ...travelAgentRoutes,\n  ...travellerRoutes,\n  ...authRoutes,\n]"
        }
      ],
      "src/app/presenter/routing/auth.routes.ts": [
        {
          "name": "authRoutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/routing/auth.routes.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Route[]",
          "defaultValue": "[\n  {\n    path: 'oauth/callback',\n    component: OAuthCallbackComponent,\n  },\n]"
        }
      ],
      "src/app/presenter/views/shared/constants/cities.ts": [
        {
          "name": "cities",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/views/shared/constants/cities.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\n  // Ciudades de Colombia\n  { id: 1, name: 'Bogot√°', countryId: 1 },\n  { id: 2, name: 'Medell√≠n', countryId: 1 },\n  { id: 3, name: 'Cali', countryId: 1 },\n  { id: 4, name: 'Barranquilla', countryId: 1 },\n  { id: 5, name: 'Cartagena', countryId: 1 },\n  { id: 6, name: 'Bucaramanga', countryId: 1 },\n  { id: 7, name: 'Pereira', countryId: 1 },\n  { id: 8, name: 'Manizales', countryId: 1 },\n  { id: 9, name: 'C√∫cuta', countryId: 1 },\n  { id: 10, name: 'Santa Marta', countryId: 1 },\n\n  // Ciudades de otros pa√≠ses de Latinoam√©rica\n  { id: 11, name: 'Buenos Aires', countryId: 2 },\n  { id: 12, name: 'Santiago', countryId: 3 },\n  { id: 13, name: 'Lima', countryId: 4 },\n  { id: 14, name: 'Ciudad de M√©xico', countryId: 5 },\n  { id: 15, name: 'Montevideo', countryId: 6 },\n  { id: 16, name: 'Quito', countryId: 7 },\n  { id: 17, name: 'La Paz', countryId: 8 },\n  { id: 18, name: 'Asunci√≥n', countryId: 9 },\n  { id: 19, name: 'San Jos√©', countryId: 10 },\n\n  // Ciudades de Europa\n  { id: 20, name: 'Madrid', countryId: 11 },\n  { id: 21, name: 'Londres', countryId: 12 },\n  { id: 22, name: 'Par√≠s', countryId: 13 },\n  { id: 23, name: 'Roma', countryId: 14 },\n  { id: 24, name: 'Berl√≠n', countryId: 15 },\n  { id: 25, name: '√Åmsterdam', countryId: 16 },\n  { id: 26, name: 'Viena', countryId: 17 },\n  { id: 27, name: 'Atenas', countryId: 18 },\n  { id: 28, name: 'Lisboa', countryId: 19 },\n\n  // Ciudades de Asia\n  { id: 29, name: 'Tokio', countryId: 20 },\n  { id: 30, name: 'Pek√≠n', countryId: 21 },\n  { id: 31, name: 'Se√∫l', countryId: 22 },\n  { id: 32, name: 'Bangkok', countryId: 23 },\n  { id: 33, name: 'Nueva Delhi', countryId: 24 },\n  { id: 34, name: 'Singapur', countryId: 25 },\n  { id: 35, name: 'Kuala Lumpur', countryId: 26 },\n  { id: 36, name: 'Dub√°i', countryId: 27 },\n  { id: 37, name: 'Hong Kong', countryId: 28 },\n\n  // Ciudades de Estados Unidos\n  { id: 38, name: 'Nueva York', countryId: 29 },\n  { id: 39, name: 'Los √Ångeles', countryId: 29 },\n  { id: 40, name: 'Chicago', countryId: 29 },\n  { id: 41, name: 'Miami', countryId: 29 },\n  { id: 42, name: 'San Francisco', countryId: 29 },\n  { id: 43, name: 'Houston', countryId: 29 },\n  { id: 44, name: 'Las Vegas', countryId: 29 },\n  { id: 45, name: 'Boston', countryId: 29 },\n  { id: 46, name: 'Washington, D.C.', countryId: 29 },\n]"
        }
      ],
      "src/app/presenter/views/shared/helpers/convertEuropeFormatDateToISO8601.ts": [
        {
          "name": "convertEuropeFormatDateToISO8601",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/views/shared/helpers/convertEuropeFormatDateToISO8601.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(date: Date): string => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n\n  return `${year}/${month}/${day}`;\n}"
        }
      ],
      "src/app/presenter/views/shared/constants/countries.ts": [
        {
          "name": "countries",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/views/shared/constants/countries.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\n  { id: 1, name: 'Colombia' },\n  { id: 2, name: 'Argentina' },\n  { id: 3, name: 'Chile' },\n  { id: 4, name: 'Per√∫' },\n  { id: 5, name: 'M√©xico' },\n  { id: 6, name: 'Uruguay' },\n  { id: 7, name: 'Ecuador' },\n  { id: 8, name: 'Bolivia' },\n  { id: 9, name: 'Paraguay' },\n  { id: 10, name: 'Costa Rica' },\n  { id: 11, name: 'Espa√±a' },\n  { id: 12, name: 'Reino Unido' },\n  { id: 13, name: 'Francia' },\n  { id: 14, name: 'Italia' },\n  { id: 15, name: 'Alemania' },\n  { id: 16, name: 'Pa√≠ses Bajos' },\n  { id: 17, name: 'Austria' },\n  { id: 18, name: 'Grecia' },\n  { id: 19, name: 'Portugal' },\n  { id: 20, name: 'Jap√≥n' },\n  { id: 21, name: 'China' },\n  { id: 22, name: 'Corea del Sur' },\n  { id: 23, name: 'Tailandia' },\n  { id: 24, name: 'India' },\n  { id: 25, name: 'Singapur' },\n  { id: 26, name: 'Malasia' },\n  { id: 27, name: 'Emiratos √Årabes Unidos' },\n  { id: 28, name: 'Hong Kong' },\n  { id: 29, name: 'Estados Unidos' },\n]"
        }
      ],
      "src/environments/environment.development.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.development.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  apiUrl: '',\n  supabaseUrl: 'https://waqqrsuhxfrpriotshcu.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndhcXFyc3VoeGZycHJpb3RzaGN1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjM5NTE2MTYsImV4cCI6MjAzOTUyNzYxNn0.GJ6OIoRO4UiHi3aZs4Cd49FqYVG3KRRphAwaa2GiN8k',\n  redirectOAuthUrl: 'oauth/callback',\n  production: false,\n  apiEmailSender:\n    'https://send-mails-service.onrender.com/send-email-reservation',\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  apiUrl: '',\n  supabaseUrl: 'https://waqqrsuhxfrpriotshcu.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndhcXFyc3VoeGZycHJpb3RzaGN1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjM5NTE2MTYsImV4cCI6MjAzOTUyNzYxNn0.GJ6OIoRO4UiHi3aZs4Cd49FqYVG3KRRphAwaa2GiN8k',\n  redirectOAuthUrl: 'oauth/callback',\n  production: false,\n  apiEmailSender:\n    'https://send-mails-service.onrender.com/send-email-reservation',\n}"
        }
      ],
      "src/app/core/config/variables/environment.ts": [
        {
          "name": "environmentVariables",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/config/variables/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  supabaseUrl: environment.supabaseUrl,\n  supabaseKey: environment.supabaseKey,\n  redirectOAuthUrl: environment.redirectOAuthUrl,\n  apiEmailSender: environment.apiEmailSender,\n}"
        }
      ],
      "src/app/core/factories/providers/index.ts": [
        {
          "name": "getAllProviders",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/factories/providers/index.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Provider[]",
          "defaultValue": "[\n  ...new AuthInjectionFactory().createProviders(),\n  ...new HotelInjectionFactory().createProviders(),\n  ...new RoomInjectionFactory().createProviders(),\n  ...new BookingInjectionFactory().createProviders(),\n  ...new GuestInjectionFactory().createProviders(),\n  ...new UserInjectionFactory().createProviders(),\n  ...new AuthUserSessionInjectionFactory().createProviders(),\n]",
          "rawdescription": "Group all providers to inject in the application, to reduce complexity in the main module.",
          "description": "<p>Group all providers to inject in the application, to reduce complexity in the main module.</p>\n"
        }
      ],
      "src/app/presenter/icons/providerIcons.ts": [
        {
          "name": "materialUIIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/icons/providerIcons.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  ...roundMaterialIcons,\n}"
        }
      ],
      "src/app/presenter/views/shared/constants/room.ts": [
        {
          "name": "roomHotelTypes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/views/shared/constants/room.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\n  { id: '1', value: 'Single Room' },\n  { id: '2', value: 'Double Room' },\n  { id: '3', value: 'Twin Room' },\n  { id: '4', value: 'Suite' },\n  { id: '5', value: 'Junior Suite' },\n  { id: '6', value: 'Deluxe Room' },\n  { id: '7', value: 'Family Room' },\n  { id: '8', value: 'Penthouse Suite' },\n  { id: '9', value: 'Luxury Room' },\n  { id: '10', value: 'Studio Room' },\n]"
        }
      ],
      "src/app/presenter/state/index.ts": [
        {
          "name": "stateProviders",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/state/index.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[HotelState, SearchHotelsFilterState, RoomState]"
        }
      ],
      "src/app/presenter/routing/travel-agent.routes.ts": [
        {
          "name": "travelAgentRoutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/routing/travel-agent.routes.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Route[]",
          "defaultValue": "[\n  {\n    path: 'travel-agent',\n    component: TravelAgentLayoutComponent,\n    canActivate: [AuthGuardTravelAgent],\n    children: [\n      {\n        path: '',\n        component: TravelAgentPageComponent,\n      },\n    ],\n  },\n]"
        }
      ],
      "src/app/presenter/routing/traveller.routes.ts": [
        {
          "name": "travellerRoutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/presenter/routing/traveller.routes.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Route[]",
          "defaultValue": "[\n  {\n    path: '',\n    component: TravellerLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: TravellerHomePageComponent,\n      },\n    ],\n  },\n]"
        }
      ],
      "src/app/core/config/variables/index.ts": [
        {
          "name": "variablesConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/config/variables/index.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  ...environmentVariables,\n}"
        }
      ]
    },
    "groupedFunctions": {
      "src/app/presenter/views/shared/validators/matchPasswords.ts": [
        {
          "name": "matchPasswords",
          "file": "src/app/presenter/views/shared/validators/matchPasswords.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "passwordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "confirmPasswordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "ValidatorFn",
          "jsdoctags": [
            {
              "name": "passwordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "confirmPasswordKey",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "src/app/core/constants/ActorRoles.ts": [
        {
          "name": "ActorRoles",
          "childs": [
            {
              "name": "TRAVELLER",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "traveller"
            },
            {
              "name": "TRAVEL_AGENT",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "travel_agent"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/core/constants/ActorRoles.ts"
        }
      ],
      "src/app/core/constants/OauthProviders.ts": [
        {
          "name": "OauthProviders",
          "childs": [
            {
              "name": "GOOGLE",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "google"
            },
            {
              "name": "FACEBOOK",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "facebook"
            },
            {
              "name": "TWITTER",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "twitter"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/core/constants/OauthProviders.ts"
        }
      ],
      "src/app/presenter/models/state/statusProcessAction.ts": [
        {
          "name": "StatusProcessAction",
          "childs": [
            {
              "name": "IDLE",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "idle"
            },
            {
              "name": "LOADING",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "loading"
            },
            {
              "name": "SUCCESS",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "success"
            },
            {
              "name": "ERROR",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "error"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/presenter/models/state/statusProcessAction.ts"
        }
      ]
    },
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/app.config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "appConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/base/mappers.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Mapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/config/variables/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environmentVariables",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/config/variables/index.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "variablesConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/auth-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AuthInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/authUserSession-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AuthUserSessionInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/booking-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "BookingInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/guest-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "GuestInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/hotel-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "HotelInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/index.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getAllProviders",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "src/app/core/factories/providers/notification-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "NotificationInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/room-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RoomInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/factories/providers/user-injection-factory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "UserInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interfaces/auth/Iauth-user-session.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IAuthUserSession",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interfaces/factories/iinjection-factory.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IInjectionFactory",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/interfaces/notifications/inotification-strategy.ts",
        "type": "class",
        "linktype": "classe",
        "name": "INotificationStrategy",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AuthSessionResponse",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "LogOutRequest",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "OAuthInfoRequest",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "OAuthUserMetadata",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UserProfileResponse",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/dtos/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "LoginUserRequestDTO",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/dtos/auth.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RegisterUserRequestDTO",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/dtos/email.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "EmailDto",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/guest.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CreateGuestsBookingHotelRequest",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/hotel.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UpdateHotelRequest",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/notification.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "BookingEmailFormat",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/room.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UpdateRoomRequest",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/auth/authentication.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AuthenticationService",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/notification/mail/email-notification.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "EmailNotificationService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/notification/notification-service.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "NotificationService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/supabase/auth-supabase.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AuthSupabaseService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/supabase/supabase.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SupabaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/validations/bookings/booking-operation-error.ts",
        "type": "class",
        "linktype": "classe",
        "name": "BookingOperationError",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/validations/guests/guest-operation-error.ts",
        "type": "class",
        "linktype": "classe",
        "name": "GuestOperationError",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/validations/hotels/hotel-operation.error.ts",
        "type": "class",
        "linktype": "classe",
        "name": "HotelOperationError",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/validations/rooms/room-operation.error.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RoomOperationError",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/booking.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "BookingDto",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/guest.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GuestDto",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/hotel.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HotelDto",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/hotel.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SearchFilterDto",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/room.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RoomDto",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/data/dtos/user.dto.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UserDto",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/booking/create-booking.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateBookingMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/booking/list-booking.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ListBookingMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/booking/list-detail-booking.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ListBookingMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/guest/create-guests-booking.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateGuestsBookingMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/guest/list-guests-booking.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ListGuestsBookingMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/create-hotel.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateHotelMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/get-all-hotels-by-agent.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllHotelsByAgentMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/get-hotel.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetHotelMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/getHotelsByFilter.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetHotelsByFilterMapper",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/search-filter-hotel.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SearchFilterHotelMapper",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/hotel/update-hotel.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "UpdateHotelMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/room/create-room.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateRoomMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/room/get-all-rooms-by-hotel.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllRoomsByHotelMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/room/get-room.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetRoomMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/room/update-room.mapper.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "UpdateRoomMapper",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/mappers/user/create-user-mapper.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateUserMapperService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/data/repositories/booking/booking-repository.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "BookingRepositoryService",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/data/repositories/guest/guest-repository.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GuestRepositoryService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/data/repositories/hotel/hotel-repository.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "HotelRepositoryService",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/data/repositories/room/room-repository.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "RoomRepositoryService",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/data/repositories/user/user-repository.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "UserRepositoryService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/base/usecase.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UseCase",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/entities/booking.entity.ts",
        "type": "class",
        "linktype": "classe",
        "name": "BookingEntity",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/entities/guest.entity.ts",
        "type": "class",
        "linktype": "classe",
        "name": "GuestEntity",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/entities/hotel.entity.ts",
        "type": "class",
        "linktype": "classe",
        "name": "HotelEntity",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/entities/room.entity.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RoomEntity",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/entities/user.entity.ts",
        "type": "class",
        "linktype": "classe",
        "name": "UserEntity",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/auth-user-adapter.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AuthUserAdapter",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/ibooking.repository.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IBookingRepository",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/iguest.repository.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IGuestRepository",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/ihotel.repository.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IHotelRepository",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/iroom.repository.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IRoomRepository",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/interfaces/iuser-repository.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IUserRepository",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/booking/create-booking-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateBookingUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/booking/create-complete-booking-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateCompleteBookingUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/booking/get-all-booking-reservation-by-agent-id.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllBookingReservationByAgentIdService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/booking/get-booking-detail.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetBookingDetailService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/guest/create-guests-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateGuestsUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/create-hotel-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateHotelUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/delete-hotel-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DeleteHotelUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/edit-hotel-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "EditHotelUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/get-all-hotels-by-agent-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllHotelsByAgentUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/get-all-hotels-by-filter-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllHotelsByFilterUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/hotel/get-hotel-by-id-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetHotelByIdUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/room/create-room-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateRoomUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/room/delete-room-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DeleteRoomUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/room/edit-room-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "EditRoomUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/room/get-all-rooms-by-hotel-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetAllRoomsByHotelUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/room/get-room-by-id-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "GetRoomByIdUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/user/authenticate-user-oauth.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AuthenticateUserOAuthService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/user/complete-data-user-oauth-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CompleteDataUserOAuthUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/user/create-simple-account-user-use-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CreateSimpleAccountUserUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/user/log-out-user-case.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "LogOutUserCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/domain/usecases/user/simple-user-login-use-case-service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SimpleUserLoginUseCaseService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/icons/providerIcons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "materialUIIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/auth-users.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "LoginUserForm",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/auth-users.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RegisterTravellerForm",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/booking.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "BookingRoomFormModel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/booking.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GuestBookingFormModel",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel-filter.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HotelFilterForm",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel-filter.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HotelFilterModel",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AddressCreateHotelForm",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AddressHotelForm",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CreateHotelForm",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/hotel.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "EditHotelForm",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/location.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "City",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/room.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CreateRoomForm",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/models/form/room.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "EditRoomForm",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/routing/auth.routes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "authRoutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/routing/index.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "appRoutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/routing/travel-agent.routes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "travelAgentRoutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/routing/traveller.routes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "travellerRoutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddActualHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddHotels",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "EditHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RemoveActualHotel",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RemoveHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "SetHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/index.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "HotelState",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/hotels/models/index.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HotelStateModel",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/index.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "stateProviders",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddRoom",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddRooms",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "EditRoom",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RemoveRoom",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "SetRooms",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/index.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "RoomState",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/rooms/models/index.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RoomStateModel",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/searchHotelsFilter/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AddActualSearchHotel",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/searchHotelsFilter/actions/index.ts",
        "type": "class",
        "linktype": "classe",
        "name": "RemoveActualSearchHotel",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/searchHotelsFilter/index.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SearchHotelsFilterState",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/state/searchHotelsFilter/models/index.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SearchFilterHotelStateModel",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/auth/oauth-callback/oauth-callback.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "OAuthCallbackComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guest-reservation-item/guest-reservation-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GuestReservationItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guests-reservation-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GuestsReservationListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/guests-reservation-list/guests-reservation-list.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GuestsDynamicDialogConfigData",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/hotels-booking-by-agent-view.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HotelsBookingByAgentViewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/hotels-booking-by-agent-view/reservation-item/reservation-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ReservationItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/create-new-hotel-modal/create-new-hotel-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CreateNewHotelModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/edit-new-hotel-modal/edit-hotel-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "EditHotelModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/edit-new-hotel-modal/edit-hotel-modal.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "EditHotelModalDynamicDialogConfigData",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-configuration/hotel-configuration.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HotelConfigurationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/hotel-item/hotel-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HotelItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/list-hotels/list-hotels.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListHotelsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/hotel/map-modal/map-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MapModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/manage-hotels-view.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ManageHotelsViewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/create-room-dialog/create-room-dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CreateRoomDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/create-room-dialog/create-room-dialog.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CreateRoomModalDynamicDialogConfigData",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/edit-room-dialog/edit-room-dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "EditRoomDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/edit-room-dialog/edit-room-dialog.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "EditRoomModalDynamicDialogConfigData",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/list-rooms.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListRoomsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-hotel-configuration/room-hotel-configuration.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RoomHotelConfigurationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/list-rooms/room-item/room-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RoomItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/components/manage-hotels-view/room/sidebar-rooms-hotel/sidebar-rooms-hotel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SidebarRoomsHotelComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/travel-agent/travel-agent-home-page/travel-agent-page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravelAgentPageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/filter-hotels.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FilterHotelsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-hotels/list-filter-hotels.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListFilterHotelsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/list-filter-item/list-filter-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListFilterItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/filter-hotels/search-filter-hotel-component/search-filter-hotel-component.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SearchFilterHotelComponentComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/add-guests-to-room-reservation/add-guests-to-room-reservation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AddGuestsToRoomReservationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/add-guests-to-room-reservation/add-guests-to-room-reservation.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AddGuestToBookingDynamicDialogConfig",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/generate-reservation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GenerateReservationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/generate-reservation.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GenerateReservationDynamicDialogConfig",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/generate-reservation/rooms-list-to-reverse/rooms-list-to-reverse.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RoomsListToReverseComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/map-hotels/map-hotels.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MapHotelsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/components/map-hotels/map-hotels.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MapPoint",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/pages/traveller/traveller-home-page/traveller-home-page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravellerHomePageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/atoms/google-auth-button/google-auth-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GoogleAuthButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/atoms/increment-decrement-value/increment-decrement-value.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IncrementDecrementValueComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/molecules/user-logged-panel/user-logged-panel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "UserLoggedPanelComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/auth/authentication-form-modal/authentication-form-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AuthenticationFormModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/auth/travel-agenter-authentication-form/travel-agenter-authentication-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravelAgenterAuthenticationFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/auth/traveller-authentication-form/traveller-authentication-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravellerAuthenticationFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/auth/traveller-register-form/traveller-register-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravellerRegisterFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/errors-form-messages/errors-form-messages.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ErrorsFormMessagesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/layout/main-footer/main-footer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MainFooterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/common/organisms/layout/main-header/main-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MainHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/design-system/atoms/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/components/design-system/atoms/icon/icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/constants/cities.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cities",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/constants/countries.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "countries",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/constants/room.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "roomHotelTypes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/guards/auth-guard-travel-agent.service.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "AuthGuardTravelAgent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/helpers/convertEuropeFormatDateToISO8601.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "convertEuropeFormatDateToISO8601",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/layouts/main-layout/main-layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MainLayoutComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/layouts/travel-agent-layout/travel-agent-layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravelAgentLayoutComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/layouts/traveller-layout/traveller-layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TravellerLayoutComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/services/session-user.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SessionUserService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/presenter/views/shared/validators/matchPasswords.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "matchPasswords",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.development.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
